{"version":3,"sources":["../src/commonmark.transform.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;AAEvC,IAAI,iBAAiB,GAAG,CAAA,YAAU;;;AAG9B,QAAI,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,EAAE,CAAC;AACrC,QAAI,MAAM,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC;AACrC,YAAI,EAAE,IAAI;KACb,CAAC,CAAC;;AAEH,WAAO,UAAS,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;AACtC,YAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;AAExC,YAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;;;;AAKhC,WAAG,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;AAEtC,eAAO,GAAG,CAAC;KACd,CAAC;CACL,CAAA,EAAE,CAAC;;AAEJ,iBAAiB,CAAC,QAAQ,GAAG,eAAe,CAAC;;qBAE9B,iBAAiB","file":"commonmark.transform.js","sourcesContent":["\"use strict\";\n\nvar commonmark = require(\"commonmark\");\n\nvar markdownTransform = function(){\n    // Stick reader and writer in a closure so they only get created once.\n\n    let reader = new commonmark.Parser();\n    let writer = new commonmark.HtmlRenderer({\n        safe: true\n    });\n\n    return function(mimetype, data, document) {\n        var div = document.createElement(\"div\");\n\n        var parsed = reader.parse(data);\n\n        // TODO: Any other transformations on the parsed object\n        // See https://github.com/jgm/commonmark.js#usage\n\n        div.innerHTML = writer.render(parsed);\n\n        return div;\n    };\n}();\n\nmarkdownTransform.mimetype = 'text/markdown';\n\nexport default markdownTransform;\n"]}