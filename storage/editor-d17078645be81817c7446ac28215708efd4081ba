{"version":1,"windowDimensions":{"x":1637,"y":222,"width":1280,"height":738,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/Rad/Documents/Dev/CodersCrowd"],"buffers":[{"id":"fb438828aad3d0792640662a94769a8b","text":"<?php\n    class Codes extends CI_Controller\n    {\n        public function __construct()\n        {\n            parent::__construct();\n            $this->check_isvalidated();\n        }\n\n        public function rate()\n        {\n            if (!isset($_POST['idCode'])) {\n                $this->load404page();\n               // exit;\n            } else {\n                $check['idUser'] = $this->tank_auth->get_user_id();\n                $check['code'] = $this->MCodes->getAllCodes_by('idCode', $_POST['idCode']);\n\n                if ($check['idUser'] != $check['code'][0]['idUser']) {\n                    if ($this->input->post('e1') || $this->input->post('e2') || $this->input->post('e3') || $this->input->post('e4') || $this->input->post('e5')) {\n                        $this->MCodes->rateCode();\n                        $this->db->cache_delete_all();\n\n                        $this->MCodes->postNotif(' rated your code : ', $_POST['idCode'], $this->tank_auth->get_user_id());\n                        $this->session->set_flashdata('message', 'Code Rated');\n                //$this->load->helper('url');\n                //redirect('dashboard/');\n                $data['status'] = $this->MCodes->getCodeRate($_POST['idCode']);\n                        $this->load->view('rateview', $data);\n                    }\n                } else {\n                    $data['status'] = $this->MCodes->getCodeRate($_POST['idCode']);\n                    $this->load->view('cheating', $data);\n                }\n            }\n        }\n\n    /**\n     * Send email message of given type (activate, forgot_password, etc.).\n     *\n     * @param\tstring\n     * @param\tstring\n     * @param\tarray\n     */\n    public function _send_email($type, $email, &$data)\n    {\n\n        //original\n        $this->load->library('email');\n        $this->email->from($this->config->item('webmaster_email', 'tank_auth'), $this->config->item('website_name', 'tank_auth'));\n        $this->email->reply_to($this->config->item('webmaster_email', 'tank_auth'), $this->config->item('website_name', 'tank_auth'));\n        $this->email->to($email);\n        $this->email->subject('New Activity at CodersCrowd');\n        $this->email->message($this->load->view('email/'.$type.'-html', $data, true));\n        $this->email->set_alt_message($this->load->view('email/'.$type.'-txt', $data, true));\n        $this->email->send();\n    }\n\n        public function create()\n        {\n            if ($this->input->post('codename')) {\n                $this->MCodes->addCode();\n                $datacode = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    );\n                $this->_send_email('codeadded', 'aradwen@gmail.com', $datacode);\n\n                if ($this->MUsers->checkUserData($this->tank_auth->get_user_id(), 'Score') == 1) {\n                    $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $newscore = $userscore[0]['score'] + 4;\n                    $this->MUsers->updateScore($this->tank_auth->get_user_id(), $newscore);\n                } else {\n                    $this->MUsers->addScore($this->tank_auth->get_user_id(), 4);\n                }\n                $this->db->cache_delete_all();\n\n                $this->session->set_flashdata('message', 'Code Added');\n                //$this->load->helper('url');\n               redirect('dashboard/');\n            } else {\n                $data['pagetitle'] = \"What's your problem today ?\";\n\n                $data['title'] = \"What's your problem today ?\";\n                $data['subtitle'] = ' ... go ahead and make it as clear as possible to get fast help';\n                $data['elementidcontainer'] = 'side-thecrowd';\n                $data['elementid'] = 'side-mycodes';\n                $data['main'] = 'code_add';\n\n                $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                $data['avscore'] = $this->MUsers->getAvScore();\n\n                //$data['codes'] = $this->MCodes->getAllCodes();\n                $data['idUser'] = $this->tank_auth->get_user_id();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['idLanguage'] = $this->MCodes->getCodeLanguage();\n                $data['idCategory'] = $this->MCodes->getCodeCategory();\n                $data['idState'] = $this->MCodes->getCodeState();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('add-code');\n                $this->load->view('footer');\n            }\n        }\n\n        public function delete($id)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n            if ($check['idUser'] == $check['code'][0]['idUser']) {\n                $this->MCodes->deleteCodeFromKB($id);\n                $this->MCodes->deleteCodeSolutions($id);\n                $this->MCodes->deleteCode($id);\n                $this->db->cache_delete_all();\n\n                $this->session->set_flashdata('message', 'Code deleted');\n                redirect('dashboard/');\n            } else {\n                echo \"<script>alert('This Code is not yours you cannot delete it');</script>\";\n                echo \"<script language='javascript'> window.location.href = '\".base_url().\"dashboard/'</script>\";\n            }\n        }\n\n        public function acceptsolution($id)\n        {\n            $solution = $this->MCodes->getsolution($id);\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $solution[0]['idCode']);\n            if ($check['idUser'] == $check['code'][0]['idUser']) {\n                $this->MCodes->addtoknowledgebase($solution[0]['idCode']);\n                $this->MCodes->updateCodeState($solution[0]['idCode']);\n                $this->MCodes->updateSolutionWinner($solution[0]['idtempsolution']);\n\n                      //  $this->db->cache_delete_all();\n\n        $this->session->set_flashdata('message', 'Solution Accepted');\n                redirect('dashboard/');\n            } else {\n                echo \"<script>alert('This Code is not yours you cannot delete it');</script>\";\n                $data['codes'] = $this->MCodes->getAllCodes();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('dashboard');\n                $this->load->view('footer');\n            }\n        }\n\n        public function edit($id = 0)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n\n            //print_r($check['idUser']);\n            //print_r($check['code'][0][\"idUser\"]);\n\n            if (sizeof($check['code']) == 0) {\n                $this->load404page();\n            } else {\n                if ($this->input->post('codename')) {\n                    $this->MCodes->updateCode();\n\n                    $this->db->cache_delete_all();\n\n                    $this->session->set_flashdata('message', 'Code updated');\n                //$this->load->helper('url');\n                redirect('dashboard/');\n                } elseif ($check['idUser'] == $check['code'][0]['idUser']) {\n                    $data['pagetitle'] = $check['code'][0]['codename'];\n\n                    $data['title'] = 'Edit Code';\n                    $data['subtitle'] = ' ... go ahead and make it as clear as possible to get fast help';\n                    $data['currentuser'] = $this->tank_auth->get_user_id();\n                    $data['elementidcontainer'] = 'side-thecrowd';\n                    $data['elementid'] = 'side-mycodes';\n                //$data['main'] = 'code_edit';\n                //$data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                //$data['totalusersnumbers'] = $this->MCodes->countmembers();\n                //$data['numberofsolutionsposted']=$this->MCodes->NumberOfSolutionPosted($id);\n                //$data['totalsolutions'] = $this->MCodes->countsolutions();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                    $data['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n                    $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode', $id);\n                    $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $data['avscore'] = $this->MUsers->getAvScore();\n\n                //$data['codes'] = $this->MCodes->getAllCodes();\n                $this->load->vars($data);\n                    $this->load->view('header');\n                    $this->load->view('edit-code');\n                    $this->load->view('footer');\n                } else {\n                    $this->load404page();\n                }\n            }\n        }\n\n        public function numberOfDays($datecol)\n        {\n            $dateSeconds = strtotime($datecol.' EST');\n\n            $now = strtotime(date('Y-m-d H:i:s', now()));\n            $seconds = $now - $dateSeconds;\n                    //calcualte the number of days\n                    $days = $seconds / (60 * 60 * 24);\n\n            return intval($days);\n        }\n\n        public function solve($id = 0)\n        {\n            //$this->benchmark->mark('code_start');\n            //$this->output->cache(5);\n            $codeposter = $this->MCodes->getCodePoster($id);\n            //$notifythisuser = $codeposter[0]['email'];\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n\n            //echo($check['idUser']);\n            //echo($check['code'][0]['idCode']);\n\n                if (sizeof($check['code']) == 0) {\n                    $this->load404page();\n                }\n\n            if ($this->input->post('codename')) {\n                $dayselapsed = $this->numberOfDays($this->input->post('timeadded'));\n\n                $this->MCodes->solveCode();\n\n                $datacode = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    );\n                $this->_send_email('solutionadded', 'aradwen@gmail.com', $datacode);\n                //$this->_send_email('solutionadded', $notifythisuser, $datacode);\n\n                    if ($dayselapsed - 7 > 0) {\n                        if ($this->MUsers->checkUserData($this->tank_auth->get_user_id(), 'Score') == 1) {\n                            $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                            $newscore = $userscore[0]['score'] + 1;\n                            $this->MUsers->updateScore($this->tank_auth->get_user_id(), $newscore);\n                        } else {\n                            $this->MUsers->addScore($this->tank_auth->get_user_id(), 1);\n                        }\n                    } else {\n                        if ($this->MUsers->checkUserData($this->tank_auth->get_user_id(), 'Score') == 1) {\n                            $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                            $newscore = $userscore[0]['score'] + 10;\n                            $this->MUsers->updateScore($this->tank_auth->get_user_id(), $newscore);\n                        } else {\n                            $this->MUsers->addScore($this->tank_auth->get_user_id(), 10);\n                        }\n                    }\n\n                $this->db->cache_delete_all();\n\n                $this->MCodes->postNotif(' added a Hack to: ', $this->input->post('id'), $this->tank_auth->get_user_id());\n                $this->session->set_flashdata('message', 'Solution Added');\n                    //$this->load->helper('url');\n                    //redirect('dashboard/');\n            } else {\n                $data['pagetitle'] = 'Solve That Code';\n\n                $data['title'] = 'Solve That Code';\n                        //$data['main'] = 'code_edit';\n                        $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                $data['totalusersnumbers'] = $this->MCodes->countmembers();\n                $data['numberofsolutionsposted'] = $this->MCodes->NumberOfSolutionPosted($id);\n                $data['totalsolutions'] = $this->MCodes->countsolutions();\n\n                $data['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n                        //$data['similarcodes'] = $this->MCodes->getSimilarCodes($data['code'][0]['codename']);\n                        $data['codes'] = $this->MCodes->getAllCodes();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n\n                $data['codeposter'] = $this->MCodes->getCodePoster($id);\n                $data['codeposterpostnum'] = $this->MUsers->count_byuser('Code', $data['codeposter'][0]['idUser']);\n                $data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n\n                    //get solutions to display below the code\n                        $data['solutions'] = $this->MCodes->getCodeSolution($id);\n                       // $data['contributorname'] = $this->MCodes->getContributorName($id);\n                        $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode', $id);\n                $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                $data['avscore'] = $this->MUsers->getAvScore();\n\n                $data['subtitle'] = ' .. and write something awesome !';\n                $data['elementid'] = 'side-allcodes';\n                $data['elementidcontainer'] = 'side-thecrowd';\n\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('solve-code');\n                $this->load->view('footer');\n            }\n            //$this->benchmark->mark('code_end');\n        }\n\n        public function view($id = 0)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n\n            if ($this->MUsers->checkUserData($check['idUser'], 'User_data') == 0) {\n                $this->MUsers->createTempUserData($check['idUser']);\n                $this->db->cache_delete_all();\n            }\n\n            $data['vote'] = $this->MCodes->checkIfVoted($check['idUser'], $id);\n\n            if (sizeof($check['code']) == 0) {\n                $this->load404page();\n            } else {\n                if ($check['idUser'] == $check['code'][0]['idUser']) {\n                    $this->MUsers->updateNotifications($id);\n                    $this->db->cache_delete_all();\n                }\n                     //$this->db->cache_on();\n\n                $data['pagetitle'] = $check['code'][0]['codename'];\n\n                $data['title'] = 'Code Details';\n                $data['subtitle'] = ' ... Where do you think the problem is ? Can you help ?';\n                $data['elementidcontainer'] = 'side-thecrowd';\n                $data['elementid'] = 'side-allcodes';\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n                $data['codcat'] = $this->MCodes->getSpecificCodeCategory($id);\n                $data['solutions'] = $this->MCodes->getCodeSolution($id);\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $data['codeposter'] = $this->MCodes->getCodePoster($id);\n                $data['codeposterpostnum'] = $this->MUsers->count_byuser('Code', $data['codeposter'][0]['idUser']);\n                $data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n\n                $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                $data['totalusersnumbers'] = $this->MCodes->countmembers();\n                $data['numberofsolutionsposted'] = $this->MCodes->NumberOfSolutionPosted($id);\n                $data['totalsolutions'] = $this->MCodes->countsolutions();\n\n                $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                $data['avscore'] = $this->MUsers->getAvScore();\n\n                $data['moderation'] = $this->MUsers->getUserData_by('idUser', $this->tank_auth->get_user_id());\n\n                $data['coderatestats'] = $this->MCodes->getCodeRate($id);\n                $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode', $id);\n\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('view-code');\n                $this->load->view('footer');\n            }\n        }\n\n        public function viewall($id = 0)\n        {\n            $credentials['idUser'] = $this->tank_auth->get_user_id();\n            $credentials['fname'] = $this->tank_auth->get_fname();\n            $credentials['lname'] = $this->tank_auth->get_lname();\n            $credentials['username'] = $this->tank_auth->get_username();\n\n        // $this->load->view('dashboard',$credentials);\n        //print_r($credentials['idUser']);\n         //test highcharts\n\n                  $this->db->cache_on();\n\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            $data['codes'] = $this->MCodes->getAllCodes2();\n            $data['pagetitle'] = 'CC Codes';\n\n            $data['title'] = 'CC Codes';\n            $data['subtitle'] = '..Pick And Solve';\n            $data['elementidcontainer'] = 'side-thecrowd';\n            $data['elementid'] = 'side-allcodes';\n\n            $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n        //data['numberofcodes'] = $this->MUsers->count_byuser('Code',$this->tank_auth->get_user_id(););\n        //$data['numberofallcodes'] = $this->MCodes->getAllCodes();\n        //$data['numberOfCodesInteractedWith'] = $this->MUsers->numberOfCodesInteractedWith($this->tank_auth->get_user_id(););\n        //$data['allmembers'] = $this->MCodes->countmembers();\n        //$data['myconnections'] = $this->MUsers->myConnections($this->tank_auth->get_user_id(););\n\n        //$data['totalnumbofsolutions'] = $this->MCodes->countsolutions();\n        $this->load->view('header', $data);\n            $this->load->view('view-all-codes', $data);\n            $this->load->view('footer');\n        }\n\n        public function mycodes($id = 0)\n        {\n            $this->db->cache_on();\n\n            $credentials['idUser'] = $this->tank_auth->get_user_id();\n            $credentials['fname'] = $this->tank_auth->get_fname();\n            $credentials['lname'] = $this->tank_auth->get_lname();\n            $credentials['username'] = $this->tank_auth->get_username();\n\n        // $this->load->view('dashboard',$credentials);\n        //print_r($credentials['idUser']);\n         //test highcharts\n\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            $data['codes'] = $this->MCodes->getAllCodes_by2withsolutioncount('User.idUser', $this->tank_auth->get_user_id());\n            $data['pagetitle'] = 'My Codes';\n\n            $data['title'] = 'My Codes';\n            $data['subtitle'] = '';\n            $data['elementidcontainer'] = 'side-thecrowd';\n            $data['elementid'] = 'side-mycodes';\n\n        //data['numberofcodes'] = $this->MUsers->count_byuser('Code',$this->tank_auth->get_user_id(););\n        //$data['numberofallcodes'] = $this->MCodes->getAllCodes();\n        //$data['numberOfCodesInteractedWith'] = $this->MUsers->numberOfCodesInteractedWith($this->tank_auth->get_user_id(););\n        //$data['allmembers'] = $this->MCodes->countmembers();\n        //$data['myconnections'] = $this->MUsers->myConnections($this->tank_auth->get_user_id(););\n\n        //$data['totalnumbofsolutions'] = $this->MCodes->countsolutions();\n        $this->load->view('header', $data);\n            $this->load->view('mycodes', $data);\n            $this->load->view('footer');\n        }\n\n        private function check_isvalidated()\n        {\n            if (!$this->tank_auth->is_logged_in()) {\n                redirect('/auth/login/');\n            }\n        }\n\n        public function getCodersEngagedWithCode($id = 0)\n        {\n            $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n            $data['totalusersnumbers'] = $this->MCodes->countmembers();\n            $this->load->vars($data);\n            $this->load->view('edit-code');\n            $this->load->view('solve-code');\n            $this->load->view('view-code');\n        }\n\n        public function load404page()\n        {\n            $this->db->cache_on();\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            //$check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //if($check['idUser']==$check['code'][0][\"idUser\"])\n            //{\n             //   $this->MUsers->updateNotifications($id);\n            //}\n        $data['pagetitle'] = 'Error';\n\n            $data['title'] = 'Nuts !';\n            $data['subtitle'] = ' ... Something went wrong !';\n            $data['elementidcontainer'] = 'side-thecrowd';\n            $data['elementid'] = 'side-allcodes';\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            //$data['codeposter'] = $this->MCodes->getCodePoster($id);\n            //$data['codeposterpostnum'] = $this->MUsers->count_byuser('Code',$data['codeposter'][0]['idUser']);\n            //$data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n             $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('404');\n            $this->load->view('footer');\n        }\n\n        public function stats()\n        {\n            $this->db->cache_on();\n\n            $data['lang'] = $this->MCodes->alllang();\n            $data['cat'] = $this->MCodes->alltrend();\n            $data['codestime'] = $this->MCodes->codegraph();\n            $data['solutiontime'] = $this->MCodes->solutiongraph();\n            $data['categorystats'] = $this->MCodes->CategoryStats();\n            $data['pagetitle'] = \"Let's count !\";\n\n            $data['title'] = \"Let's count !\";\n            $data['subtitle'] = ' ... you see a trend ?';\n            $data['elementidcontainer'] = 'side-stats';\n            $data['elementid'] = 'side-codestats';\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n\n            $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('code-stats');\n            $this->load->view('footer');\n        }\n\n        /*function mark()\n        {\n\n            $data['pagetitle'] = \"Let's count !\";\n\n            $data['title'] = \"Let's count !\";\n            $data['subtitle'] = \" ... you see a trend ?\";\n            $data['elementidcontainer'] = \"side-stats\";\n            $data['elementid'] = \"side-codestats\";\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n\n\n             $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('testmark');\n            $this->load->view('footer');\n        }*/\n\n        public function cc_execute($cmd, $stdin = null, $timeout = 1)\n        {\n            $proc = proc_open(\n                $cmd,\n                array(array('pipe', 'r'), array('pipe', 'w'), array('pipe', 'w')),\n                 $pipes\n            );\n        //var_dump($pipes);\n            if (isset($stdin)) {\n                fwrite($pipes[0], $stdin);\n            }\n            fclose($pipes[0]);\n\n            stream_set_timeout($pipes[1], 0);\n            stream_set_timeout($pipes[2], 0);\n\n            $stdout = '';\n            $stderr = '';\n            $out = '';\n\n            $start = microtime();\n\n            while ($data = fread($pipes[1], 256000)) {\n                $meta = stream_get_meta_data($pipes[1]);\n                //$meta = stream_get_contents($pipes[1],256000);\n                if (microtime() - $start > $timeout) {\n                    echo 'Timed out, the task seems to be long ..';\n                    break;\n                }\n            //echo microtime();\n                if ($meta['timed_out']) {\n                    continue;\n                }\n                $stdout .= $data;\n                echo $data;\n            }\n\n            $stdout .= stream_get_contents($pipes[1]);\n            $stderr .= stream_get_contents($pipes[2]);\n            $out .= proc_close($proc);\n\n            //echo $stderr;\n        }\n\n        public function testecho()\n        {\n            $toto = $this->input->post('codesource');\n            echo $toto;\n        }\n        public function RunCode($codezone)\n        {\n            $this->load->helper('file');\n\n            //$fp = fopen(\"/home/rad/public/coderscrowd.com/public/forest/userinput/code.py\",\"w\") or die(\"can't create file\");\n            //foreach ($_POST as $key => $value)\n            //{\n              //  fwrite($fp,$value);\n              //write_file('/home/rad/public/coderscrowd.com/public/forest/userinput/test.py', $this->input->post('codesource'));\n\n            $user = $this->input->post('sender');\n            $language = $this->input->post('lang');\n\n            if ($language == 'perl') {\n                $ext = 'pl';\n            }\n            if ($language == 'python') {\n                $ext = 'py';\n            }\n            if ($language == 'r') {\n                $ext = 'R';\n            }\n            if ($language == 'shell') {\n                $ext = 'sh';\n            }\n\n            write_file('/home/rad/public/coderscrowd.com/public/forest/userinput/'.$user.'code.'.$ext, $this->input->post($codezone));\n\n            //} //fwrite($fp,\"kjhkjh\");\n            //fclose($fp);\n\n            //this will be replace with a dynamic unique ID later\n\n            $container_name = 'container_'.$user.strtotime('now');\n\n            //run command that execute docker\n\n            $command = 'sh /home/rad/public/coderscrowd.com/public/forest/runcode.sh '.$container_name.' '.$user.' '.$language;\n            //$command = \"/usr/bin/python /Applications/XAMPP/xamppfiles/htdocs/current-linode/\".$user.\"test.py 2>&1\";\n            $this->cc_execute($command);\n        }\n\n        public function loadmodes()\n        {\n            //$this->carabiner->css('style.css');\n        }\n    }\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"6":{"range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"7":{"range":{"start":{"row":6,"column":0},"end":{"row":7,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"8":{"range":{"start":{"row":9,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"9":{"range":{"start":{"row":14,"column":0},"end":{"row":17,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"10":{"range":{"start":{"row":18,"column":0},"end":{"row":22,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"11":{"range":{"start":{"row":23,"column":0},"end":{"row":25,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"12":{"range":{"start":{"row":28,"column":0},"end":{"row":34,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"13":{"range":{"start":{"row":34,"column":0},"end":{"row":34,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"14":{"range":{"start":{"row":37,"column":0},"end":{"row":46,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"15":{"range":{"start":{"row":47,"column":0},"end":{"row":61,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"16":{"range":{"start":{"row":62,"column":0},"end":{"row":64,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"17":{"range":{"start":{"row":67,"column":0},"end":{"row":68,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"18":{"range":{"start":{"row":69,"column":0},"end":{"row":73,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"19":{"range":{"start":{"row":76,"column":0},"end":{"row":77,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"20":{"range":{"start":{"row":79,"column":0},"end":{"row":80,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"21":{"range":{"start":{"row":83,"column":0},"end":{"row":86,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"22":{"range":{"start":{"row":88,"column":0},"end":{"row":90,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"23":{"range":{"start":{"row":105,"column":0},"end":{"row":106,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"24":{"range":{"start":{"row":108,"column":0},"end":{"row":114,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"25":{"range":{"start":{"row":115,"column":0},"end":{"row":121,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"26":{"range":{"start":{"row":123,"column":0},"end":{"row":124,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"27":{"range":{"start":{"row":124,"column":0},"end":{"row":124,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"28":{"range":{"start":{"row":127,"column":0},"end":{"row":132,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"29":{"range":{"start":{"row":135,"column":0},"end":{"row":139,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"30":{"range":{"start":{"row":146,"column":0},"end":{"row":147,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"31":{"range":{"start":{"row":149,"column":0},"end":{"row":150,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"32":{"range":{"start":{"row":150,"column":0},"end":{"row":150,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"33":{"range":{"start":{"row":152,"column":0},"end":{"row":153,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"34":{"range":{"start":{"row":157,"column":0},"end":{"row":162,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"35":{"range":{"start":{"row":163,"column":0},"end":{"row":164,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"36":{"range":{"start":{"row":165,"column":0},"end":{"row":166,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"37":{"range":{"start":{"row":168,"column":0},"end":{"row":176,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"38":{"range":{"start":{"row":182,"column":0},"end":{"row":186,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"39":{"range":{"start":{"row":189,"column":0},"end":{"row":195,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"40":{"range":{"start":{"row":198,"column":0},"end":{"row":201,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"41":{"range":{"start":{"row":202,"column":0},"end":{"row":204,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"42":{"range":{"start":{"row":205,"column":0},"end":{"row":205,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"43":{"range":{"start":{"row":207,"column":0},"end":{"row":211,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"44":{"range":{"start":{"row":218,"column":0},"end":{"row":219,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"45":{"range":{"start":{"row":223,"column":0},"end":{"row":224,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"46":{"range":{"start":{"row":224,"column":0},"end":{"row":224,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"47":{"range":{"start":{"row":227,"column":0},"end":{"row":229,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"48":{"range":{"start":{"row":230,"column":0},"end":{"row":231,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"49":{"range":{"start":{"row":232,"column":0},"end":{"row":234,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"50":{"range":{"start":{"row":238,"column":0},"end":{"row":254,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"51":{"range":{"start":{"row":256,"column":0},"end":{"row":257,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"52":{"range":{"start":{"row":258,"column":0},"end":{"row":260,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"53":{"range":{"start":{"row":262,"column":0},"end":{"row":264,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"54":{"range":{"start":{"row":265,"column":0},"end":{"row":266,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"55":{"range":{"start":{"row":268,"column":0},"end":{"row":271,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"56":{"range":{"start":{"row":272,"column":0},"end":{"row":273,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"57":{"range":{"start":{"row":275,"column":0},"end":{"row":276,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"58":{"range":{"start":{"row":277,"column":0},"end":{"row":280,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"59":{"range":{"start":{"row":285,"column":0},"end":{"row":288,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"60":{"range":{"start":{"row":289,"column":0},"end":{"row":292,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"61":{"range":{"start":{"row":293,"column":0},"end":{"row":298,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"62":{"range":{"start":{"row":298,"column":0},"end":{"row":298,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"63":{"range":{"start":{"row":301,"column":0},"end":{"row":302,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"64":{"range":{"start":{"row":302,"column":0},"end":{"row":302,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"65":{"range":{"start":{"row":304,"column":0},"end":{"row":305,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"66":{"range":{"start":{"row":306,"column":0},"end":{"row":308,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"67":{"range":{"start":{"row":308,"column":0},"end":{"row":308,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"68":{"range":{"start":{"row":310,"column":0},"end":{"row":320,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"69":{"range":{"start":{"row":322,"column":0},"end":{"row":323,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"70":{"range":{"start":{"row":324,"column":0},"end":{"row":336,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"71":{"range":{"start":{"row":337,"column":0},"end":{"row":341,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"72":{"range":{"start":{"row":342,"column":0},"end":{"row":344,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"73":{"range":{"start":{"row":345,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"74":{"range":{"start":{"row":347,"column":0},"end":{"row":349,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"75":{"range":{"start":{"row":350,"column":0},"end":{"row":355,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"76":{"range":{"start":{"row":357,"column":0},"end":{"row":358,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"77":{"range":{"start":{"row":359,"column":0},"end":{"row":363,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"78":{"range":{"start":{"row":370,"column":0},"end":{"row":374,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"79":{"range":{"start":{"row":375,"column":0},"end":{"row":379,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"80":{"range":{"start":{"row":380,"column":0},"end":{"row":382,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"81":{"range":{"start":{"row":390,"column":0},"end":{"row":393,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"82":{"range":{"start":{"row":395,"column":0},"end":{"row":396,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"83":{"range":{"start":{"row":397,"column":0},"end":{"row":398,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"84":{"range":{"start":{"row":399,"column":0},"end":{"row":403,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"85":{"range":{"start":{"row":407,"column":0},"end":{"row":407,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"86":{"range":{"start":{"row":409,"column":0},"end":{"row":410,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"87":{"range":{"start":{"row":411,"column":0},"end":{"row":415,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"88":{"range":{"start":{"row":416,"column":0},"end":{"row":420,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"89":{"range":{"start":{"row":428,"column":0},"end":{"row":431,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"90":{"range":{"start":{"row":433,"column":0},"end":{"row":438,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"91":{"range":{"start":{"row":440,"column":0},"end":{"row":441,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"92":{"range":{"start":{"row":450,"column":0},"end":{"row":453,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"93":{"range":{"start":{"row":460,"column":0},"end":{"row":461,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"94":{"range":{"start":{"row":462,"column":0},"end":{"row":466,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"95":{"range":{"start":{"row":474,"column":0},"end":{"row":475,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"96":{"range":{"start":{"row":476,"column":0},"end":{"row":480,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"97":{"range":{"start":{"row":482,"column":0},"end":{"row":483,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"98":{"range":{"start":{"row":484,"column":0},"end":{"row":485,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"99":{"range":{"start":{"row":494,"column":0},"end":{"row":497,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"100":{"range":{"start":{"row":502,"column":0},"end":{"row":504,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"101":{"range":{"start":{"row":505,"column":0},"end":{"row":507,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"102":{"range":{"start":{"row":532,"column":0},"end":{"row":533,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"103":{"range":{"start":{"row":534,"column":0},"end":{"row":535,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"104":{"range":{"start":{"row":536,"column":0},"end":{"row":537,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"105":{"range":{"start":{"row":540,"column":0},"end":{"row":542,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"106":{"range":{"start":{"row":549,"column":0},"end":{"row":551,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"107":{"range":{"start":{"row":554,"column":0},"end":{"row":555,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"108":{"range":{"start":{"row":557,"column":0},"end":{"row":559,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"109":{"range":{"start":{"row":562,"column":0},"end":{"row":565,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"110":{"range":{"start":{"row":573,"column":0},"end":{"row":573,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"111":{"range":{"start":{"row":576,"column":0},"end":{"row":583,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"112":{"range":{"start":{"row":594,"column":0},"end":{"row":596,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"113":{"range":{"start":{"row":597,"column":0},"end":{"row":599,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"114":{"range":{"start":{"row":600,"column":0},"end":{"row":602,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"115":{"range":{"start":{"row":603,"column":0},"end":{"row":605,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"116":{"range":{"start":{"row":607,"column":0},"end":{"row":608,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"117":{"range":{"start":{"row":614,"column":0},"end":{"row":615,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"118":{"range":{"start":{"row":618,"column":0},"end":{"row":619,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"119":{"range":{"start":{"row":621,"column":0},"end":{"row":622,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"120":{"range":{"start":{"row":623,"column":0},"end":{"row":625,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"121":{"range":{"start":{"row":626,"column":0},"end":{"row":626,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"122":{"range":{"start":{"row":627,"column":0},"end":{"row":627,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"123":{"range":{"start":{"row":433,"column":43},"end":{"row":433,"column":44}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"124":{"range":{"start":{"row":433,"column":42},"end":{"row":433,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"244":{"range":{"start":{"row":3,"column":0},"end":{"row":4,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"245":{"range":{"start":{"row":6,"column":0},"end":{"row":7,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"246":{"range":{"start":{"row":9,"column":0},"end":{"row":12,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"247":{"range":{"start":{"row":14,"column":0},"end":{"row":17,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"248":{"range":{"start":{"row":18,"column":0},"end":{"row":22,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"249":{"range":{"start":{"row":23,"column":0},"end":{"row":25,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"250":{"range":{"start":{"row":28,"column":0},"end":{"row":34,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"251":{"range":{"start":{"row":34,"column":0},"end":{"row":34,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"252":{"range":{"start":{"row":37,"column":0},"end":{"row":46,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"253":{"range":{"start":{"row":47,"column":0},"end":{"row":61,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"254":{"range":{"start":{"row":62,"column":0},"end":{"row":64,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"255":{"range":{"start":{"row":67,"column":0},"end":{"row":68,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"256":{"range":{"start":{"row":69,"column":0},"end":{"row":73,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"257":{"range":{"start":{"row":76,"column":0},"end":{"row":77,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"258":{"range":{"start":{"row":79,"column":0},"end":{"row":80,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"259":{"range":{"start":{"row":83,"column":0},"end":{"row":86,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"260":{"range":{"start":{"row":88,"column":0},"end":{"row":90,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"261":{"range":{"start":{"row":105,"column":0},"end":{"row":106,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"262":{"range":{"start":{"row":108,"column":0},"end":{"row":114,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"263":{"range":{"start":{"row":115,"column":0},"end":{"row":121,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"264":{"range":{"start":{"row":123,"column":0},"end":{"row":124,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"265":{"range":{"start":{"row":124,"column":0},"end":{"row":124,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"266":{"range":{"start":{"row":127,"column":0},"end":{"row":132,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"267":{"range":{"start":{"row":135,"column":0},"end":{"row":139,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"268":{"range":{"start":{"row":146,"column":0},"end":{"row":147,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"269":{"range":{"start":{"row":149,"column":0},"end":{"row":150,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"270":{"range":{"start":{"row":150,"column":0},"end":{"row":150,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"271":{"range":{"start":{"row":152,"column":0},"end":{"row":153,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"272":{"range":{"start":{"row":157,"column":0},"end":{"row":162,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"273":{"range":{"start":{"row":163,"column":0},"end":{"row":164,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"274":{"range":{"start":{"row":165,"column":0},"end":{"row":166,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"275":{"range":{"start":{"row":168,"column":0},"end":{"row":176,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"276":{"range":{"start":{"row":182,"column":0},"end":{"row":186,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"277":{"range":{"start":{"row":189,"column":0},"end":{"row":195,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"278":{"range":{"start":{"row":198,"column":0},"end":{"row":201,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"279":{"range":{"start":{"row":202,"column":0},"end":{"row":204,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"280":{"range":{"start":{"row":205,"column":0},"end":{"row":205,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"281":{"range":{"start":{"row":207,"column":0},"end":{"row":211,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"282":{"range":{"start":{"row":218,"column":0},"end":{"row":219,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"283":{"range":{"start":{"row":223,"column":0},"end":{"row":224,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"284":{"range":{"start":{"row":224,"column":0},"end":{"row":224,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"285":{"range":{"start":{"row":227,"column":0},"end":{"row":229,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"286":{"range":{"start":{"row":230,"column":0},"end":{"row":231,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"287":{"range":{"start":{"row":232,"column":0},"end":{"row":234,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"288":{"range":{"start":{"row":238,"column":0},"end":{"row":254,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"289":{"range":{"start":{"row":256,"column":0},"end":{"row":257,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"290":{"range":{"start":{"row":258,"column":0},"end":{"row":260,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"291":{"range":{"start":{"row":262,"column":0},"end":{"row":264,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"292":{"range":{"start":{"row":265,"column":0},"end":{"row":266,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"293":{"range":{"start":{"row":268,"column":0},"end":{"row":271,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"294":{"range":{"start":{"row":272,"column":0},"end":{"row":273,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"295":{"range":{"start":{"row":275,"column":0},"end":{"row":276,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"296":{"range":{"start":{"row":277,"column":0},"end":{"row":280,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"297":{"range":{"start":{"row":285,"column":0},"end":{"row":288,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"298":{"range":{"start":{"row":289,"column":0},"end":{"row":292,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"299":{"range":{"start":{"row":293,"column":0},"end":{"row":298,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"300":{"range":{"start":{"row":298,"column":0},"end":{"row":298,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"301":{"range":{"start":{"row":301,"column":0},"end":{"row":302,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"302":{"range":{"start":{"row":302,"column":0},"end":{"row":302,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"303":{"range":{"start":{"row":304,"column":0},"end":{"row":305,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"304":{"range":{"start":{"row":306,"column":0},"end":{"row":308,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"305":{"range":{"start":{"row":308,"column":0},"end":{"row":308,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"306":{"range":{"start":{"row":310,"column":0},"end":{"row":320,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"307":{"range":{"start":{"row":322,"column":0},"end":{"row":323,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"308":{"range":{"start":{"row":324,"column":0},"end":{"row":336,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"309":{"range":{"start":{"row":337,"column":0},"end":{"row":341,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"310":{"range":{"start":{"row":342,"column":0},"end":{"row":344,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"311":{"range":{"start":{"row":345,"column":0},"end":{"row":346,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"312":{"range":{"start":{"row":347,"column":0},"end":{"row":349,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"313":{"range":{"start":{"row":350,"column":0},"end":{"row":355,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"314":{"range":{"start":{"row":357,"column":0},"end":{"row":358,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"315":{"range":{"start":{"row":359,"column":0},"end":{"row":363,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"316":{"range":{"start":{"row":370,"column":0},"end":{"row":374,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"317":{"range":{"start":{"row":375,"column":0},"end":{"row":379,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"318":{"range":{"start":{"row":380,"column":0},"end":{"row":382,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"319":{"range":{"start":{"row":390,"column":0},"end":{"row":393,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"320":{"range":{"start":{"row":395,"column":0},"end":{"row":396,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"321":{"range":{"start":{"row":397,"column":0},"end":{"row":398,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"322":{"range":{"start":{"row":399,"column":0},"end":{"row":403,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"323":{"range":{"start":{"row":407,"column":0},"end":{"row":407,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"324":{"range":{"start":{"row":409,"column":0},"end":{"row":410,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"325":{"range":{"start":{"row":411,"column":0},"end":{"row":415,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"326":{"range":{"start":{"row":416,"column":0},"end":{"row":420,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"327":{"range":{"start":{"row":428,"column":0},"end":{"row":431,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"328":{"range":{"start":{"row":433,"column":0},"end":{"row":438,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"329":{"range":{"start":{"row":440,"column":0},"end":{"row":441,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"330":{"range":{"start":{"row":450,"column":0},"end":{"row":453,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"331":{"range":{"start":{"row":460,"column":0},"end":{"row":461,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"332":{"range":{"start":{"row":462,"column":0},"end":{"row":466,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"333":{"range":{"start":{"row":474,"column":0},"end":{"row":475,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"334":{"range":{"start":{"row":476,"column":0},"end":{"row":480,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"335":{"range":{"start":{"row":482,"column":0},"end":{"row":483,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"336":{"range":{"start":{"row":484,"column":0},"end":{"row":485,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"337":{"range":{"start":{"row":494,"column":0},"end":{"row":497,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"338":{"range":{"start":{"row":502,"column":0},"end":{"row":504,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"339":{"range":{"start":{"row":505,"column":0},"end":{"row":507,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"340":{"range":{"start":{"row":532,"column":0},"end":{"row":533,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"341":{"range":{"start":{"row":534,"column":0},"end":{"row":535,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"342":{"range":{"start":{"row":536,"column":0},"end":{"row":537,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"343":{"range":{"start":{"row":540,"column":0},"end":{"row":542,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"344":{"range":{"start":{"row":549,"column":0},"end":{"row":551,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"345":{"range":{"start":{"row":554,"column":0},"end":{"row":555,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"346":{"range":{"start":{"row":557,"column":0},"end":{"row":559,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"347":{"range":{"start":{"row":562,"column":0},"end":{"row":565,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"348":{"range":{"start":{"row":573,"column":0},"end":{"row":573,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"349":{"range":{"start":{"row":576,"column":0},"end":{"row":583,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"350":{"range":{"start":{"row":594,"column":0},"end":{"row":596,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"351":{"range":{"start":{"row":597,"column":0},"end":{"row":599,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"352":{"range":{"start":{"row":600,"column":0},"end":{"row":602,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"353":{"range":{"start":{"row":603,"column":0},"end":{"row":605,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"354":{"range":{"start":{"row":607,"column":0},"end":{"row":608,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"355":{"range":{"start":{"row":614,"column":0},"end":{"row":615,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"356":{"range":{"start":{"row":618,"column":0},"end":{"row":619,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"357":{"range":{"start":{"row":621,"column":0},"end":{"row":622,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"358":{"range":{"start":{"row":623,"column":0},"end":{"row":625,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"359":{"range":{"start":{"row":626,"column":0},"end":{"row":626,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"360":{"range":{"start":{"row":627,"column":0},"end":{"row":627,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"385":{"range":{"start":{"row":433,"column":43},"end":{"row":433,"column":44}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"386":{"range":{"start":{"row":433,"column":42},"end":{"row":433,"column":43}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":433,"column":44},"end":{"row":433,"column":44}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":4,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[153,0],[153,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[712,0]],"newRange":[[0,0],[628,0]],"oldText":"<?php\n    class Codes extends CI_Controller\n    {\n\n        function __construct()\n        {\n            parent::__construct();\n           $this->check_isvalidated();\n\n\n        }\n\n\n        function rate(){\n\n             if(!isset($_POST['idCode'])){\n                $this->load404page();\n               // exit;\n            }else\n            {\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode',$_POST['idCode']);\n\n            if($check['idUser']!=$check['code'][0]['idUser']){\n            if ($this->input->post('e1') || $this->input->post('e2') || $this->input->post('e3') || $this->input->post('e4') || $this->input->post('e5'))\n            {\n                $this->MCodes->rateCode();\n                               $this->db->cache_delete_all();\n\n                $this->MCodes->postNotif(\" rated your code : \", $_POST['idCode'], $this->tank_auth->get_user_id());\n                $this->session->set_flashdata('message','Code Rated');\n                //$this->load->helper('url');\n                //redirect('dashboard/');\n                $data['status'] = $this->MCodes->getCodeRate($_POST['idCode']);\n                $this->load->view('rateview', $data);\n            }\n            }else{\n                $data['status'] = $this->MCodes->getCodeRate($_POST['idCode']);\n               $this->load->view('cheating',$data);\n            }\n            }\n\n        }\n\n        /**\n\t * Send email message of given type (activate, forgot_password, etc.)\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @param\tarray\n\t * @return\tvoid\n\t */\n\tfunction _send_email($type, $email, &$data)\n\t{\n\n\n\t\t//original\n\t\t$this->load->library('email');\n\t\t$this->email->from($this->config->item('webmaster_email', 'tank_auth'), $this->config->item('website_name', 'tank_auth'));\n\t\t$this->email->reply_to($this->config->item('webmaster_email', 'tank_auth'), $this->config->item('website_name', 'tank_auth'));\n\t\t$this->email->to($email);\n\t\t$this->email->subject(\"New Activity at CodersCrowd\");\n\t\t$this->email->message($this->load->view('email/'.$type.'-html', $data, TRUE));\n\t\t$this->email->set_alt_message($this->load->view('email/'.$type.'-txt', $data, TRUE));\n\t\t$this->email->send();\n\t}\n\n\n        function create()\n        {\n\n            if ($this->input->post('codename'))\n            {\n                $this->MCodes->addCode();\n                 $datacode = array('codename' => $this->input->post('codename',true),\n                    'codedescription' => $this->input->post('codedescription',true)\n                    );\n                $this->_send_email('codeadded', 'aradwen@gmail.com', $datacode);\n\n                if($this->MUsers->checkUserData($this->tank_auth->get_user_id(),'Score')==1)\n                {\n                    $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $newscore = $userscore[0]['score']+4;\n                    $this->MUsers->updateScore($this->tank_auth->get_user_id(),$newscore);\n                }else{\n                    $this->MUsers->addScore($this->tank_auth->get_user_id(),4);\n                }\n                $this->db->cache_delete_all();\n\n                $this->session->set_flashdata('message','Code Added');\n                //$this->load->helper('url');\n               redirect('dashboard/');\n            }else\n            {\n                $data['pagetitle'] = \"What's your problem today ?\";\n\n                $data['title'] = \"What's your problem today ?\";\n                $data['subtitle'] = \" ... go ahead and make it as clear as possible to get fast help\";\n                $data['elementidcontainer'] = \"side-thecrowd\";\n                $data['elementid'] = \"side-mycodes\";\n                $data['main'] = 'code_add';\n\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n        $data['avscore'] = $this->MUsers->getAvScore();\n\n                //$data['codes'] = $this->MCodes->getAllCodes();\n                $data['idUser'] = $this->tank_auth->get_user_id();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['idLanguage'] = $this->MCodes->getCodeLanguage();\n                $data['idCategory'] = $this->MCodes->getCodeCategory();\n                $data['idState'] = $this->MCodes->getCodeState();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('add-code');\n                $this->load->view('footer');\n            }\n        }\n\n        function delete($id)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n        if($check['idUser']==$check['code'][0][\"idUser\"])\n        {\n        $this->MCodes->deleteCodeFromKB($id);\n        $this->MCodes->deleteCodeSolutions($id);\n        $this->MCodes->deleteCode($id);\n                       $this->db->cache_delete_all();\n\n\n\n        $this->session->set_flashdata('message','Code deleted');\n        redirect('dashboard/');\n        }else{\n           echo \"<script>alert('This Code is not yours you cannot delete it');</script>\";\n           echo \"<script language='javascript'> window.location.href = '\".base_url().\"dashboard/'</script>\";\n        }\n        }\n\n\n        function acceptsolution($id)\n        {\n\n            $solution = $this->MCodes->getsolution($id);\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode',$solution[0]['idCode']);\n        if($check['idUser']==$check['code'][0][\"idUser\"])\n        {\n        $this->MCodes->addtoknowledgebase($solution[0]['idCode']);\n        $this->MCodes->updateCodeState($solution[0]['idCode']);\n        $this->MCodes->updateSolutionWinner($solution[0]['idtempsolution']);\n\n                      //  $this->db->cache_delete_all();\n\n\n\n        $this->session->set_flashdata('message','Solution Accepted');\n        redirect('dashboard/');\n        }else{\n           echo \"<script>alert('This Code is not yours you cannot delete it');</script>\";\n                $data['codes'] = $this->MCodes->getAllCodes();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('dashboard');\n                $this->load->view('footer');\n        }\n        }\n\n        function edit($id=0)\n        {\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n\n            //print_r($check['idUser']);\n            //print_r($check['code'][0][\"idUser\"]);\n\n            if(sizeof($check['code'])==0)\n            {\n\n            $this->load404page();\n\n            }else{\n\n            if ($this->input->post('codename') )\n            {\n                $this->MCodes->updateCode();\n\n                $this->db->cache_delete_all();\n\n                $this->session->set_flashdata('message','Code updated');\n                //$this->load->helper('url');\n                redirect('dashboard/');\n            }elseif($check['idUser']==$check['code'][0][\"idUser\"])\n            {\n\n                $data['pagetitle'] = $check['code'][0][\"codename\"];\n\n                $data['title'] = \"Edit Code\";\n                $data['subtitle'] = \" ... go ahead and make it as clear as possible to get fast help\";\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['elementidcontainer'] = \"side-thecrowd\";\n                $data['elementid'] = \"side-mycodes\";\n                //$data['main'] = 'code_edit';\n                //$data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                //$data['totalusersnumbers'] = $this->MCodes->countmembers();\n                //$data['numberofsolutionsposted']=$this->MCodes->NumberOfSolutionPosted($id);\n                //$data['totalsolutions'] = $this->MCodes->countsolutions();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n                $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode',$id);\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n        $data['avscore'] = $this->MUsers->getAvScore();\n\n                //$data['codes'] = $this->MCodes->getAllCodes();\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('edit-code');\n                $this->load->view('footer');\n            } else {\n                            $this->load404page();\n\n            }\n            }\n        }\n\n\n\t\tfunction numberOfDays($datecol)\n\t\t{\n                    $dateSeconds = strtotime($datecol.\" EST\");\n\n                    $now = strtotime(date('Y-m-d H:i:s',now()));\n                    $seconds = $now - $dateSeconds;\n                    //calcualte the number of days\n                    $days = $seconds / (60 * 60 * 24);\n                    return intval($days);\n         }\n\n        function solve($id=0)\n        {\n            //$this->benchmark->mark('code_start');\n            //$this->output->cache(5);\n            $codeposter = $this->MCodes->getCodePoster($id);\n            //$notifythisuser = $codeposter[0]['email'];\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n\n            //echo($check['idUser']);\n            //echo($check['code'][0]['idCode']);\n\n                if(sizeof($check['code'])==0)\n                {\n\n                    $this->load404page();\n\n                }\n\n\n                if ($this->input->post('codename') )\n                {\n                    $dayselapsed = $this->numberOfDays($this->input->post('timeadded')) ;\n\n                    $this->MCodes->solveCode();\n\n                    $datacode = array('codename' => $this->input->post('codename',true),\n                    'codedescription' => $this->input->post('codedescription',true)\n                    );\n                $this->_send_email('solutionadded', 'aradwen@gmail.com', $datacode);\n                //$this->_send_email('solutionadded', $notifythisuser, $datacode);\n\n\n\t\t\t\t\tif($dayselapsed - 7 > 0){\n                    if($this->MUsers->checkUserData($this->tank_auth->get_user_id(),'Score')==1)\n                    {\n                    $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $newscore = $userscore[0]['score']+1;\n                    $this->MUsers->updateScore($this->tank_auth->get_user_id(),$newscore);\n                    }else{\n                    $this->MUsers->addScore($this->tank_auth->get_user_id(),1);\n                    }\n                    }else{\n                      if($this->MUsers->checkUserData($this->tank_auth->get_user_id(),'Score')==1)\n                    {\n                    $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $newscore = $userscore[0]['score']+10;\n                    $this->MUsers->updateScore($this->tank_auth->get_user_id(),$newscore);\n                    }else{\n                    $this->MUsers->addScore($this->tank_auth->get_user_id(),10);\n                    }\n                    }\n\n                                  $this->db->cache_delete_all();\n\n                    $this->MCodes->postNotif(\" added a Hack to: \", $this->input->post('id') , $this->tank_auth->get_user_id());\n                    $this->session->set_flashdata('message','Solution Added');\n                    //$this->load->helper('url');\n                    //redirect('dashboard/');\n                }else\n                    {\n                        $data['pagetitle'] = \"Solve That Code\";\n\n                        $data['title'] = \"Solve That Code\";\n                        //$data['main'] = 'code_edit';\n                        $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                        $data['totalusersnumbers'] = $this->MCodes->countmembers();\n                        $data['numberofsolutionsposted']=$this->MCodes->NumberOfSolutionPosted($id);\n                        $data['totalsolutions'] = $this->MCodes->countsolutions();\n\n                        $data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n                        //$data['similarcodes'] = $this->MCodes->getSimilarCodes($data['code'][0]['codename']);\n                        $data['codes'] = $this->MCodes->getAllCodes();\n                        $data['currentuser'] = $this->tank_auth->get_user_id();\n\n                        $data['codeposter'] = $this->MCodes->getCodePoster($id);\n                        $data['codeposterpostnum'] = $this->MUsers->count_byuser('Code',$data['codeposter'][0]['idUser']);\n                        $data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n\n                    //get solutions to display below the code\n                        $data['solutions'] = $this->MCodes->getCodeSolution($id);\n                       // $data['contributorname'] = $this->MCodes->getContributorName($id);\n                        $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                        $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode',$id);\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n        $data['avscore'] = $this->MUsers->getAvScore();\n\n                        $data['subtitle'] = \" .. and write something awesome !\";\n                        $data['elementid'] = \"side-allcodes\";\n                        $data['elementidcontainer'] = \"side-thecrowd\";\n\n                        $this->load->vars($data);\n                        $this->load->view('header');\n                        $this->load->view('solve-code');\n                        $this->load->view('footer');\n                    }\n            //$this->benchmark->mark('code_end');\n\n        }\n\n        function view($id=0)\n        {\n\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n\n            if($this->MUsers->checkUserData($check['idUser'],'User_data') == 0){\n                    $this->MUsers->createTempUserData($check['idUser']);\n                                    $this->db->cache_delete_all();\n\n                }\n\n            $data['vote'] = $this->MCodes->checkIfVoted($check['idUser'],$id);\n\n            if(sizeof($check['code'])==0)\n            {\n\n            $this->load404page();\n\n            }else{\n\n            if($check['idUser']==$check['code'][0][\"idUser\"])\n            {\n                $this->MUsers->updateNotifications($id);\n                $this->db->cache_delete_all();\n\n            }\n                     //$this->db->cache_on();\n\n                $data['pagetitle'] = $check['code'][0][\"codename\"];\n\n            $data['title'] = \"Code Details\";\n            $data['subtitle'] = \" ... Where do you think the problem is ? Can you help ?\";\n            $data['elementidcontainer'] = \"side-thecrowd\";\n            $data['elementid'] = \"side-allcodes\";\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            $data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            $data['codcat'] = $this->MCodes->getSpecificCodeCategory($id);\n            $data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            $data['codeposter'] = $this->MCodes->getCodePoster($id);\n            $data['codeposterpostnum'] = $this->MUsers->count_byuser('Code',$data['codeposter'][0]['idUser']);\n            $data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n\n            $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n            $data['totalusersnumbers'] = $this->MCodes->countmembers();\n            $data['numberofsolutionsposted']=$this->MCodes->NumberOfSolutionPosted($id);\n            $data['totalsolutions'] = $this->MCodes->countsolutions();\n\n           $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $data['moderation'] = $this->MUsers->getUserData_by('idUser',$this->tank_auth->get_user_id());\n\n            $data['coderatestats'] = $this->MCodes->getCodeRate($id);\n            $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode',$id);\n\n          $this->load->vars($data);\n          $this->load->view('header');\n          $this->load->view('view-code');\n          $this->load->view('footer');\n        }\n        }\n\n\n        function viewall($id=0)\n        {\n\n\n\n        $credentials['idUser'] = $this->tank_auth->get_user_id();\n        $credentials['fname'] = $this->tank_auth->get_fname();\n        $credentials['lname'] = $this->tank_auth->get_lname();\n        $credentials['username'] = $this->tank_auth->get_username();\n\n        // $this->load->view('dashboard',$credentials);\n        //print_r($credentials['idUser']);\n         //test highcharts\n\n                  $this->db->cache_on();\n\n\n\n        $data['currentuser'] = $this->tank_auth->get_user_id();\n        $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n        $data['codes'] = $this->MCodes->getAllCodes2();\n                $data['pagetitle'] = \"CC Codes\";\n\n        $data['title'] = \"CC Codes\";\n        $data['subtitle'] = \"..Pick And Solve\";\n        $data['elementidcontainer'] = \"side-thecrowd\";\n        $data['elementid'] = \"side-allcodes\";\n\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n        $data['avscore'] = $this->MUsers->getAvScore();\n\n\n        //data['numberofcodes'] = $this->MUsers->count_byuser('Code',$this->tank_auth->get_user_id(););\n        //$data['numberofallcodes'] = $this->MCodes->getAllCodes();\n        //$data['numberOfCodesInteractedWith'] = $this->MUsers->numberOfCodesInteractedWith($this->tank_auth->get_user_id(););\n        //$data['allmembers'] = $this->MCodes->countmembers();\n        //$data['myconnections'] = $this->MUsers->myConnections($this->tank_auth->get_user_id(););\n\n        //$data['totalnumbofsolutions'] = $this->MCodes->countsolutions();\n        $this->load->view('header',$data);\n        $this->load->view('view-all-codes',$data);\n        $this->load->view('footer');\n        }\n\n        function mycodes($id=0)\n        {\n\n                 $this->db->cache_on();\n\n        $credentials['idUser'] = $this->tank_auth->get_user_id();\n        $credentials['fname'] = $this->tank_auth->get_fname();\n        $credentials['lname'] = $this->tank_auth->get_lname();\n        $credentials['username'] = $this->tank_auth->get_username();\n\n        // $this->load->view('dashboard',$credentials);\n        //print_r($credentials['idUser']);\n         //test highcharts\n\n\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n        $data['avscore'] = $this->MUsers->getAvScore();\n\n\n        $data['currentuser'] = $this->tank_auth->get_user_id();\n        $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n        $data['codes'] = $this->MCodes->getAllCodes_by2withsolutioncount('User.idUser',$this->tank_auth->get_user_id());\n        $data['pagetitle'] = \"My Codes\";\n\n        $data['title'] = \"My Codes\";\n        $data['subtitle'] = \"\";\n        $data['elementidcontainer'] = \"side-thecrowd\";\n        $data['elementid'] = \"side-mycodes\";\n\n\n        //data['numberofcodes'] = $this->MUsers->count_byuser('Code',$this->tank_auth->get_user_id(););\n        //$data['numberofallcodes'] = $this->MCodes->getAllCodes();\n        //$data['numberOfCodesInteractedWith'] = $this->MUsers->numberOfCodesInteractedWith($this->tank_auth->get_user_id(););\n        //$data['allmembers'] = $this->MCodes->countmembers();\n        //$data['myconnections'] = $this->MUsers->myConnections($this->tank_auth->get_user_id(););\n\n        //$data['totalnumbofsolutions'] = $this->MCodes->countsolutions();\n        $this->load->view('header',$data);\n        $this->load->view('mycodes',$data);\n        $this->load->view('footer');\n        }\n\n        private function check_isvalidated(){\n        if (!$this->tank_auth->is_logged_in()) {\n\t\t\tredirect('/auth/login/');\n\t\t}\n        }\n\n\n        function getCodersEngagedWithCode($id=0)\n        {\n            $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n            $data['totalusersnumbers'] = $this->MCodes->countmembers();\n            $this->load->vars($data);\n            $this->load->view('edit-code');\n            $this->load->view('solve-code');\n            $this->load->view('view-code');\n        }\n\n\n         function load404page(){\n\n                     $this->db->cache_on();\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            //$check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //if($check['idUser']==$check['code'][0][\"idUser\"])\n            //{\n             //   $this->MUsers->updateNotifications($id);\n            //}\n        $data['pagetitle'] = \"Error\";\n\n            $data['title'] = \"Nuts !\";\n            $data['subtitle'] = \" ... Something went wrong !\";\n            $data['elementidcontainer'] = \"side-thecrowd\";\n            $data['elementid'] = \"side-allcodes\";\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            //$data['codeposter'] = $this->MCodes->getCodePoster($id);\n            //$data['codeposterpostnum'] = $this->MUsers->count_byuser('Code',$data['codeposter'][0]['idUser']);\n            //$data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n             $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n           $data['avscore'] = $this->MUsers->getAvScore();\n\n\n          $this->load->vars($data);\n          $this->load->view('header');\n          $this->load->view('404');\n          $this->load->view('footer');\n\n        }\n\n\n\n        function stats()\n        {\n\n                     $this->db->cache_on();\n\n            $data['lang'] = $this->MCodes->alllang();\n            $data['cat'] = $this->MCodes->alltrend();\n            $data['codestime'] = $this->MCodes->codegraph();\n            $data['solutiontime'] = $this->MCodes->solutiongraph();\n            $data['categorystats'] = $this->MCodes->CategoryStats();\n            $data['pagetitle'] = \"Let's count !\";\n\n            $data['title'] = \"Let's count !\";\n            $data['subtitle'] = \" ... you see a trend ?\";\n            $data['elementidcontainer'] = \"side-stats\";\n            $data['elementid'] = \"side-codestats\";\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n\n        $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n        $data['avscore'] = $this->MUsers->getAvScore();\n\n\n             $this->load->vars($data);\n             $this->load->view('header');\n            $this->load->view('code-stats');\n            $this->load->view('footer');\n        }\n\n        /*function mark()\n        {\n\n            $data['pagetitle'] = \"Let's count !\";\n\n            $data['title'] = \"Let's count !\";\n            $data['subtitle'] = \" ... you see a trend ?\";\n            $data['elementidcontainer'] = \"side-stats\";\n            $data['elementid'] = \"side-codestats\";\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n\n\n             $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('testmark');\n            $this->load->view('footer');\n        }*/\n\n\n\n\n        function cc_execute($cmd, $stdin = null, $timeout = 1)\n        {\n            $proc=proc_open(\n                $cmd,\n                array(array('pipe','r'), array('pipe','w'), array('pipe','w')),\n                 $pipes\n            );\n        //var_dump($pipes);\n            if (isset($stdin))\n            {\n                fwrite($pipes[0],$stdin);\n            }\n            fclose($pipes[0]);\n\n            stream_set_timeout($pipes[1], 0);\n            stream_set_timeout($pipes[2], 0);\n\n            $stdout = '';\n            $stderr ='';\n            $out='';\n\n            $start = microtime();\n\n            while ($data = fread($pipes[1], 256000))\n            {\n                $meta = stream_get_meta_data($pipes[1]);\n                //$meta = stream_get_contents($pipes[1],256000);\n                if (microtime()-$start > $timeout) {\n                    echo \"Timed out, the task seems to be long ..\";\n                    break;\n                }\n            //echo microtime();\n                if ($meta['timed_out']) continue;\n                $stdout .= $data;\n                echo $data;\n            }\n\n            $stdout .= stream_get_contents($pipes[1]);\n            $stderr .= stream_get_contents($pipes[2]);\n            $out .= proc_close($proc);\n\n            //echo $stderr;\n\n        }\n\n       function testecho()\n       {\n        $toto = $this->input->post('codesource');\n        echo $toto;\n       }\n       function RunCode($codezone)\n       {\n            $this->load->helper('file');\n\n            //$fp = fopen(\"/home/rad/public/coderscrowd.com/public/forest/userinput/code.py\",\"w\") or die(\"can't create file\");\n            //foreach ($_POST as $key => $value)\n            //{\n              //  fwrite($fp,$value);\n              //write_file('/home/rad/public/coderscrowd.com/public/forest/userinput/test.py', $this->input->post('codesource'));\n\n            $user = $this->input->post('sender');\n            $language = $this->input->post('lang');\n\n            if($language == \"perl\"){\n                $ext = \"pl\";\n            }\n            if($language == \"python\"){\n                $ext = \"py\";\n            }\n            if($language == \"r\"){\n                $ext = \"R\";\n            }\n            if($language == \"shell\"){\n                $ext = \"sh\";\n            }\n\n\n            write_file('/home/rad/public/coderscrowd.com/public/forest/userinput/'.$user.'code.'.$ext , $this->input->post($codezone));\n\n            //} //fwrite($fp,\"kjhkjh\");\n            //fclose($fp);\n\n            //this will be replace with a dynamic unique ID later\n\n            $container_name = \"container_\".$user.strtotime(\"now\");\n\n            //run command that execute docker\n\n\n            $command = \"sh /home/rad/public/coderscrowd.com/public/forest/runcode.sh \".$container_name.\" \".$user.\" \".$language;\n            //$command = \"/usr/bin/python /Applications/XAMPP/xamppfiles/htdocs/current-linode/\".$user.\"test.py 2>&1\";\n            $this->cc_execute($command);\n\n       }\n\n\n        function loadmodes(){\n            //$this->carabiner->css('style.css');\n        }\n\n\n\n\n\n    }\n\n\n?>\n","newText":"<?php\n    class Codes extends CI_Controller\n    {\n        public function __construct()\n        {\n            parent::__construct();\n            $this->check_isvalidated();\n        }\n\n        public function rate()\n        {\n            if (!isset($_POST['idCode'])) {\n                $this->load404page();\n               // exit;\n            } else {\n                $check['idUser'] = $this->tank_auth->get_user_id();\n                $check['code'] = $this->MCodes->getAllCodes_by('idCode', $_POST['idCode']);\n\n                if ($check['idUser'] != $check['code'][0]['idUser']) {\n                    if ($this->input->post('e1') || $this->input->post('e2') || $this->input->post('e3') || $this->input->post('e4') || $this->input->post('e5')) {\n                        $this->MCodes->rateCode();\n                        $this->db->cache_delete_all();\n\n                        $this->MCodes->postNotif(' rated your code : ', $_POST['idCode'], $this->tank_auth->get_user_id());\n                        $this->session->set_flashdata('message', 'Code Rated');\n                //$this->load->helper('url');\n                //redirect('dashboard/');\n                $data['status'] = $this->MCodes->getCodeRate($_POST['idCode']);\n                        $this->load->view('rateview', $data);\n                    }\n                } else {\n                    $data['status'] = $this->MCodes->getCodeRate($_POST['idCode']);\n                    $this->load->view('cheating', $data);\n                }\n            }\n        }\n\n    /**\n     * Send email message of given type (activate, forgot_password, etc.).\n     *\n     * @param\tstring\n     * @param\tstring\n     * @param\tarray\n     */\n    public function _send_email($type, $email, &$data)\n    {\n\n        //original\n        $this->load->library('email');\n        $this->email->from($this->config->item('webmaster_email', 'tank_auth'), $this->config->item('website_name', 'tank_auth'));\n        $this->email->reply_to($this->config->item('webmaster_email', 'tank_auth'), $this->config->item('website_name', 'tank_auth'));\n        $this->email->to($email);\n        $this->email->subject('New Activity at CodersCrowd');\n        $this->email->message($this->load->view('email/'.$type.'-html', $data, true));\n        $this->email->set_alt_message($this->load->view('email/'.$type.'-txt', $data, true));\n        $this->email->send();\n    }\n\n        public function create()\n        {\n            if ($this->input->post('codename')) {\n                $this->MCodes->addCode();\n                $datacode = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    );\n                $this->_send_email('codeadded', 'aradwen@gmail.com', $datacode);\n\n                if ($this->MUsers->checkUserData($this->tank_auth->get_user_id(), 'Score') == 1) {\n                    $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $newscore = $userscore[0]['score'] + 4;\n                    $this->MUsers->updateScore($this->tank_auth->get_user_id(), $newscore);\n                } else {\n                    $this->MUsers->addScore($this->tank_auth->get_user_id(), 4);\n                }\n                $this->db->cache_delete_all();\n\n                $this->session->set_flashdata('message', 'Code Added');\n                //$this->load->helper('url');\n               redirect('dashboard/');\n            } else {\n                $data['pagetitle'] = \"What's your problem today ?\";\n\n                $data['title'] = \"What's your problem today ?\";\n                $data['subtitle'] = ' ... go ahead and make it as clear as possible to get fast help';\n                $data['elementidcontainer'] = 'side-thecrowd';\n                $data['elementid'] = 'side-mycodes';\n                $data['main'] = 'code_add';\n\n                $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                $data['avscore'] = $this->MUsers->getAvScore();\n\n                //$data['codes'] = $this->MCodes->getAllCodes();\n                $data['idUser'] = $this->tank_auth->get_user_id();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['idLanguage'] = $this->MCodes->getCodeLanguage();\n                $data['idCategory'] = $this->MCodes->getCodeCategory();\n                $data['idState'] = $this->MCodes->getCodeState();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('add-code');\n                $this->load->view('footer');\n            }\n        }\n\n        public function delete($id)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n            if ($check['idUser'] == $check['code'][0]['idUser']) {\n                $this->MCodes->deleteCodeFromKB($id);\n                $this->MCodes->deleteCodeSolutions($id);\n                $this->MCodes->deleteCode($id);\n                $this->db->cache_delete_all();\n\n                $this->session->set_flashdata('message', 'Code deleted');\n                redirect('dashboard/');\n            } else {\n                echo \"<script>alert('This Code is not yours you cannot delete it');</script>\";\n                echo \"<script language='javascript'> window.location.href = '\".base_url().\"dashboard/'</script>\";\n            }\n        }\n\n        public function acceptsolution($id)\n        {\n            $solution = $this->MCodes->getsolution($id);\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $solution[0]['idCode']);\n            if ($check['idUser'] == $check['code'][0]['idUser']) {\n                $this->MCodes->addtoknowledgebase($solution[0]['idCode']);\n                $this->MCodes->updateCodeState($solution[0]['idCode']);\n                $this->MCodes->updateSolutionWinner($solution[0]['idtempsolution']);\n\n                      //  $this->db->cache_delete_all();\n\n        $this->session->set_flashdata('message', 'Solution Accepted');\n                redirect('dashboard/');\n            } else {\n                echo \"<script>alert('This Code is not yours you cannot delete it');</script>\";\n                $data['codes'] = $this->MCodes->getAllCodes();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('dashboard');\n                $this->load->view('footer');\n            }\n        }\n\n        public function edit($id = 0)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n\n            //print_r($check['idUser']);\n            //print_r($check['code'][0][\"idUser\"]);\n\n            if (sizeof($check['code']) == 0) {\n                $this->load404page();\n            } else {\n                if ($this->input->post('codename')) {\n                    $this->MCodes->updateCode();\n\n                    $this->db->cache_delete_all();\n\n                    $this->session->set_flashdata('message', 'Code updated');\n                //$this->load->helper('url');\n                redirect('dashboard/');\n                } elseif ($check['idUser'] == $check['code'][0]['idUser']) {\n                    $data['pagetitle'] = $check['code'][0]['codename'];\n\n                    $data['title'] = 'Edit Code';\n                    $data['subtitle'] = ' ... go ahead and make it as clear as possible to get fast help';\n                    $data['currentuser'] = $this->tank_auth->get_user_id();\n                    $data['elementidcontainer'] = 'side-thecrowd';\n                    $data['elementid'] = 'side-mycodes';\n                //$data['main'] = 'code_edit';\n                //$data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                //$data['totalusersnumbers'] = $this->MCodes->countmembers();\n                //$data['numberofsolutionsposted']=$this->MCodes->NumberOfSolutionPosted($id);\n                //$data['totalsolutions'] = $this->MCodes->countsolutions();\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                    $data['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n                    $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode', $id);\n                    $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                    $data['avscore'] = $this->MUsers->getAvScore();\n\n                //$data['codes'] = $this->MCodes->getAllCodes();\n                $this->load->vars($data);\n                    $this->load->view('header');\n                    $this->load->view('edit-code');\n                    $this->load->view('footer');\n                } else {\n                    $this->load404page();\n                }\n            }\n        }\n\n        public function numberOfDays($datecol)\n        {\n            $dateSeconds = strtotime($datecol.' EST');\n\n            $now = strtotime(date('Y-m-d H:i:s', now()));\n            $seconds = $now - $dateSeconds;\n                    //calcualte the number of days\n                    $days = $seconds / (60 * 60 * 24);\n\n            return intval($days);\n        }\n\n        public function solve($id = 0)\n        {\n            //$this->benchmark->mark('code_start');\n            //$this->output->cache(5);\n            $codeposter = $this->MCodes->getCodePoster($id);\n            //$notifythisuser = $codeposter[0]['email'];\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n\n            //echo($check['idUser']);\n            //echo($check['code'][0]['idCode']);\n\n                if (sizeof($check['code']) == 0) {\n                    $this->load404page();\n                }\n\n            if ($this->input->post('codename')) {\n                $dayselapsed = $this->numberOfDays($this->input->post('timeadded'));\n\n                $this->MCodes->solveCode();\n\n                $datacode = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    );\n                $this->_send_email('solutionadded', 'aradwen@gmail.com', $datacode);\n                //$this->_send_email('solutionadded', $notifythisuser, $datacode);\n\n                    if ($dayselapsed - 7 > 0) {\n                        if ($this->MUsers->checkUserData($this->tank_auth->get_user_id(), 'Score') == 1) {\n                            $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                            $newscore = $userscore[0]['score'] + 1;\n                            $this->MUsers->updateScore($this->tank_auth->get_user_id(), $newscore);\n                        } else {\n                            $this->MUsers->addScore($this->tank_auth->get_user_id(), 1);\n                        }\n                    } else {\n                        if ($this->MUsers->checkUserData($this->tank_auth->get_user_id(), 'Score') == 1) {\n                            $userscore = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                            $newscore = $userscore[0]['score'] + 10;\n                            $this->MUsers->updateScore($this->tank_auth->get_user_id(), $newscore);\n                        } else {\n                            $this->MUsers->addScore($this->tank_auth->get_user_id(), 10);\n                        }\n                    }\n\n                $this->db->cache_delete_all();\n\n                $this->MCodes->postNotif(' added a Hack to: ', $this->input->post('id'), $this->tank_auth->get_user_id());\n                $this->session->set_flashdata('message', 'Solution Added');\n                    //$this->load->helper('url');\n                    //redirect('dashboard/');\n            } else {\n                $data['pagetitle'] = 'Solve That Code';\n\n                $data['title'] = 'Solve That Code';\n                        //$data['main'] = 'code_edit';\n                        $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                $data['totalusersnumbers'] = $this->MCodes->countmembers();\n                $data['numberofsolutionsposted'] = $this->MCodes->NumberOfSolutionPosted($id);\n                $data['totalsolutions'] = $this->MCodes->countsolutions();\n\n                $data['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n                        //$data['similarcodes'] = $this->MCodes->getSimilarCodes($data['code'][0]['codename']);\n                        $data['codes'] = $this->MCodes->getAllCodes();\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n\n                $data['codeposter'] = $this->MCodes->getCodePoster($id);\n                $data['codeposterpostnum'] = $this->MUsers->count_byuser('Code', $data['codeposter'][0]['idUser']);\n                $data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n\n                    //get solutions to display below the code\n                        $data['solutions'] = $this->MCodes->getCodeSolution($id);\n                       // $data['contributorname'] = $this->MCodes->getContributorName($id);\n                        $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode', $id);\n                $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                $data['avscore'] = $this->MUsers->getAvScore();\n\n                $data['subtitle'] = ' .. and write something awesome !';\n                $data['elementid'] = 'side-allcodes';\n                $data['elementidcontainer'] = 'side-thecrowd';\n\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('solve-code');\n                $this->load->view('footer');\n            }\n            //$this->benchmark->mark('code_end');\n        }\n\n        public function view($id = 0)\n        {\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            $check['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n\n            if ($this->MUsers->checkUserData($check['idUser'], 'User_data') == 0) {\n                $this->MUsers->createTempUserData($check['idUser']);\n                $this->db->cache_delete_all();\n            }\n\n            $data['vote'] = $this->MCodes->checkIfVoted($check['idUser'], $id);\n\n            if (sizeof($check['code']) == 0) {\n                $this->load404page();\n            } else {\n                if ($check['idUser'] == $check['code'][0]['idUser']) {\n                    $this->MUsers->updateNotifications($id);\n                    $this->db->cache_delete_all();\n                }\n                     //$this->db->cache_on();\n\n                $data['pagetitle'] = $check['code'][0]['codename'];\n\n                $data['title'] = 'Code Details';\n                $data['subtitle'] = ' ... Where do you think the problem is ? Can you help ?';\n                $data['elementidcontainer'] = 'side-thecrowd';\n                $data['elementid'] = 'side-allcodes';\n                $data['currentuser'] = $this->tank_auth->get_user_id();\n                $data['code'] = $this->MCodes->getAllCodes_by('idCode', $id);\n                $data['codcat'] = $this->MCodes->getSpecificCodeCategory($id);\n                $data['solutions'] = $this->MCodes->getCodeSolution($id);\n                $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n                $data['codeposter'] = $this->MCodes->getCodePoster($id);\n                $data['codeposterpostnum'] = $this->MUsers->count_byuser('Code', $data['codeposter'][0]['idUser']);\n                $data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n\n                $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n                $data['totalusersnumbers'] = $this->MCodes->countmembers();\n                $data['numberofsolutionsposted'] = $this->MCodes->NumberOfSolutionPosted($id);\n                $data['totalsolutions'] = $this->MCodes->countsolutions();\n\n                $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n                $data['avscore'] = $this->MUsers->getAvScore();\n\n                $data['moderation'] = $this->MUsers->getUserData_by('idUser', $this->tank_auth->get_user_id());\n\n                $data['coderatestats'] = $this->MCodes->getCodeRate($id);\n                $data['codelanguage'] = $this->MCodes->getCodeLanguage_by('idCode', $id);\n\n                $this->load->vars($data);\n                $this->load->view('header');\n                $this->load->view('view-code');\n                $this->load->view('footer');\n            }\n        }\n\n        public function viewall($id = 0)\n        {\n            $credentials['idUser'] = $this->tank_auth->get_user_id();\n            $credentials['fname'] = $this->tank_auth->get_fname();\n            $credentials['lname'] = $this->tank_auth->get_lname();\n            $credentials['username'] = $this->tank_auth->get_username();\n\n        // $this->load->view('dashboard',$credentials);\n        //print_r($credentials['idUser']);\n         //test highcharts\n\n                  $this->db->cache_on();\n\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            $data['codes'] = $this->MCodes->getAllCodes2();\n            $data['pagetitle'] = 'CC Codes';\n\n            $data['title'] = 'CC Codes';\n            $data['subtitle'] = '..Pick And Solve';\n            $data['elementidcontainer'] = 'side-thecrowd';\n            $data['elementid'] = 'side-allcodes';\n\n            $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n        //data['numberofcodes'] = $this->MUsers->count_byuser('Code',$this->tank_auth->get_user_id(););\n        //$data['numberofallcodes'] = $this->MCodes->getAllCodes();\n        //$data['numberOfCodesInteractedWith'] = $this->MUsers->numberOfCodesInteractedWith($this->tank_auth->get_user_id(););\n        //$data['allmembers'] = $this->MCodes->countmembers();\n        //$data['myconnections'] = $this->MUsers->myConnections($this->tank_auth->get_user_id(););\n\n        //$data['totalnumbofsolutions'] = $this->MCodes->countsolutions();\n        $this->load->view('header', $data);\n            $this->load->view('view-all-codes', $data);\n            $this->load->view('footer');\n        }\n\n        public function mycodes($id = 0)\n        {\n            $this->db->cache_on();\n\n            $credentials['idUser'] = $this->tank_auth->get_user_id();\n            $credentials['fname'] = $this->tank_auth->get_fname();\n            $credentials['lname'] = $this->tank_auth->get_lname();\n            $credentials['username'] = $this->tank_auth->get_username();\n\n        // $this->load->view('dashboard',$credentials);\n        //print_r($credentials['idUser']);\n         //test highcharts\n\n       $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            $data['codes'] = $this->MCodes->getAllCodes_by2withsolutioncount('User.idUser', $this->tank_auth->get_user_id());\n            $data['pagetitle'] = 'My Codes';\n\n            $data['title'] = 'My Codes';\n            $data['subtitle'] = '';\n            $data['elementidcontainer'] = 'side-thecrowd';\n            $data['elementid'] = 'side-mycodes';\n\n        //data['numberofcodes'] = $this->MUsers->count_byuser('Code',$this->tank_auth->get_user_id(););\n        //$data['numberofallcodes'] = $this->MCodes->getAllCodes();\n        //$data['numberOfCodesInteractedWith'] = $this->MUsers->numberOfCodesInteractedWith($this->tank_auth->get_user_id(););\n        //$data['allmembers'] = $this->MCodes->countmembers();\n        //$data['myconnections'] = $this->MUsers->myConnections($this->tank_auth->get_user_id(););\n\n        //$data['totalnumbofsolutions'] = $this->MCodes->countsolutions();\n        $this->load->view('header', $data);\n            $this->load->view('mycodes', $data);\n            $this->load->view('footer');\n        }\n\n        private function check_isvalidated()\n        {\n            if (!$this->tank_auth->is_logged_in()) {\n                redirect('/auth/login/');\n            }\n        }\n\n        public function getCodersEngagedWithCode($id = 0)\n        {\n            $data['codersengaged'] = $this->MCodes->CodersEngaged($id);\n            $data['totalusersnumbers'] = $this->MCodes->countmembers();\n            $this->load->vars($data);\n            $this->load->view('edit-code');\n            $this->load->view('solve-code');\n            $this->load->view('view-code');\n        }\n\n        public function load404page()\n        {\n            $this->db->cache_on();\n\n            $check['idUser'] = $this->tank_auth->get_user_id();\n            //$check['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //if($check['idUser']==$check['code'][0][\"idUser\"])\n            //{\n             //   $this->MUsers->updateNotifications($id);\n            //}\n        $data['pagetitle'] = 'Error';\n\n            $data['title'] = 'Nuts !';\n            $data['subtitle'] = ' ... Something went wrong !';\n            $data['elementidcontainer'] = 'side-thecrowd';\n            $data['elementid'] = 'side-allcodes';\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n            //$data['codeposter'] = $this->MCodes->getCodePoster($id);\n            //$data['codeposterpostnum'] = $this->MUsers->count_byuser('Code',$data['codeposter'][0]['idUser']);\n            //$data['codeposterconnections'] = $this->MUsers->myConnections($data['codeposter'][0]['idUser']);\n             $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('404');\n            $this->load->view('footer');\n        }\n\n        public function stats()\n        {\n            $this->db->cache_on();\n\n            $data['lang'] = $this->MCodes->alllang();\n            $data['cat'] = $this->MCodes->alltrend();\n            $data['codestime'] = $this->MCodes->codegraph();\n            $data['solutiontime'] = $this->MCodes->solutiongraph();\n            $data['categorystats'] = $this->MCodes->CategoryStats();\n            $data['pagetitle'] = \"Let's count !\";\n\n            $data['title'] = \"Let's count !\";\n            $data['subtitle'] = ' ... you see a trend ?';\n            $data['elementidcontainer'] = 'side-stats';\n            $data['elementid'] = 'side-codestats';\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n\n            $data['userscore'] = $this->MUsers->getScore($this->tank_auth->get_user_id());\n            $data['avscore'] = $this->MUsers->getAvScore();\n\n            $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('code-stats');\n            $this->load->view('footer');\n        }\n\n        /*function mark()\n        {\n\n            $data['pagetitle'] = \"Let's count !\";\n\n            $data['title'] = \"Let's count !\";\n            $data['subtitle'] = \" ... you see a trend ?\";\n            $data['elementidcontainer'] = \"side-stats\";\n            $data['elementid'] = \"side-codestats\";\n            $data['currentuser'] = $this->tank_auth->get_user_id();\n            //$data['code'] = $this->MCodes->getAllCodes_by('idCode',$id);\n            //$data['solutions'] = $this->MCodes->getCodeSolution($id);\n            $data['notifications'] = $this->MUsers->getNotifications($this->tank_auth->get_user_id());\n\n\n             $this->load->vars($data);\n            $this->load->view('header');\n            $this->load->view('testmark');\n            $this->load->view('footer');\n        }*/\n\n        public function cc_execute($cmd, $stdin = null, $timeout = 1)\n        {\n            $proc = proc_open(\n                $cmd,\n                array(array('pipe', 'r'), array('pipe', 'w'), array('pipe', 'w')),\n                 $pipes\n            );\n        //var_dump($pipes);\n            if (isset($stdin)) {\n                fwrite($pipes[0], $stdin);\n            }\n            fclose($pipes[0]);\n\n            stream_set_timeout($pipes[1], 0);\n            stream_set_timeout($pipes[2], 0);\n\n            $stdout = '';\n            $stderr = '';\n            $out = '';\n\n            $start = microtime();\n\n            while ($data = fread($pipes[1], 256000)) {\n                $meta = stream_get_meta_data($pipes[1]);\n                //$meta = stream_get_contents($pipes[1],256000);\n                if (microtime() - $start > $timeout) {\n                    echo 'Timed out, the task seems to be long ..';\n                    break;\n                }\n            //echo microtime();\n                if ($meta['timed_out']) {\n                    continue;\n                }\n                $stdout .= $data;\n                echo $data;\n            }\n\n            $stdout .= stream_get_contents($pipes[1]);\n            $stderr .= stream_get_contents($pipes[2]);\n            $out .= proc_close($proc);\n\n            //echo $stderr;\n        }\n\n        public function testecho()\n        {\n            $toto = $this->input->post('codesource');\n            echo $toto;\n        }\n        public function RunCode($codezone)\n        {\n            $this->load->helper('file');\n\n            //$fp = fopen(\"/home/rad/public/coderscrowd.com/public/forest/userinput/code.py\",\"w\") or die(\"can't create file\");\n            //foreach ($_POST as $key => $value)\n            //{\n              //  fwrite($fp,$value);\n              //write_file('/home/rad/public/coderscrowd.com/public/forest/userinput/test.py', $this->input->post('codesource'));\n\n            $user = $this->input->post('sender');\n            $language = $this->input->post('lang');\n\n            if ($language == 'perl') {\n                $ext = 'pl';\n            }\n            if ($language == 'python') {\n                $ext = 'py';\n            }\n            if ($language == 'r') {\n                $ext = 'R';\n            }\n            if ($language == 'shell') {\n                $ext = 'sh';\n            }\n\n            write_file('/home/rad/public/coderscrowd.com/public/forest/userinput/'.$user.'code.'.$ext, $this->input->post($codezone));\n\n            //} //fwrite($fp,\"kjhkjh\");\n            //fclose($fp);\n\n            //this will be replace with a dynamic unique ID later\n\n            $container_name = 'container_'.$user.strtotime('now');\n\n            //run command that execute docker\n\n            $command = 'sh /home/rad/public/coderscrowd.com/public/forest/runcode.sh '.$container_name.' '.$user.' '.$language;\n            //$command = \"/usr/bin/python /Applications/XAMPP/xamppfiles/htdocs/current-linode/\".$user.\"test.py 2>&1\";\n            $this->cc_execute($command);\n        }\n\n        public function loadmodes()\n        {\n            //$this->carabiner->css('style.css');\n        }\n    }\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[628,0],[628,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/Rad/Documents/Dev/CodersCrowd/application/controllers/codes.php","digestWhenLastPersisted":"5a3776fbef556c445a843710f876a40522ee7b7e","preferredLineEnding":null,"nextMarkerId":387,"deserializer":"TextBuffer","version":5},{"id":"87ed9c7fab40380da307269de69bd8ac","text":"<?php if (!defined('BASEPATH')) exit('No direct script access allowed');\n\nrequire_once('phpass-0.1/PasswordHash.php');\n\ndefine('STATUS_ACTIVATED', '1');\ndefine('STATUS_NOT_ACTIVATED', '0');\n\n/**\n * Tank_auth\n *\n * Authentication library for Code Igniter.\n *\n * @package\t\tTank_auth\n * @author\t\tIlya Konyukhov (http://konyukhov.com/soft/)\n * @version\t\t1.0.9\n * @based on\tDX Auth by Dexcell (http://dexcell.shinsengumiteam.com/dx_auth)\n * @license\t\tMIT License Copyright (c) 2008 Erick Hartanto\n */\nclass Tank_auth\n{\n\tprivate $error = array();\n\n\tfunction __construct()\n\t{\n\t\t$this->ci =& get_instance();\n\n\t\t$this->ci->load->config('tank_auth', TRUE);\n\n\t\t//$this->ci->load->library('session');\n\t\t//$this->ci->load->database();\n\t\t$this->ci->load->model('musers');\n\n\t\t// Try to autologin\n\t\t$this->autologin();\n\t}\n\n\t/**\n\t * Login user on the site. Return TRUE if login is successful\n\t * (user exists and activated, password is correct), otherwise FALSE.\n\t *\n\t * @param\tstring\t(username or email or both depending on settings in config file)\n\t * @param\tstring\n\t * @param\tbool\n\t * @return\tbool\n\t */\n\tfunction login($login, $password, $remember, $login_by_username, $login_by_email)\n\t{\n\t\tif ((strlen($login) > 0) AND (strlen($password) > 0)) {\n\n\t\t\t// Which function to use to login (based on config)\n\t\t\tif ($login_by_username AND $login_by_email) {\n\t\t\t\t$get_user_func = 'get_user_by_login';\n\t\t\t} else if ($login_by_username) {\n\t\t\t\t$get_user_func = 'get_user_by_username';\n\t\t\t} else {\n\t\t\t\t$get_user_func = 'get_user_by_email';\n\t\t\t}\n\n\t\t\tif (!is_null($user = $this->ci->musers->$get_user_func($login))) {\t// login ok\n\n\t\t\t\t// Does password match hash in database?\n\t\t\t\t$hasher = new PasswordHash(\n\t\t\t\t\t\t$this->ci->config->item('phpass_hash_strength', 'tank_auth'),\n\t\t\t\t\t\t$this->ci->config->item('phpass_hash_portable', 'tank_auth'));\n\t\t\t\tif ($hasher->CheckPassword($password, $user->password)) {\t\t// password ok\n\n\t\t\t\t\tif ($user->banned == 1) {\t\t\t\t\t\t\t\t\t// fail - banned\n\t\t\t\t\t\t$this->error = array('banned' => $user->ban_reason);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this->ci->session->set_userdata(array(\n\t\t\t\t\t\t\t\t'user_id'\t=> $user->idUser,\n\t\t\t\t\t\t\t\t'username'\t=> $user->psname,\n\t\t\t\t\t\t\t\t'fname'\t\t=> $user->fname,\n\t\t\t\t\t\t\t\t'lname'\t\t=> $user->lname,\n\t\t\t\t\t\t\t\t'status'\t=> ($user->activated == 1) ? STATUS_ACTIVATED : STATUS_NOT_ACTIVATED,\n\t\t\t\t\t\t));\n\n\t\t\t\t\t\tif ($user->activated == 0) {\t\t\t\t\t\t\t// fail - not activated\n\t\t\t\t\t\t\t$this->error = array('not_activated' => '');\n\n\t\t\t\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t// success\n\t\t\t\t\t\t\tif ($remember) {\n\t\t\t\t\t\t\t\t$this->create_autologin($user->idUser);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$this->clear_login_attempts($login);\n\n\t\t\t\t\t\t\t$this->ci->musers->update_login_info(\n\t\t\t\t\t\t\t\t\t$user->idUser,\n\t\t\t\t\t\t\t\t\t$this->ci->config->item('login_record_ip', 'tank_auth'),\n\t\t\t\t\t\t\t\t\t$this->ci->config->item('login_record_time', 'tank_auth'));\n\t\t\t\t\t\t\treturn TRUE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fail - wrong password\n\t\t\t\t\t$this->increase_login_attempt($login);\n\t\t\t\t\t$this->error = array('password' => 'auth_incorrect_password');\n\t\t\t\t}\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fail - wrong login\n\t\t\t\t$this->increase_login_attempt($login);\n\t\t\t\t$this->error = array('login' => 'auth_incorrect_login');\n\t\t\t}\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Logout user from the site\n\t *\n\t * @return\tvoid\n\t */\n\tfunction logout()\n\t{\n\t\t$this->delete_autologin();\n\n\t\t// See http://codeigniter.com/forums/viewreply/662369/ as the reason for the next line\n\t\t$this->ci->session->set_userdata(array('user_id' => '', 'username' => '', 'status' => ''));\n\n\t\t$this->ci->session->sess_destroy();\n\t}\n\n\t/**\n\t * Check if user logged in. Also test if user is activated or not.\n\t *\n\t * @param\tbool\n\t * @return\tbool\n\t */\n\tfunction is_logged_in($activated = TRUE)\n\t{\n\t\treturn $this->ci->session->userdata('status') === ($activated ? STATUS_ACTIVATED : STATUS_NOT_ACTIVATED);\n\t}\n\n\t/**\n\t * Get user_id\n\t *\n\t * @return\tstring\n\t */\n\tfunction get_user_id()\n\t{\n\t\treturn $this->ci->session->userdata('user_id');\n\t}\n\n\t/**\n\t * Get username\n\t *\n\t * @return\tstring\n\t */\n\tfunction get_username()\n\t{\n\t\treturn $this->ci->session->userdata('username');\n\t}\n\t\n\tfunction get_fname()\n\t{\n\t\treturn $this->ci->session->userdata('fname');\n\t}\n\t\n\tfunction get_lname()\n\t{\n\t\treturn $this->ci->session->userdata('lname');\n\t}\n\n\t/**\n\t * Create new user on the site and return some data about it:\n\t * user_id, username, password, email, new_email_key (if any).\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @param\tstring\n\t * @param\tbool\n\t * @return\tarray\n\t */\n\tfunction create_user($username, $email, $password, $fname,$lname, $countries,$email_activation)\n\t{\n\t\tif ((strlen($username) > 0) AND !$this->ci->musers->is_username_available($username)) {\n\t\t\t$this->error = array('username' => 'auth_username_in_use');\n\n\t\t} elseif (!$this->ci->musers->is_email_available($email)) {\n\t\t\t$this->error = array('email' => 'auth_email_in_use');\n\n\t\t} else {\n\t\t\t// Hash password using phpass\n\t\t\t$hasher = new PasswordHash(\n\t\t\t\t\t$this->ci->config->item('phpass_hash_strength', 'tank_auth'),\n\t\t\t\t\t$this->ci->config->item('phpass_hash_portable', 'tank_auth'));\n\t\t\t$hashed_password = $hasher->HashPassword($password);\n\n\t\t\t$data = array(\n\t\t\t\t'psname'\t=> $username,\n\t\t\t\t'password'\t=> $hashed_password,\n\t\t\t\t'email'\t\t=> $email,\n\t\t\t\t'fname'\t\t=> $fname,\n\t\t\t\t'lname'\t\t=> $lname,\n\t\t\t\t'last_ip'\t=> $this->ci->input->ip_address(),\n\t\t\t\t'idCountry'     => $countries,\n\t\t\t);\n\n\t\t\tif ($email_activation) {\n\t\t\t\t$data['new_email_key'] = md5(rand().microtime());\n\t\t\t}\n\t\t\tif (!is_null($res = $this->ci->musers->create_user($data, !$email_activation))) {\n\t\t\t\t$data['user_id'] = $res['user_id'];\n\t\t\t\t$data['password'] = $password;\n\t\t\t\tunset($data['last_ip']);\n\t\t\t\treturn $data;\n\t\t\t}\n\t\t}\n\t\treturn NULL;\n\t}\n\n\t/**\n\t * Check if username available for registering.\n\t * Can be called for instant form validation.\n\t *\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction is_username_available($username)\n\t{\n\t\treturn ((strlen($username) > 0) AND $this->ci->musers->is_username_available($username));\n\t}\n\n\t/**\n\t * Check if email available for registering.\n\t * Can be called for instant form validation.\n\t *\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction is_email_available($email)\n\t{\n\t\treturn ((strlen($email) > 0) AND $this->ci->musers->is_email_available($email));\n\t}\n\n\t/**\n\t * Change email for activation and return some data about user:\n\t * user_id, username, email, new_email_key.\n\t * Can be called for not activated users only.\n\t *\n\t * @param\tstring\n\t * @return\tarray\n\t */\n\tfunction change_email($email)\n\t{\n\t\t$user_id = $this->ci->session->userdata('user_id');\n\n\t\tif (!is_null($user = $this->ci->musers->get_user_by_id($user_id, FALSE))) {\n\n\t\t\t$data = array(\n\t\t\t\t'user_id'\t=> $user_id,\n\t\t\t\t'psname'\t=> $user->psname,\n\t\t\t\t'email'\t\t=> $email,\n\t\t\t);\n\t\t\tif (strtolower($user->email) == strtolower($email)) {\t\t// leave activation key as is\n\t\t\t\t$data['new_email_key'] = $user->new_email_key;\n\t\t\t\treturn $data;\n\n\t\t\t} elseif ($this->ci->musers->is_email_available($email)) {\n\t\t\t\t$data['new_email_key'] = md5(rand().microtime());\n\t\t\t\t$this->ci->musers->set_new_email($user_id, $email, $data['new_email_key'], FALSE);\n\t\t\t\treturn $data;\n\n\t\t\t} else {\n\t\t\t\t$this->error = array('email' => 'auth_email_in_use');\n\t\t\t}\n\t\t}\n\t\treturn NULL;\n\t}\n\n\t/**\n\t * Activate user using given key\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @param\tbool\n\t * @return\tbool\n\t */\n\tfunction activate_user($user_id, $activation_key, $activate_by_email = TRUE)\n\t{\n\t\t$this->ci->musers->purge_na($this->ci->config->item('email_activation_expire', 'tank_auth'));\n\n\t\tif ((strlen($user_id) > 0) AND (strlen($activation_key) > 0)) {\n\t\t\treturn $this->ci->musers->activate_user($user_id, $activation_key, $activate_by_email);\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Set new password key for user and return some data about user:\n\t * user_id, username, email, new_pass_key.\n\t * The password key can be used to verify user when resetting his/her password.\n\t *\n\t * @param\tstring\n\t * @return\tarray\n\t */\n\tfunction forgot_password($login)\n\t{\n\t\tif (strlen($login) > 0) {\n\t\t\tif (!is_null($user = $this->ci->musers->get_user_by_login($login))) {\n\n\t\t\t\t$data = array(\n\t\t\t\t\t'user_id'\t\t=> $user->idUser,\n\t\t\t\t\t'username'\t\t=> $user->psname,\n\t\t\t\t\t'email'\t\t\t=> $user->email,\n\t\t\t\t\t'new_pass_key'\t=> md5(rand().microtime()),\n\t\t\t\t);\n\n\t\t\t\t$this->ci->musers->set_password_key($user->idUser, $data['new_pass_key']);\n\t\t\t\treturn $data;\n\n\t\t\t} else {\n\t\t\t\t$this->error = array('login' => 'auth_incorrect_email_or_username');\n\t\t\t}\n\t\t}\n\t\treturn NULL;\n\t}\n\n\t/**\n\t * Check if given password key is valid and user is authenticated.\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction can_reset_password($user_id, $new_pass_key)\n\t{\n\t\tif ((strlen($user_id) > 0) AND (strlen($new_pass_key) > 0)) {\n\t\t\treturn $this->ci->musers->can_reset_password(\n\t\t\t\t$user_id,\n\t\t\t\t$new_pass_key,\n\t\t\t\t$this->ci->config->item('forgot_password_expire', 'tank_auth'));\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Replace user password (forgotten) with a new one (set by user)\n\t * and return some data about it: user_id, username, new_password, email.\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction reset_password($user_id, $new_pass_key, $new_password)\n\t{\n\t\tif ((strlen($user_id) > 0) AND (strlen($new_pass_key) > 0) AND (strlen($new_password) > 0)) {\n\n\t\t\tif (!is_null($user = $this->ci->musers->get_user_by_id($user_id, TRUE))) {\n\n\t\t\t\t// Hash password using phpass\n\t\t\t\t$hasher = new PasswordHash(\n\t\t\t\t\t\t$this->ci->config->item('phpass_hash_strength', 'tank_auth'),\n\t\t\t\t\t\t$this->ci->config->item('phpass_hash_portable', 'tank_auth'));\n\t\t\t\t$hashed_password = $hasher->HashPassword($new_password);\n\n\t\t\t\tif ($this->ci->musers->reset_password(\n\t\t\t\t\t\t$user_id,\n\t\t\t\t\t\t$hashed_password,\n\t\t\t\t\t\t$new_pass_key,\n\t\t\t\t\t\t$this->ci->config->item('forgot_password_expire', 'tank_auth'))) {\t// success\n\n\t\t\t\t\t// Clear all user's autologins\n\t\t\t\t\t$this->ci->load->model('tank_auth/user_autologin');\n\t\t\t\t\t$this->ci->user_autologin->clear($user->idUser);\n\n\t\t\t\t\treturn array(\n\t\t\t\t\t\t'user_id'\t\t=> $user_id,\n\t\t\t\t\t\t'username'\t\t=> $user->psname,\n\t\t\t\t\t\t'email'\t\t\t=> $user->email,\n\t\t\t\t\t\t'new_password'\t=> $new_password,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn NULL;\n\t}\n\n\t/**\n\t * Change user password (only when user is logged in)\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction change_password($old_pass, $new_pass)\n\t{\n\t\t$user_id = $this->ci->session->userdata('user_id');\n\n\t\tif (!is_null($user = $this->ci->musers->get_user_by_id($user_id, TRUE))) {\n\n\t\t\t// Check if old password correct\n\t\t\t$hasher = new PasswordHash(\n\t\t\t\t\t$this->ci->config->item('phpass_hash_strength', 'tank_auth'),\n\t\t\t\t\t$this->ci->config->item('phpass_hash_portable', 'tank_auth'));\n\t\t\tif ($hasher->CheckPassword($old_pass, $user->password)) {\t\t\t// success\n\n\t\t\t\t// Hash new password using phpass\n\t\t\t\t$hashed_password = $hasher->HashPassword($new_pass);\n\n\t\t\t\t// Replace old password with new one\n\t\t\t\t$this->ci->musers->change_password($user_id, $hashed_password);\n\t\t\t\treturn TRUE;\n\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fail\n\t\t\t\t$this->error = array('old_password' => 'auth_incorrect_password');\n\t\t\t}\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Change user email (only when user is logged in) and return some data about user:\n\t * user_id, username, new_email, new_email_key.\n\t * The new email cannot be used for login or notification before it is activated.\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @return\tarray\n\t */\n\tfunction set_new_email($new_email, $password)\n\t{\n\t\t$user_id = $this->ci->session->userdata('user_id');\n\n\t\tif (!is_null($user = $this->ci->musers->get_user_by_id($user_id, TRUE))) {\n\n\t\t\t// Check if password correct\n\t\t\t$hasher = new PasswordHash(\n\t\t\t\t\t$this->ci->config->item('phpass_hash_strength', 'tank_auth'),\n\t\t\t\t\t$this->ci->config->item('phpass_hash_portable', 'tank_auth'));\n\t\t\tif ($hasher->CheckPassword($password, $user->password)) {\t\t\t// success\n\n\t\t\t\t$data = array(\n\t\t\t\t\t'user_id'\t=> $user_id,\n\t\t\t\t\t'username'\t=> $user->psname,\n\t\t\t\t\t'new_email'\t=> $new_email,\n\t\t\t\t);\n\n\t\t\t\tif ($user->email == $new_email) {\n\t\t\t\t\t$this->error = array('email' => 'auth_current_email');\n\n\t\t\t\t} elseif ($user->new_email == $new_email) {\t\t// leave email key as is\n\t\t\t\t\t$data['new_email_key'] = $user->new_email_key;\n\t\t\t\t\treturn $data;\n\n\t\t\t\t} elseif ($this->ci->musers->is_email_available($new_email)) {\n\t\t\t\t\t$data['new_email_key'] = md5(rand().microtime());\n\t\t\t\t\t$this->ci->musers->set_new_email($user_id, $new_email, $data['new_email_key'], TRUE);\n\t\t\t\t\treturn $data;\n\n\t\t\t\t} else {\n\t\t\t\t\t$this->error = array('email' => 'auth_email_in_use');\n\t\t\t\t}\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fail\n\t\t\t\t$this->error = array('password' => 'auth_incorrect_password');\n\t\t\t}\n\t\t}\n\t\treturn NULL;\n\t}\n\n\t/**\n\t * Activate new email, if email activation key is valid.\n\t *\n\t * @param\tstring\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction activate_new_email($user_id, $new_email_key)\n\t{\n\t\tif ((strlen($user_id) > 0) AND (strlen($new_email_key) > 0)) {\n\t\t\treturn $this->ci->musers->activate_new_email(\n\t\t\t\t\t$user_id,\n\t\t\t\t\t$new_email_key);\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Delete user from the site (only when user is logged in)\n\t *\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction delete_user($password)\n\t{\n\t\t$user_id = $this->ci->session->userdata('user_id');\n\n\t\tif (!is_null($user = $this->ci->musers->get_user_by_id($user_id, TRUE))) {\n\n\t\t\t// Check if password correct\n\t\t\t$hasher = new PasswordHash(\n\t\t\t\t\t$this->ci->config->item('phpass_hash_strength', 'tank_auth'),\n\t\t\t\t\t$this->ci->config->item('phpass_hash_portable', 'tank_auth'));\n\t\t\tif ($hasher->CheckPassword($password, $user->password)) {\t\t\t// success\n\n\t\t\t\t$this->ci->musers->delete_user($user_id);\n\t\t\t\t$this->logout();\n\t\t\t\treturn TRUE;\n\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fail\n\t\t\t\t$this->error = array('password' => 'auth_incorrect_password');\n\t\t\t}\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Get error message.\n\t * Can be invoked after any failed operation such as login or register.\n\t *\n\t * @return\tstring\n\t */\n\tfunction get_error_message()\n\t{\n\t\treturn $this->error;\n\t}\n\n\t/**\n\t * Save data for user's autologin\n\t *\n\t * @param\tint\n\t * @return\tbool\n\t */\n\tprivate function create_autologin($user_id)\n\t{\n\t\t$this->ci->load->helper('cookie');\n\t\t$key = substr(md5(uniqid(rand().get_cookie($this->ci->config->item('sess_cookie_name')))), 0, 16);\n\n\t\t$this->ci->load->model('tank_auth/user_autologin');\n\t\t$this->ci->user_autologin->purge($user_id);\n\n\t\tif ($this->ci->user_autologin->set($user_id, md5($key))) {\n\t\t\tset_cookie(array(\n\t\t\t\t\t'name' \t\t=> $this->ci->config->item('autologin_cookie_name', 'tank_auth'),\n\t\t\t\t\t'value'\t\t=> serialize(array('user_id' => $user_id, 'key' => $key)),\n\t\t\t\t\t'expire'\t=> $this->ci->config->item('autologin_cookie_life', 'tank_auth'),\n\t\t\t));\n\t\t\treturn TRUE;\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Clear user's autologin data\n\t *\n\t * @return\tvoid\n\t */\n\tprivate function delete_autologin()\n\t{\n\t\t$this->ci->load->helper('cookie');\n\t\tif ($cookie = get_cookie($this->ci->config->item('autologin_cookie_name', 'tank_auth'), TRUE)) {\n\n\t\t\t$data = unserialize($cookie);\n\n\t\t\t$this->ci->load->model('tank_auth/user_autologin');\n\t\t\t$this->ci->user_autologin->delete($data['user_id'], md5($data['key']));\n\n\t\t\tdelete_cookie($this->ci->config->item('autologin_cookie_name', 'tank_auth'));\n\t\t}\n\t}\n\n\t/**\n\t * Login user automatically if he/she provides correct autologin verification\n\t *\n\t * @return\tvoid\n\t */\n\tprivate function autologin()\n\t{\n\t\tif (!$this->is_logged_in() AND !$this->is_logged_in(FALSE)) {\t\t\t// not logged in (as any user)\n\n\t\t\t$this->ci->load->helper('cookie');\n\t\t\tif ($cookie = get_cookie($this->ci->config->item('autologin_cookie_name', 'tank_auth'), TRUE)) {\n\n\t\t\t\t$data = unserialize($cookie);\n\n\t\t\t\tif (isset($data['key']) AND isset($data['user_id'])) {\n\n\t\t\t\t\t$this->ci->load->model('tank_auth/user_autologin');\n\t\t\t\t\tif (!is_null($user = $this->ci->user_autologin->get($data['user_id'], md5($data['key'])))) {\n\n\t\t\t\t\t\t// Login user\n\t\t\t\t\t\t$this->ci->session->set_userdata(array(\n\t\t\t\t\t\t\t\t'user_id'\t=> $user->idUser,\n\t\t\t\t\t\t\t\t'username'\t=> $user->psname,\n\t\t\t\t\t\t\t\t'status'\t=> STATUS_ACTIVATED,\n\t\t\t\t\t\t));\n\n\t\t\t\t\t\t// Renew users cookie to prevent it from expiring\n\t\t\t\t\t\tset_cookie(array(\n\t\t\t\t\t\t\t\t'name' \t\t=> $this->ci->config->item('autologin_cookie_name', 'tank_auth'),\n\t\t\t\t\t\t\t\t'value'\t\t=> $cookie,\n\t\t\t\t\t\t\t\t'expire'\t=> $this->ci->config->item('autologin_cookie_life', 'tank_auth'),\n\t\t\t\t\t\t));\n\n\t\t\t\t\t\t$this->ci->musers->update_login_info(\n\t\t\t\t\t\t\t\t$user->idUser,\n\t\t\t\t\t\t\t\t$this->ci->config->item('login_record_ip', 'tank_auth'),\n\t\t\t\t\t\t\t\t$this->ci->config->item('login_record_time', 'tank_auth'));\n\t\t\t\t\t\treturn TRUE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Check if login attempts exceeded max login attempts (specified in config)\n\t *\n\t * @param\tstring\n\t * @return\tbool\n\t */\n\tfunction is_max_login_attempts_exceeded($login)\n\t{\n\t\tif ($this->ci->config->item('login_count_attempts', 'tank_auth')) {\n\t\t\t$this->ci->load->model('tank_auth/login_attempts');\n\t\t\treturn $this->ci->login_attempts->get_attempts_num($this->ci->input->ip_address(), $login)\n\t\t\t\t\t>= $this->ci->config->item('login_max_attempts', 'tank_auth');\n\t\t}\n\t\treturn FALSE;\n\t}\n\n\t/**\n\t * Increase number of attempts for given IP-address and login\n\t * (if attempts to login is being counted)\n\t *\n\t * @param\tstring\n\t * @return\tvoid\n\t */\n\tprivate function increase_login_attempt($login)\n\t{\n\t\tif ($this->ci->config->item('login_count_attempts', 'tank_auth')) {\n\t\t\tif (!$this->is_max_login_attempts_exceeded($login)) {\n\t\t\t\t$this->ci->load->model('tank_auth/login_attempts');\n\t\t\t\t$this->ci->login_attempts->increase_attempt($this->ci->input->ip_address(), $login);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clear all attempt records for given IP-address and login\n\t * (if attempts to login is being counted)\n\t *\n\t * @param\tstring\n\t * @return\tvoid\n\t */\n\tprivate function clear_login_attempts($login)\n\t{\n\t\tif ($this->ci->config->item('login_count_attempts', 'tank_auth')) {\n\t\t\t$this->ci->load->model('tank_auth/login_attempts');\n\t\t\t$this->ci->login_attempts->clear_attempts(\n\t\t\t\t\t$this->ci->input->ip_address(),\n\t\t\t\t\t$login,\n\t\t\t\t\t$this->ci->config->item('login_attempt_expire', 'tank_auth'));\n\t\t}\n\t}\n}\n\n/* End of file Tank_auth.php */\n/* Location: ./application/libraries/Tank_auth.php */","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":40,"column":28},"end":{"row":40,"column":30}},"properties":{"term":"or"},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"3":{"range":{"start":{"row":40,"column":28},"end":{"row":40,"column":30}},"properties":{"term":"or"},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/Rad/Documents/Dev/CodersCrowd/application/libraries/Tank_auth.php","digestWhenLastPersisted":"2dbac7fee0b106a35c0e8e7a8c2e680489d570bc","preferredLineEnding":null,"nextMarkerId":4,"deserializer":"TextBuffer","version":5},{"id":"5b7a3413a6b3d427204003b11f44d26d","text":"<?php\n\nif (!defined('BASEPATH')) {\n    exit('No direct script access allowed');\n}\n\n    class MCodes extends CI_Model\n    {\n        public function getCodeLanguage()\n        {\n            $this->db->select('idlanguage, language'); //change this to the two main values you want to use\n        $this->db->from('language');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idlanguage']] = $row['language'];\n            }\n\n            return $data;\n        }\n        public function getCodeLanguage_by($condition, $where)\n        {\n            $data = array();\n            $this->db->select('language'); //change this to the two main values you want to use\n            $this->db->from('language');\n            $this->db->join('Code', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->where($condition, $where);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeCategory()\n        {\n            $this->db->select('idCategory, Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idCategory']] = $row['Category'];\n            }\n\n            return $data;\n        }\n\n        public function getSpecificCodeCategory($id = 0)\n        {\n            $data = array();\n            $this->db->select('Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n            $this->db->where('Code.idCode', $id);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeState()\n        {\n            $this->db->select('idState, State'); //change this to the two main values you want to use\n        $this->db->from('State');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idState']] = $row['State'];\n            }\n\n            return $data;\n        }\n\n        public function getAllCodes()\n        {\n            $data = array();\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //BEGIN TEST\n    public function getAllCodes2()\n    {\n        $data = array();\n        $this->db->order_by('Code.timeadded', 'desc');\n\n        $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n        $this->db->from('Code');\n        $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n        $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n        $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getAllCodes_by2($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('*');\n            $this->db->from('Code', 'tempsolution', 'Contributor', 'User');\n            $this->db->join('tempsolution', 'tempsolution.idCode=Code.idCode', 'inner');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getAllCodes_by2withsolutioncount($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n            $this->db->from('Code');\n            $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n            $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    // END TEST\n\n    public function getAllCodes_by($condition, $where)\n    {\n        $data = array();\n        $this->db->where($condition, $where);\n        $this->db->order_by('timeadded', 'desc');\n        $Q = $this->db->get('Code');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getSimilarCodes($codename)\n        {\n            $data = array();\n            $this->db->like('codename', $codename);\n            $this->db->or_like('codedescription', $codename);\n            //$this->db->like('codedescription',$codename,'none');\n            //$this->db->where(\"codedescription LIKE '%{$codename}%'\");\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n\n    /*\n     *      $sql = \"SELECT codename\n                    FROM Code\n                    WHERE MATCH (codename,codedescription) AGAINST (?) > 0\";\n             $query = $this->db->query($sql, array($codename, $codename));\n            return $query->result();\n     *\n     */\n        }\n\n        public function updateCode()\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('codename' => $this->input->post('codename', true),\n                      'codedescription' => $this->input->post('codedescription', true),\n                      'codesource' => $this->input->post('codesource'),\n                      );\n\n            $this->db->where('idCode', $this->input->post('idCode', true));\n            $this->db->update('Code', $data);\n        }\n\n    //User can delete his code posted if needed\n    //If a User delete a code, all temporary solution related to it should be deleted as well\n\n    public function deleteCode($id)\n    {\n\n       //$this->db->cache_delete_all();\n\n        $this->db->where('idCode', $id);\n        $this->db->delete('Code');\n    }\n\n        public function deleteCodeSolutions($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('tempsolution');\n        }\n\n        public function deleteCodeFromKB($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('KB');\n        }\n\n        public function getsolution($id)\n        {\n            $this->db->where('idtempsolution', $id);\n            $Q = $this->db->get('tempsolution');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function addtoknowledgebase($id)\n        {\n            $data = array();\n            $this->db->where('idCode', $id);\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //print_r($row);\n                    $data = array(\n                                  'idCode' => $row['idCode'],\n                                  'codename' => $row['codename'],\n                                  'codedescription' => $row['codedescription'],\n                                  'codesource' => $row['codesource'],\n                                  'timeadded' => $row['timeadded'],\n                                  'idUser' => $row['idUser'],\n                                  'idlanguage' => $row['idlanguage'],\n                                  'idState' => 1,\n                                  'idCategory' => $row['idCategory'],\n                                 );\n                }\n            }\n            $Q->free_result();\n        //$data[0]['idState'] = 1;\n        $kb = array(\n          'idCode' => $data['idCode'],\n          'idUser' => $data['idUser'],\n          'idlanguage' => $data['idlanguage'],\n        );\n\n        //$this->db->update('Code',$data);\n        $this->db->insert('KB', $kb);\n        }\n\n        public function updateCodeState($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idState' => 1,\n                      );\n\n            $this->db->where('idCode', $id);\n            $this->db->update('Code', $data);\n        }\n\n        public function updateSolutionWinner($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idWinner' => 1,\n                      );\n\n            $this->db->where('idtempsolution', $id);\n            $this->db->update('tempsolution', $data);\n        }\n    //This function allow users to post his problem / snippet\n    public function addCode()\n    {\n        date_default_timezone_set('America/Los_Angeles');\n        $data = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    'codesource' => $this->input->post('codesource'),\n                    'timeadded' => date('Y-m-d H:i:s'),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idLanguage' => $this->input->post('idLanguage', true),\n                    'idCategory' => $this->input->post('idCategory', true),\n                    'idState' => $this->input->post('idState', true),\n                    'isPublic' => $this->input->post('isPublic', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Code', $data);\n    }\n\n        public function rateCode()\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array('documentation' => $this->input->post('e1', true),\n                    'reproducibility' => $this->input->post('e2', true),\n                    'readability' => $this->input->post('e3', true),\n                    'errordescription' => $this->input->post('e4', true),\n                    'codesize' => $this->input->post('e5', true),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idCode' => $this->input->post('idCode', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Rating', $data);\n        }\n\n        public function checkIfVoted($userid, $codeid)\n        {\n            $data = array();\n            $this->db->where('idCode', $codeid);\n            $this->db->where('idUser', $userid);\n            $this->db->from('Rating');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n\n        public function getCodeRate($id = 0)\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array();\n            $this->db->where('idCode', $id);\n            $this->db->select('AVG(documentation) AS documentation,AVG(reproducibility) AS reproducibility,AVG(readability) AS readability,AVG(errordescription) AS errordescription,AVG(codesize) AS codesize');\n            $this->db->from('Rating');\n            $this->db->group_by('idCode');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //Once a User is satisfied with a solution proposed by a member of the community he can push it to the knowledge base\n    public function pushToKB()\n    {\n    }\n\n    //This function allow the user to validate a solution as a one that solved his problem\n    public function validateSolution()\n    {\n    }\n\n        public function getUserData_by($condition, $value)\n        {\n            $data = array();\n            $this->db->where($condition, $value);\n            $Q = $this->db->get('User');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodePoster($codeid)\n        {\n            $data = array();\n            $this->db->where('Code.idCode', $codeid);\n            $this->db->select('*');\n            $this->db->from('User');\n            $this->db->join('Code', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function createContributor($id)\n        {\n            $temp = $this->getUserData_by('idUser', $id);\n            $data['iduser'] = $temp[0]['idUser'];\n            $data['idCountry'] = $temp[0]['idCountry'];\n            $this->db->insert('Contributor', $data);\n        }\n\n        public function getContributor($id)\n        {\n            $data = array();\n            $this->db->where('idUser', $id);\n            $Q = $this->db->get('Contributor');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n    //A user might contribute to someone else's code to add his contribution\n    public function solveCode()\n    {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $this->input->post('id'));\n\n        $data['tempsolutioncodesource'] = $this->input->post('codesource');\n        $data['timeadded'] = date('Y-m-d H:i:s', now());\n        $data['tempsolutioncomment'] = $this->input->post('comment');\n\n        $data['idCode'] = $temp[0]['idCode'];\n        $data['idUser'] = $temp[0]['idUser'];\n        $data['idlanguage'] = $temp[0]['idlanguage'];\n        $data['idWinner'] = '0';\n\n      //$data['contributor'] = $this->input->post('currentuser'];\n       //Check if user exists as contributor or not (First Time contribution ?)\n      if ($this->getContributor($this->input->post('currentuser'))) {\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      } else {\n          $this->createContributor($this->input->post('currentuser'));\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      }\n\n       ////$this->db->cache_delete_all();\n\n      $this->db->insert('tempsolution', $data);\n        print_r($data);\n    }\n\n        public function postNotif($msg, $id, $userid)\n        {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $id);\n\n            $notif = array();\n\n            $namecode = $temp[0]['codename'];\n      // $notif['notif-idCode'] = $temp[0]['idCode'];\n       $cont = $this->getUserData_by('idUser', $userid);\n            $notif['sender'] = $cont[0]['fname'].' '.$cont[0]['lname'];\n            $notif['message'] = $msg.' '.$temp[0]['codename'];\n            $notif['seen'] = 0;\n            $notif['timeadded'] = date('Y-m-d H:i:s', now());\n            $notif['idCode'] = $id;\n            $notif['idUser'] = $temp[0]['idUser'];\n\n      //print_r($notif);\n      $this->db->insert('Notifications', $notif);\n      //print_r($data);\n        }\n\n        public function getCodeSolution($codeid)\n        {\n            $data = array();\n            $this->db->where('tempsolution.idCode', $codeid);\n\n            $this->db->select('*');\n            $this->db->from('tempsolution', 'Contributor', 'User');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n\n        //$Q = $this->db->get('tempsolution');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n            $Q->free_result();\n\n            return $data;\n        }\n\n     /**\n      }\n      **/\n     public function getContributorName($codeid)\n     {\n         $data = array();\n\n         $this->db->select('Contributor.*');\n         $this->db->from('Contributor');\n         $this->db->join('tempsolution', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n         $this->db->where('tempsolution.idCode', $codeid);\n         $this->db->distinct();\n         $Q = $this->db->get();\n\n         if ($Q->num_rows() > 0) {\n             foreach ($Q->result_array() as $row) {\n                 $data[] = array_merge($this->getUserData_by('idUser', $row['idUser']), $row);\n             }\n         }\n         $Q->free_result();\n\n         return $data;\n     }\n\n        public function CodersEngaged($id)\n        {\n            $this->db->distinct();\n            $this->db->where('idCode', $id);\n            $this->db->select('idContributor');\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countmembers()\n        {\n            $this->db->distinct();\n            $Q = $this->db->get('User');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function NumberOfSolutionPosted($id)\n        {\n            //$this->db->distinct();\n        $this->db->where('idCode', $id);\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countsolutions()\n        {\n            //$this->db->distinct();\n        $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n    //Stats - Graphs - Begin\n\n    public function CodesSinceLastVisit()\n    {\n        $data = array();\n        $lastlogin = $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        $date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n        $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n        $this->db->from('Category');\n        $cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis', $date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', $cond, 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n        $Q = $this->db->get();\n\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function alllang()\n        {\n            $data = array();\n\n            $this->db->select('language.language, count(language.idlanguage) AS NumberCodes');\n            $this->db->from('language');\n            $this->db->join('Code', 'Code.idlanguage=language.idlanguage', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('User.idUser',$userid);\n        $this->db->group_by('language.language');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //$data['label'] = $row['language'];\n                //$data['data']=$row['NumberCodes'];\n                $data[] = array(\n                              'label' => $row['language'],\n                              'data' => intval($row['NumberCodes']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function alltrend()\n        {\n            $data = array();\n\n            $this->db->select('Category.Category, count(Category.idCategory) AS NumberCat');\n            $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n       // $this->db->where('User.idUser',$userid);\n        $this->db->group_by('Category.Category');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                              'label' => $row['Category'],\n                              'data' => intval($row['NumberCat']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function codegraph()\n        {\n            $data = array();\n            $this->db->order_by('Code.timeadded', 'asc');\n\n            $this->db->select('Code.timeadded,count(Code.idCode) AS Codes ');\n            $this->db->from('Code');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(Code.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Codes']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n        public function CategoryStats()\n        {\n            $data = array();\n        //$lastlogin =  $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        //$date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n            $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n            $this->db->from('Category');\n        //$cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis',$date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n            $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n        //$this->db->cache_delete_all();\n        return $data;\n        }\n\n        public function solutiongraph()\n        {\n            $data = array();\n            $this->db->order_by('tempsolution.timeadded', 'asc');\n\n            $this->db->select('tempsolution.timeadded,count(tempsolution.idtempsolution) AS Solutions');\n            $this->db->from('tempsolution');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(tempsolution.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Solutions']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //stats - Graphs - End\n    }\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"257":{"range":{"start":{"row":0,"column":0},"end":{"row":11,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"258":{"range":{"start":{"row":12,"column":0},"end":{"row":18,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"259":{"range":{"start":{"row":19,"column":0},"end":{"row":29,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"260":{"range":{"start":{"row":29,"column":0},"end":{"row":29,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"261":{"range":{"start":{"row":32,"column":0},"end":{"row":40,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"262":{"range":{"start":{"row":41,"column":0},"end":{"row":47,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"263":{"range":{"start":{"row":48,"column":0},"end":{"row":53,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"264":{"range":{"start":{"row":54,"column":0},"end":{"row":59,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"265":{"range":{"start":{"row":59,"column":0},"end":{"row":59,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"266":{"range":{"start":{"row":62,"column":0},"end":{"row":70,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"267":{"range":{"start":{"row":71,"column":0},"end":{"row":77,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"268":{"range":{"start":{"row":78,"column":0},"end":{"row":80,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"269":{"range":{"start":{"row":82,"column":0},"end":{"row":83,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"270":{"range":{"start":{"row":84,"column":0},"end":{"row":86,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"271":{"range":{"start":{"row":89,"column":0},"end":{"row":94,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"272":{"range":{"start":{"row":95,"column":0},"end":{"row":105,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"273":{"range":{"start":{"row":110,"column":0},"end":{"row":112,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"274":{"range":{"start":{"row":113,"column":0},"end":{"row":115,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"275":{"range":{"start":{"row":115,"column":0},"end":{"row":115,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"276":{"range":{"start":{"row":119,"column":0},"end":{"row":120,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"277":{"range":{"start":{"row":122,"column":0},"end":{"row":124,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"278":{"range":{"start":{"row":126,"column":0},"end":{"row":129,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"279":{"range":{"start":{"row":130,"column":0},"end":{"row":137,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"280":{"range":{"start":{"row":140,"column":0},"end":{"row":146,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"281":{"range":{"start":{"row":148,"column":0},"end":{"row":151,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"282":{"range":{"start":{"row":153,"column":0},"end":{"row":156,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"283":{"range":{"start":{"row":161,"column":0},"end":{"row":164,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"284":{"range":{"start":{"row":167,"column":0},"end":{"row":172,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"285":{"range":{"start":{"row":173,"column":0},"end":{"row":183,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"286":{"range":{"start":{"row":184,"column":0},"end":{"row":185,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"287":{"range":{"start":{"row":186,"column":0},"end":{"row":187,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"288":{"range":{"start":{"row":189,"column":0},"end":{"row":191,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"289":{"range":{"start":{"row":194,"column":0},"end":{"row":195,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"290":{"range":{"start":{"row":197,"column":0},"end":{"row":198,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"291":{"range":{"start":{"row":199,"column":0},"end":{"row":201,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"292":{"range":{"start":{"row":204,"column":0},"end":{"row":208,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"293":{"range":{"start":{"row":216,"column":0},"end":{"row":225,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"294":{"range":{"start":{"row":226,"column":0},"end":{"row":231,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"295":{"range":{"start":{"row":233,"column":0},"end":{"row":235,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"296":{"range":{"start":{"row":236,"column":0},"end":{"row":237,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"297":{"range":{"start":{"row":238,"column":0},"end":{"row":240,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"298":{"range":{"start":{"row":242,"column":0},"end":{"row":261,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"299":{"range":{"start":{"row":264,"column":0},"end":{"row":276,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"300":{"range":{"start":{"row":286,"column":0},"end":{"row":287,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"301":{"range":{"start":{"row":290,"column":0},"end":{"row":291,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"302":{"range":{"start":{"row":295,"column":0},"end":{"row":296,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"303":{"range":{"start":{"row":297,"column":0},"end":{"row":298,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"304":{"range":{"start":{"row":299,"column":0},"end":{"row":307,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"305":{"range":{"start":{"row":308,"column":0},"end":{"row":318,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"306":{"range":{"start":{"row":319,"column":0},"end":{"row":323,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"307":{"range":{"start":{"row":326,"column":0},"end":{"row":329,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"308":{"range":{"start":{"row":331,"column":0},"end":{"row":336,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"309":{"range":{"start":{"row":337,"column":0},"end":{"row":338,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"310":{"range":{"start":{"row":339,"column":0},"end":{"row":340,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"311":{"range":{"start":{"row":342,"column":0},"end":{"row":353,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"312":{"range":{"start":{"row":354,"column":0},"end":{"row":355,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"313":{"range":{"start":{"row":356,"column":0},"end":{"row":357,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"314":{"range":{"start":{"row":358,"column":0},"end":{"row":377,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"315":{"range":{"start":{"row":378,"column":0},"end":{"row":380,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"316":{"range":{"start":{"row":383,"column":0},"end":{"row":388,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"317":{"range":{"start":{"row":389,"column":0},"end":{"row":392,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"318":{"range":{"start":{"row":393,"column":0},"end":{"row":394,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"319":{"range":{"start":{"row":396,"column":0},"end":{"row":396,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"320":{"range":{"start":{"row":398,"column":0},"end":{"row":399,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"321":{"range":{"start":{"row":401,"column":0},"end":{"row":401,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"322":{"range":{"start":{"row":403,"column":0},"end":{"row":408,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"323":{"range":{"start":{"row":409,"column":0},"end":{"row":411,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"324":{"range":{"start":{"row":414,"column":0},"end":{"row":424,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"325":{"range":{"start":{"row":425,"column":0},"end":{"row":426,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"326":{"range":{"start":{"row":427,"column":0},"end":{"row":432,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"327":{"range":{"start":{"row":433,"column":0},"end":{"row":436,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"328":{"range":{"start":{"row":437,"column":0},"end":{"row":450,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"329":{"range":{"start":{"row":451,"column":0},"end":{"row":453,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"330":{"range":{"start":{"row":456,"column":0},"end":{"row":460,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"331":{"range":{"start":{"row":463,"column":0},"end":{"row":464,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"332":{"range":{"start":{"row":465,"column":0},"end":{"row":477,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"333":{"range":{"start":{"row":479,"column":0},"end":{"row":486,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"334":{"range":{"start":{"row":487,"column":0},"end":{"row":488,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"335":{"range":{"start":{"row":489,"column":0},"end":{"row":490,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"336":{"range":{"start":{"row":491,"column":0},"end":{"row":492,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"337":{"range":{"start":{"row":493,"column":0},"end":{"row":497,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"338":{"range":{"start":{"row":498,"column":0},"end":{"row":504,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"339":{"range":{"start":{"row":506,"column":0},"end":{"row":513,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"340":{"range":{"start":{"row":514,"column":0},"end":{"row":515,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"341":{"range":{"start":{"row":516,"column":0},"end":{"row":519,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"342":{"range":{"start":{"row":520,"column":0},"end":{"row":532,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"343":{"range":{"start":{"row":535,"column":0},"end":{"row":551,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"344":{"range":{"start":{"row":552,"column":0},"end":{"row":574,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"345":{"range":{"start":{"row":575,"column":0},"end":{"row":584,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"346":{"range":{"start":{"row":585,"column":0},"end":{"row":587,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"347":{"range":{"start":{"row":588,"column":0},"end":{"row":613,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"348":{"range":{"start":{"row":618,"column":0},"end":{"row":619,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"349":{"range":{"start":{"row":620,"column":0},"end":{"row":621,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"350":{"range":{"start":{"row":624,"column":0},"end":{"row":629,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"351":{"range":{"start":{"row":631,"column":0},"end":{"row":632,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"352":{"range":{"start":{"row":633,"column":0},"end":{"row":635,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"353":{"range":{"start":{"row":636,"column":0},"end":{"row":637,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"354":{"range":{"start":{"row":639,"column":0},"end":{"row":643,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"355":{"range":{"start":{"row":647,"column":0},"end":{"row":652,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"356":{"range":{"start":{"row":653,"column":0},"end":{"row":656,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"357":{"range":{"start":{"row":657,"column":0},"end":{"row":658,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"358":{"range":{"start":{"row":659,"column":0},"end":{"row":662,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"359":{"range":{"start":{"row":663,"column":0},"end":{"row":665,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"360":{"range":{"start":{"row":667,"column":0},"end":{"row":671,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"361":{"range":{"start":{"row":675,"column":0},"end":{"row":682,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"362":{"range":{"start":{"row":683,"column":0},"end":{"row":684,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"363":{"range":{"start":{"row":685,"column":0},"end":{"row":688,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"364":{"range":{"start":{"row":689,"column":0},"end":{"row":691,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"365":{"range":{"start":{"row":693,"column":0},"end":{"row":695,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"366":{"range":{"start":{"row":705,"column":0},"end":{"row":707,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"367":{"range":{"start":{"row":708,"column":0},"end":{"row":710,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"368":{"range":{"start":{"row":711,"column":0},"end":{"row":713,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"369":{"range":{"start":{"row":713,"column":0},"end":{"row":713,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"370":{"range":{"start":{"row":716,"column":0},"end":{"row":721,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"371":{"range":{"start":{"row":727,"column":0},"end":{"row":729,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"372":{"range":{"start":{"row":731,"column":0},"end":{"row":732,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"373":{"range":{"start":{"row":735,"column":0},"end":{"row":741,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"374":{"range":{"start":{"row":742,"column":0},"end":{"row":743,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"375":{"range":{"start":{"row":746,"column":0},"end":{"row":748,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"376":{"range":{"start":{"row":750,"column":0},"end":{"row":752,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"377":{"range":{"start":{"row":762,"column":0},"end":{"row":764,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"378":{"range":{"start":{"row":765,"column":0},"end":{"row":767,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"379":{"range":{"start":{"row":768,"column":0},"end":{"row":770,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"380":{"range":{"start":{"row":770,"column":0},"end":{"row":770,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"381":{"range":{"start":{"row":773,"column":0},"end":{"row":778,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"382":{"range":{"start":{"row":778,"column":0},"end":{"row":778,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"383":{"range":{"start":{"row":779,"column":0},"end":{"row":779,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"511":{"range":{"start":{"row":0,"column":0},"end":{"row":11,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"512":{"range":{"start":{"row":12,"column":0},"end":{"row":18,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"513":{"range":{"start":{"row":19,"column":0},"end":{"row":29,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"514":{"range":{"start":{"row":29,"column":0},"end":{"row":29,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"515":{"range":{"start":{"row":32,"column":0},"end":{"row":40,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"516":{"range":{"start":{"row":41,"column":0},"end":{"row":47,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"517":{"range":{"start":{"row":48,"column":0},"end":{"row":53,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"518":{"range":{"start":{"row":54,"column":0},"end":{"row":59,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"519":{"range":{"start":{"row":59,"column":0},"end":{"row":59,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"520":{"range":{"start":{"row":62,"column":0},"end":{"row":70,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"521":{"range":{"start":{"row":71,"column":0},"end":{"row":77,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"522":{"range":{"start":{"row":78,"column":0},"end":{"row":80,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"523":{"range":{"start":{"row":82,"column":0},"end":{"row":83,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"524":{"range":{"start":{"row":84,"column":0},"end":{"row":86,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"525":{"range":{"start":{"row":89,"column":0},"end":{"row":94,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"526":{"range":{"start":{"row":95,"column":0},"end":{"row":105,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"527":{"range":{"start":{"row":110,"column":0},"end":{"row":112,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"528":{"range":{"start":{"row":113,"column":0},"end":{"row":115,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"529":{"range":{"start":{"row":115,"column":0},"end":{"row":115,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"530":{"range":{"start":{"row":119,"column":0},"end":{"row":120,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"531":{"range":{"start":{"row":122,"column":0},"end":{"row":124,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"532":{"range":{"start":{"row":126,"column":0},"end":{"row":129,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"533":{"range":{"start":{"row":130,"column":0},"end":{"row":137,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"534":{"range":{"start":{"row":140,"column":0},"end":{"row":146,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"535":{"range":{"start":{"row":148,"column":0},"end":{"row":151,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"536":{"range":{"start":{"row":153,"column":0},"end":{"row":156,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"537":{"range":{"start":{"row":161,"column":0},"end":{"row":164,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"538":{"range":{"start":{"row":167,"column":0},"end":{"row":172,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"539":{"range":{"start":{"row":173,"column":0},"end":{"row":183,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"540":{"range":{"start":{"row":184,"column":0},"end":{"row":185,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"541":{"range":{"start":{"row":186,"column":0},"end":{"row":187,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"542":{"range":{"start":{"row":189,"column":0},"end":{"row":191,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"543":{"range":{"start":{"row":194,"column":0},"end":{"row":195,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"544":{"range":{"start":{"row":197,"column":0},"end":{"row":198,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"545":{"range":{"start":{"row":199,"column":0},"end":{"row":201,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"546":{"range":{"start":{"row":204,"column":0},"end":{"row":208,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"547":{"range":{"start":{"row":216,"column":0},"end":{"row":225,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"548":{"range":{"start":{"row":226,"column":0},"end":{"row":231,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"549":{"range":{"start":{"row":233,"column":0},"end":{"row":235,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"550":{"range":{"start":{"row":236,"column":0},"end":{"row":237,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"551":{"range":{"start":{"row":238,"column":0},"end":{"row":240,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"552":{"range":{"start":{"row":242,"column":0},"end":{"row":261,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"553":{"range":{"start":{"row":264,"column":0},"end":{"row":276,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"554":{"range":{"start":{"row":286,"column":0},"end":{"row":287,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"555":{"range":{"start":{"row":290,"column":0},"end":{"row":291,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"556":{"range":{"start":{"row":295,"column":0},"end":{"row":296,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"557":{"range":{"start":{"row":297,"column":0},"end":{"row":298,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"558":{"range":{"start":{"row":299,"column":0},"end":{"row":307,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"559":{"range":{"start":{"row":308,"column":0},"end":{"row":318,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"560":{"range":{"start":{"row":319,"column":0},"end":{"row":323,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"561":{"range":{"start":{"row":326,"column":0},"end":{"row":329,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"562":{"range":{"start":{"row":331,"column":0},"end":{"row":336,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"563":{"range":{"start":{"row":337,"column":0},"end":{"row":338,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"564":{"range":{"start":{"row":339,"column":0},"end":{"row":340,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"565":{"range":{"start":{"row":342,"column":0},"end":{"row":353,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"566":{"range":{"start":{"row":354,"column":0},"end":{"row":355,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"567":{"range":{"start":{"row":356,"column":0},"end":{"row":357,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"568":{"range":{"start":{"row":358,"column":0},"end":{"row":377,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"569":{"range":{"start":{"row":378,"column":0},"end":{"row":380,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"570":{"range":{"start":{"row":383,"column":0},"end":{"row":388,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"571":{"range":{"start":{"row":389,"column":0},"end":{"row":392,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"572":{"range":{"start":{"row":393,"column":0},"end":{"row":394,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"573":{"range":{"start":{"row":396,"column":0},"end":{"row":396,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"574":{"range":{"start":{"row":398,"column":0},"end":{"row":399,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"575":{"range":{"start":{"row":401,"column":0},"end":{"row":401,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"576":{"range":{"start":{"row":403,"column":0},"end":{"row":408,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"577":{"range":{"start":{"row":409,"column":0},"end":{"row":411,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"578":{"range":{"start":{"row":414,"column":0},"end":{"row":424,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"579":{"range":{"start":{"row":425,"column":0},"end":{"row":426,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"580":{"range":{"start":{"row":427,"column":0},"end":{"row":432,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"581":{"range":{"start":{"row":433,"column":0},"end":{"row":436,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"582":{"range":{"start":{"row":437,"column":0},"end":{"row":450,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"583":{"range":{"start":{"row":451,"column":0},"end":{"row":453,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"584":{"range":{"start":{"row":456,"column":0},"end":{"row":460,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"585":{"range":{"start":{"row":463,"column":0},"end":{"row":464,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"586":{"range":{"start":{"row":465,"column":0},"end":{"row":477,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"587":{"range":{"start":{"row":479,"column":0},"end":{"row":486,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"588":{"range":{"start":{"row":487,"column":0},"end":{"row":488,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"589":{"range":{"start":{"row":489,"column":0},"end":{"row":490,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"590":{"range":{"start":{"row":491,"column":0},"end":{"row":492,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"591":{"range":{"start":{"row":493,"column":0},"end":{"row":497,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"592":{"range":{"start":{"row":498,"column":0},"end":{"row":504,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"593":{"range":{"start":{"row":506,"column":0},"end":{"row":513,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"594":{"range":{"start":{"row":514,"column":0},"end":{"row":515,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"595":{"range":{"start":{"row":516,"column":0},"end":{"row":519,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"596":{"range":{"start":{"row":520,"column":0},"end":{"row":532,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"597":{"range":{"start":{"row":535,"column":0},"end":{"row":551,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"598":{"range":{"start":{"row":552,"column":0},"end":{"row":574,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"599":{"range":{"start":{"row":575,"column":0},"end":{"row":584,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"600":{"range":{"start":{"row":585,"column":0},"end":{"row":587,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"601":{"range":{"start":{"row":588,"column":0},"end":{"row":613,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"602":{"range":{"start":{"row":618,"column":0},"end":{"row":619,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"603":{"range":{"start":{"row":620,"column":0},"end":{"row":621,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"604":{"range":{"start":{"row":624,"column":0},"end":{"row":629,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"605":{"range":{"start":{"row":631,"column":0},"end":{"row":632,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"606":{"range":{"start":{"row":633,"column":0},"end":{"row":635,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"607":{"range":{"start":{"row":636,"column":0},"end":{"row":637,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"608":{"range":{"start":{"row":639,"column":0},"end":{"row":643,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"609":{"range":{"start":{"row":647,"column":0},"end":{"row":652,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"610":{"range":{"start":{"row":653,"column":0},"end":{"row":656,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"611":{"range":{"start":{"row":657,"column":0},"end":{"row":658,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"612":{"range":{"start":{"row":659,"column":0},"end":{"row":662,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"613":{"range":{"start":{"row":663,"column":0},"end":{"row":665,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"614":{"range":{"start":{"row":667,"column":0},"end":{"row":671,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"615":{"range":{"start":{"row":675,"column":0},"end":{"row":682,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"616":{"range":{"start":{"row":683,"column":0},"end":{"row":684,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"617":{"range":{"start":{"row":685,"column":0},"end":{"row":688,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"618":{"range":{"start":{"row":689,"column":0},"end":{"row":691,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"619":{"range":{"start":{"row":693,"column":0},"end":{"row":695,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"620":{"range":{"start":{"row":705,"column":0},"end":{"row":707,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"621":{"range":{"start":{"row":708,"column":0},"end":{"row":710,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"622":{"range":{"start":{"row":711,"column":0},"end":{"row":713,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"623":{"range":{"start":{"row":713,"column":0},"end":{"row":713,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"624":{"range":{"start":{"row":716,"column":0},"end":{"row":721,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"625":{"range":{"start":{"row":727,"column":0},"end":{"row":729,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"626":{"range":{"start":{"row":731,"column":0},"end":{"row":732,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"627":{"range":{"start":{"row":735,"column":0},"end":{"row":741,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"628":{"range":{"start":{"row":742,"column":0},"end":{"row":743,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"629":{"range":{"start":{"row":746,"column":0},"end":{"row":748,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"630":{"range":{"start":{"row":750,"column":0},"end":{"row":752,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"631":{"range":{"start":{"row":762,"column":0},"end":{"row":764,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"632":{"range":{"start":{"row":765,"column":0},"end":{"row":767,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"633":{"range":{"start":{"row":768,"column":0},"end":{"row":770,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"634":{"range":{"start":{"row":770,"column":0},"end":{"row":770,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"635":{"range":{"start":{"row":773,"column":0},"end":{"row":778,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"636":{"range":{"start":{"row":778,"column":0},"end":{"row":778,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"637":{"range":{"start":{"row":779,"column":0},"end":{"row":779,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":778,"column":0},"end":{"row":778,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":7,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[240,8],[240,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[900,2]],"newRange":[[0,0],[778,0]],"oldText":"<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n    class MCodes extends CI_Model {\n     \n      \n      \n     \n      function getCodeLanguage()\n      {\n        $this->db->select('idlanguage, language'); //change this to the two main values you want to use\n        $this->db->from('language');\n        $query = $this->db->get();\n        foreach($query->result_array() as $row){\n            $data[$row['idlanguage']]=$row['language'];\n        }\n        return $data;\n    }\n    function getCodeLanguage_by($condition,$where)\n      {\n        $data = array();\n        $this->db->select('language'); //change this to the two main values you want to use\n        $this->db->from('language');\n        $this->db->join('Code','language.idlanguage=Code.idlanguage','inner');\n        $this->db->where($condition,$where);\n        $Q = $this->db->get();\n        if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                    \n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    function getCodeCategory()\n      {\n        $this->db->select('idCategory, Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n        $query = $this->db->get();\n        foreach($query->result_array() as $row){\n            $data[$row['idCategory']]=$row['Category'];\n        }\n        return $data;\n    }\n    \n    function getSpecificCodeCategory($id=0)\n      {\n        $data = array();\n        $this->db->select('Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n        $this->db->join('Code','Code.idCategory=Category.idCategory','inner');\n        $this->db->where('Code.idCode',$id);\n        $Q = $this->db->get();\n        if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                    \n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    function getCodeState()\n      {\n        $this->db->select('idState, State'); //change this to the two main values you want to use\n        $this->db->from('State');\n        $query = $this->db->get();\n        foreach($query->result_array() as $row){\n            $data[$row['idState']]=$row['State'];\n        }\n        return $data;\n    }\n      \n      \n      function getAllCodes()\n        {\n            $data = array();\n            $this->db->order_by('timeadded','desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    //BEGIN TEST\n    function getAllCodes2()\n        {\n            $data = array();\n            $this->db->order_by('Code.timeadded','desc');\n            \n            $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n            $this->db->from('Code');\n            $this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            $this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            $this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q=$this->db->get();\n            \n            \n            \n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                    \n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    function getAllCodes_by2($condition,$where)\n        {\n            $data = array();\n            $this->db->where($condition,$where);\n            $this->db->order_by('Code.timeadded','desc');\n            \n            $this->db->select('*');\n            $this->db->from('Code','tempsolution','Contributor','User');\n            $this->db->join('tempsolution','tempsolution.idCode=Code.idCode','inner');\n            $this->db->join('Contributor','tempsolution.idContributor=Contributor.idContributor','inner');\n            $this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q=$this->db->get();\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    \n    function getAllCodes_by2withsolutioncount($condition,$where)\n        {\n            $data = array();\n            $this->db->where($condition,$where);\n            $this->db->order_by('Code.timeadded','desc');\n            \n            $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n            $this->db->from('Code');\n            $this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            $this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            $this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q=$this->db->get();\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    // END TEST\n    \n    function getAllCodes_by($condition,$where)\n        {\n            $data = array();\n            $this->db->where($condition,$where);\n            $this->db->order_by('timeadded','desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    \n    function getSimilarCodes($codename)\n        {\n            $data = array();\n            $this->db->like('codename', $codename);\n            $this->db->or_like('codedescription', $codename); \n            //$this->db->like('codedescription',$codename,'none');\n            //$this->db->where(\"codedescription LIKE '%{$codename}%'\");\n            $this->db->order_by('timeadded','desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    \n    /*\n     *      $sql = \"SELECT codename\n                    FROM Code\n                    WHERE MATCH (codename,codedescription) AGAINST (?) > 0\";\n             $query = $this->db->query($sql, array($codename, $codename));\n            return $query->result();\n     *\n     */\n    }\n    \n    function updateCode()\n    {\n       //$this->db->cache_delete_all();\n        \n        $data = array('codename' => $this->input->post('codename',true),\n                      'codedescription' => $this->input->post('codedescription',true),\n                      'codesource' => $this->input->post('codesource')\n                      );\n        \n        \n        \n        $this->db->where('idCode', $this->input->post('idCode',true));\n        $this->db->update('Code', $data);\n    }\n    \n    //User can delete his code posted if needed\n    //If a User delete a code, all temporary solution related to it should be deleted as well\n    \n    \n    function deleteCode($id)\n    {\n        \n       //$this->db->cache_delete_all();\n       \n        $this->db->where('idCode',$id);\n        $this->db->delete('Code');\n    }\n    \n    function deleteCodeSolutions($id)\n    {\n        $this->db->where('idCode',$id);\n        $this->db->delete('tempsolution');\n    }\n    \n    function deleteCodeFromKB($id)\n    {\n        $this->db->where('idCode',$id);\n        $this->db->delete('KB');\n    }\n    \n    function getsolution($id){\n        \n        $this->db->where('idtempsolution',$id);\n        $Q = $this->db->get('tempsolution');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n        \n    }\n    \n    \n    \n    function addtoknowledgebase($id)\n    {\n        $data = array();\n        $this->db->where('idCode',$id);\n        $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    //print_r($row);\n                    $data = array(\n                                  'idCode' => $row['idCode'],\n                                  'codename' => $row['codename'],\n                                  'codedescription' => $row['codedescription'],\n                                  'codesource' => $row['codesource'],\n                                  'timeadded' => $row['timeadded'],\n                                  'idUser' => $row['idUser'],\n                                  'idlanguage' => $row['idlanguage'],\n                                  'idState' => 1,\n                                  'idCategory' => $row['idCategory']\n                                 );\n                }\n            }\n        $Q->free_result();\n        //$data[0]['idState'] = 1;\n        $kb = array(\n          'idCode' => $data['idCode'],\n          'idUser' => $data['idUser'],\n          'idlanguage'=> $data['idlanguage']\n        );\n        \n        //$this->db->update('Code',$data);\n        $this->db->insert('KB',$kb);\n    }\n    \n    \n    function updateCodeState($id)\n    {\n        //$this->db->cache_delete_all();\n        \n        $data = array('idState' => 1\n                      );\n        \n        \n        \n        \n        $this->db->where('idCode', $id);\n        $this->db->update('Code', $data);\n    }\n    \n    \n    function updateSolutionWinner($id)\n    {\n        //$this->db->cache_delete_all();\n        \n        $data = array('idWinner' => 1\n                      );\n        \n        \n        \n        \n        $this->db->where('idtempsolution', $id);\n        $this->db->update('tempsolution', $data);\n    }\n    //This function allow users to post his problem / snippet\n    public function addCode()\n    {\n       date_default_timezone_set('America/Los_Angeles');\n      $data = array('codename' => $this->input->post('codename',true),\n                    'codedescription' => $this->input->post('codedescription',true),\n                    'codesource' => $this->input->post('codesource'),\n                    'timeadded' => date('Y-m-d H:i:s'),\n                    'idUser'=>$this->input->post('idUser',true),\n                    'idLanguage'=>$this->input->post('idLanguage',true),\n                    'idCategory'=>$this->input->post('idCategory',true),\n                    'idState' => $this->input->post('idState',true),\n\t\t\t\t\t'isPublic' => $this->input->post('isPublic',true)\n                    );\n      \n       //$this->db->cache_delete_all();\n       \n        $this->db->insert('Code', $data);\n    }\n    \n    public function rateCode()\n    {\n        //date_default_timezone_set('America/New_York');\n      $data = array('documentation' => $this->input->post('e1',true),\n                    'reproducibility' => $this->input->post('e2',true),\n                    'readability' => $this->input->post('e3',true),\n                    'errordescription' => $this->input->post('e4',true),\n                    'codesize'=>$this->input->post('e5',true),\n                    'idUser'=>$this->input->post('idUser',true),\n                    'idCode' => $this->input->post('idCode',true)\n                    );\n      \n       //$this->db->cache_delete_all();\n       \n        $this->db->insert('Rating', $data);\n    }\n    \n    public function checkIfVoted($userid,$codeid){\n        $data = array();\n        $this->db->where('idCode',$codeid);\n        $this->db->where('idUser',$userid);\n        $this->db->from('Rating');\n        $Q=$this->db->get();\n        if ($Q->num_rows() > 0){\n            \n            return 1;\n        }else{\n            return 0;\n        }\n        \n    }\n    \n    public function getCodeRate($id=0)\n    {\n        //date_default_timezone_set('America/New_York');\n      $data = array();\n        $this->db->where('idCode',$id);\n        $this->db->select('AVG(documentation) AS documentation,AVG(reproducibility) AS reproducibility,AVG(readability) AS readability,AVG(errordescription) AS errordescription,AVG(codesize) AS codesize');\n            $this->db->from('Rating');\n            $this->db->group_by('idCode');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q=$this->db->get();\n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result(); return $data;\n        \n    }\n    \n    \n    \n    \n    //Once a User is satisfied with a solution proposed by a member of the community he can push it to the knowledge base\n    public function pushToKB()\n    {\n      \n    }\n    \n    //This function allow the user to validate a solution as a one that solved his problem\n    public function validateSolution()\n    {\n      \n    }\n    \n    public function getUserData_by($condition,$value)\n    {\n        $data = array();\n            $this->db->where($condition,$value);\n            $Q = $this->db->get('User');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    public function getCodePoster($codeid)\n    {\n        $data = array();\n        $this->db->where('Code.idCode',$codeid);\n        $this->db->select('*');\n            $this->db->from('User');\n            $this->db->join('Code','Code.idUser=User.idUser','inner');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q=$this->db->get();\n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result(); return $data;\n        \n    }\n    \n    public function createContributor($id)\n    {\n      $temp =  $this->getUserData_by('idUser',$id);\n      $data['iduser'] = $temp[0][\"idUser\"];\n      $data['idCountry'] = $temp[0][\"idCountry\"];\n      $this->db->insert('Contributor', $data);\n    }\n    \n    public function getContributor($id)\n    {\n        $data = array();\n            $this->db->where('idUser',$id);\n            $Q = $this->db->get('Contributor');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    //A user might contribute to someone else's code to add his contribution\n    public function solveCode()\n    {\n      \n      //Check if user exists as contributor or not (First Time contribution ?)\n      \n      \n      \n      $temp = $this->getAllCodes_by('idCode',$this->input->post('id'));\n      \n      $data['tempsolutioncodesource'] = $this->input->post('codesource');\n      $data['timeadded'] = date('Y-m-d H:i:s',now());\n      $data['tempsolutioncomment'] = $this->input->post('comment');\n      \n      $data['idCode'] = $temp[0]['idCode'];\n      $data['idUser'] = $temp[0]['idUser'];\n      $data['idlanguage'] = $temp[0]['idlanguage'];\n      $data['idWinner'] = \"0\";\n      \n      //$data['contributor'] = $this->input->post('currentuser'];\n       //Check if user exists as contributor or not (First Time contribution ?)\n      if($this->getContributor($this->input->post('currentuser')))\n      {\n        $res = $this->getContributor($this->input->post('currentuser'));\n        $data['idContributor'] = $res[0][\"idContributor\"];\n      }else{\n        $this->createContributor($this->input->post('currentuser'));\n        $res = $this->getContributor($this->input->post('currentuser'));\n        $data['idContributor'] = $res[0]['idContributor'];\n      }\n                        \n      \n       \n       ////$this->db->cache_delete_all();\n       \n      $this->db->insert('tempsolution', $data);\n      print_r($data);\n    }\n    \n    public function postNotif($msg, $id,$userid)\n    {\n      \n      //Check if user exists as contributor or not (First Time contribution ?)\n      \n      \n      \n      $temp = $this->getAllCodes_by('idCode',$id);\n      \n      $notif = array();\n                        \n       $namecode = $temp[0]['codename'];\n      // $notif['notif-idCode'] = $temp[0]['idCode'];\n       $cont = $this->getUserData_by('idUser', $userid);\n       $notif['sender'] = $cont[0]['fname'].\" \".$cont[0]['lname'];\n       $notif['message'] = $msg.\" \".$temp[0]['codename'];\n       $notif['seen'] = 0;\n       $notif['timeadded'] = date('Y-m-d H:i:s',now());\n       $notif['idCode'] = $id;\n       $notif['idUser'] = $temp[0]['idUser'];\n       \n                        \n      //print_r($notif);\n      $this->db->insert('Notifications',$notif);\n      //print_r($data);\n    }\n    \n   \n    \n    \n    function getCodeSolution($codeid)\n    {\n        $data = array();\n        $this->db->where('tempsolution.idCode',$codeid);\n        \n        \n        $this->db->select('*');\n            $this->db->from('tempsolution','Contributor','User');\n            $this->db->join('Contributor','tempsolution.idContributor=Contributor.idContributor','inner');\n            $this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q=$this->db->get();\n        \n        \n        \n        \n        //$Q = $this->db->get('tempsolution');\n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result(); return $data;\n    }\n    \n    /**\n    function getContributorName($codeid)\n    {\n        $data = array();\n       \n        $this->db->select('Contributor.idContributor,User.idUser,fname,lname');\n       \n        $this->db->from('Contributor');\n        $this->db->from('User');\n        $this->db->join('Contributor AS B','B.idUser=User.idUser','inner');\n        $this->db->join('tempsolution AS C','C.idContributor=B.idContributor','inner');\n        \n        $this->db->where('C.idCode',$codeid);\n         $this->db->distinct();\n        $Q=$this->db->get();\n        \n        \n        \n        \n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = $row;\n                \n            }\n        }\n        $Q->free_result(); return $data;\n        \n        \n    }\n    **/\n    \n    \n     function getContributorName($codeid)\n    {\n        \n       $data = array();\n       \n        $this->db->select('Contributor.*');\n        $this->db->from('Contributor');\n        $this->db->join('tempsolution','tempsolution.idContributor=Contributor.idContributor','inner');\n        $this->db->where('tempsolution.idCode',$codeid);\n        $this->db->distinct();\n        $Q=$this->db->get();\n    \n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = array_merge($this->getUserData_by('idUser',$row['idUser']),$row);\n                \n                                 \n                \n                \n            }\n        }\n        $Q->free_result(); return $data;\n        \n        \n    }\n    \n    function CodersEngaged($id)\n    {\n        $this->db->distinct();\n        $this->db->where('idCode',$id);\n        $this->db->select('idContributor');\n        $Q=$this->db->get('tempsolution');\n        $count = $Q->num_rows();\n        $Q->free_result();\n        return $count;\n        \n    }\n    \n    function countmembers()\n    {\n        $this->db->distinct();\n        $Q=$this->db->get('User');\n        $count = $Q->num_rows();\n        $Q->free_result();\n        return $count;\n    }\n    \n    function NumberOfSolutionPosted($id)\n    {\n        //$this->db->distinct();\n        $this->db->where('idCode',$id);\n        $Q=$this->db->get('tempsolution');\n        $count = $Q->num_rows();\n        $Q->free_result();\n        return $count;\n        \n    }\n    \n    function countsolutions()\n    {\n        //$this->db->distinct();\n        $Q=$this->db->get('tempsolution');\n        $count = $Q->num_rows();\n        $Q->free_result();\n        return $count;\n    }\n    \n    \n    //Stats - Graphs - Begin\n    \n    function CodesSinceLastVisit()\n        {\n            $data = array();\n        $lastlogin =  $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        $date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n        $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n        $this->db->from('Category');\n        $cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis',$date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code',$cond,'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n        $Q=$this->db->get();\n    \n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = $row;     \n                                 \n                \n                \n            }\n        }\n        $Q->free_result(); return $data;\n        }\n\n\n\tfunction alllang()\n        {\n            $data = array();\n       \n        $this->db->select('language.language, count(language.idlanguage) AS NumberCodes');\n        $this->db->from('language');\n        $this->db->join('Code','Code.idlanguage=language.idlanguage','inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('User.idUser',$userid);\n        $this->db->group_by('language.language');\n        //$this->db->distinct();\n        $Q=$this->db->get();\n    \n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                //$data['label'] = $row['language'];\n                //$data['data']=$row['NumberCodes'];\n                $data[]=array(\n                              'label'=>$row['language'],\n                              'data'=>intval($row['NumberCodes'])\n                              );\n                                 \n                \n                \n            }\n        }\n        $Q->free_result(); return $data;\n        }\n        \n        function alltrend()\n        {\n            $data = array();\n       \n        $this->db->select('Category.Category, count(Category.idCategory) AS NumberCat');\n        $this->db->from('Category');\n        $this->db->join('Code','Code.idCategory=Category.idCategory','inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n       // $this->db->where('User.idUser',$userid);\n        $this->db->group_by('Category.Category');\n        //$this->db->distinct();\n        $Q=$this->db->get();\n    \n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = array(\n                              'label'=>$row['Category'],\n                              'data'=>intval($row['NumberCat'])\n                              );\n                               \n                                 \n                \n                \n            }\n        }\n        $Q->free_result(); return $data;\n        }\n    \n        function codegraph()\n        {\n            $data = array();\n            $this->db->order_by('Code.timeadded','asc');\n            \n            $this->db->select('Code.timeadded,count(Code.idCode) AS Codes ');\n            $this->db->from('Code');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(Code.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q=$this->db->get();\n            \n            \n            \n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded']))*1000,\n                                intval($row['Codes'])\n                                   );\n                    \n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n     function CategoryStats()\n        {\n            $data = array();\n        //$lastlogin =  $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        //$date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n        $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n        $this->db->from('Category');\n        //$cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis',$date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code','Code.idCategory=Category.idCategory','left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n        $Q=$this->db->get();\n    \n        if ($Q->num_rows() > 0)\n        {\n            foreach ($Q->result_array() as $row)\n            {\n                $data[] = $row;     \n                                 \n                \n                \n            }\n        }\n        $Q->free_result();\n        //$this->db->cache_delete_all();\n        return $data;\n        }\n    \n    function solutiongraph()\n        {\n            $data = array();\n            $this->db->order_by('tempsolution.timeadded','asc');\n            \n            $this->db->select('tempsolution.timeadded,count(tempsolution.idtempsolution) AS Solutions');\n            $this->db->from('tempsolution');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(tempsolution.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q=$this->db->get();\n            \n            \n            \n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0)\n            {\n                foreach ($Q->result_array() as $row)\n                {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded']))*1000,\n                                intval($row['Solutions'])\n                                   );\n                    \n                }\n            }\n        $Q->free_result();\n        return $data;\n    }\n    \n    //stats - Graphs - End\n    \n    \n    \n    \n    }\n    \n?>","newText":"<?php if (!defined('BASEPATH')) {\n    exit('No direct script access allowed');\n}\n\n    class MCodes extends CI_Model\n    {\n        public function getCodeLanguage()\n        {\n            $this->db->select('idlanguage, language'); //change this to the two main values you want to use\n        $this->db->from('language');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idlanguage']] = $row['language'];\n            }\n\n            return $data;\n        }\n        public function getCodeLanguage_by($condition, $where)\n        {\n            $data = array();\n            $this->db->select('language'); //change this to the two main values you want to use\n        $this->db->from('language');\n            $this->db->join('Code', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->where($condition, $where);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeCategory()\n        {\n            $this->db->select('idCategory, Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idCategory']] = $row['Category'];\n            }\n\n            return $data;\n        }\n\n        public function getSpecificCodeCategory($id = 0)\n        {\n            $data = array();\n            $this->db->select('Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n            $this->db->where('Code.idCode', $id);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeState()\n        {\n            $this->db->select('idState, State'); //change this to the two main values you want to use\n        $this->db->from('State');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idState']] = $row['State'];\n            }\n\n            return $data;\n        }\n\n        public function getAllCodes()\n        {\n            $data = array();\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //BEGIN TEST\n    public function getAllCodes2()\n    {\n        $data = array();\n        $this->db->order_by('Code.timeadded', 'desc');\n\n        $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n        $this->db->from('Code');\n        $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n        $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n        $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getAllCodes_by2($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('*');\n            $this->db->from('Code', 'tempsolution', 'Contributor', 'User');\n            $this->db->join('tempsolution', 'tempsolution.idCode=Code.idCode', 'inner');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getAllCodes_by2withsolutioncount($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n            $this->db->from('Code');\n            $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n            $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    // END TEST\n\n    public function getAllCodes_by($condition, $where)\n    {\n        $data = array();\n        $this->db->where($condition, $where);\n        $this->db->order_by('timeadded', 'desc');\n        $Q = $this->db->get('Code');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getSimilarCodes($codename)\n        {\n            $data = array();\n            $this->db->like('codename', $codename);\n            $this->db->or_like('codedescription', $codename);\n            //$this->db->like('codedescription',$codename,'none');\n            //$this->db->where(\"codedescription LIKE '%{$codename}%'\");\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n\n    /*\n     *      $sql = \"SELECT codename\n                    FROM Code\n                    WHERE MATCH (codename,codedescription) AGAINST (?) > 0\";\n             $query = $this->db->query($sql, array($codename, $codename));\n            return $query->result();\n     *\n     */\n        }\n\n        public function updateCode()\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('codename' => $this->input->post('codename', true),\n                      'codedescription' => $this->input->post('codedescription', true),\n                      'codesource' => $this->input->post('codesource'),\n                      );\n\n            $this->db->where('idCode', $this->input->post('idCode', true));\n            $this->db->update('Code', $data);\n        }\n\n    //User can delete his code posted if needed\n    //If a User delete a code, all temporary solution related to it should be deleted as well\n\n    public function deleteCode($id)\n    {\n\n       //$this->db->cache_delete_all();\n\n        $this->db->where('idCode', $id);\n        $this->db->delete('Code');\n    }\n\n        public function deleteCodeSolutions($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('tempsolution');\n        }\n\n        public function deleteCodeFromKB($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('KB');\n        }\n\n        public function getsolution($id)\n        {\n            $this->db->where('idtempsolution', $id);\n            $Q = $this->db->get('tempsolution');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function addtoknowledgebase($id)\n        {\n            $data = array();\n            $this->db->where('idCode', $id);\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //print_r($row);\n                    $data = array(\n                                  'idCode' => $row['idCode'],\n                                  'codename' => $row['codename'],\n                                  'codedescription' => $row['codedescription'],\n                                  'codesource' => $row['codesource'],\n                                  'timeadded' => $row['timeadded'],\n                                  'idUser' => $row['idUser'],\n                                  'idlanguage' => $row['idlanguage'],\n                                  'idState' => 1,\n                                  'idCategory' => $row['idCategory'],\n                                 );\n                }\n            }\n            $Q->free_result();\n        //$data[0]['idState'] = 1;\n        $kb = array(\n          'idCode' => $data['idCode'],\n          'idUser' => $data['idUser'],\n          'idlanguage' => $data['idlanguage'],\n        );\n\n        //$this->db->update('Code',$data);\n        $this->db->insert('KB', $kb);\n        }\n\n        public function updateCodeState($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idState' => 1,\n                      );\n\n            $this->db->where('idCode', $id);\n            $this->db->update('Code', $data);\n        }\n\n        public function updateSolutionWinner($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idWinner' => 1,\n                      );\n\n            $this->db->where('idtempsolution', $id);\n            $this->db->update('tempsolution', $data);\n        }\n    //This function allow users to post his problem / snippet\n    public function addCode()\n    {\n        date_default_timezone_set('America/Los_Angeles');\n        $data = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    'codesource' => $this->input->post('codesource'),\n                    'timeadded' => date('Y-m-d H:i:s'),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idLanguage' => $this->input->post('idLanguage', true),\n                    'idCategory' => $this->input->post('idCategory', true),\n                    'idState' => $this->input->post('idState', true),\n                    'isPublic' => $this->input->post('isPublic', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Code', $data);\n    }\n\n        public function rateCode()\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array('documentation' => $this->input->post('e1', true),\n                    'reproducibility' => $this->input->post('e2', true),\n                    'readability' => $this->input->post('e3', true),\n                    'errordescription' => $this->input->post('e4', true),\n                    'codesize' => $this->input->post('e5', true),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idCode' => $this->input->post('idCode', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Rating', $data);\n        }\n\n        public function checkIfVoted($userid, $codeid)\n        {\n            $data = array();\n            $this->db->where('idCode', $codeid);\n            $this->db->where('idUser', $userid);\n            $this->db->from('Rating');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n\n        public function getCodeRate($id = 0)\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array();\n            $this->db->where('idCode', $id);\n            $this->db->select('AVG(documentation) AS documentation,AVG(reproducibility) AS reproducibility,AVG(readability) AS readability,AVG(errordescription) AS errordescription,AVG(codesize) AS codesize');\n            $this->db->from('Rating');\n            $this->db->group_by('idCode');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //Once a User is satisfied with a solution proposed by a member of the community he can push it to the knowledge base\n    public function pushToKB()\n    {\n    }\n\n    //This function allow the user to validate a solution as a one that solved his problem\n    public function validateSolution()\n    {\n    }\n\n        public function getUserData_by($condition, $value)\n        {\n            $data = array();\n            $this->db->where($condition, $value);\n            $Q = $this->db->get('User');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodePoster($codeid)\n        {\n            $data = array();\n            $this->db->where('Code.idCode', $codeid);\n            $this->db->select('*');\n            $this->db->from('User');\n            $this->db->join('Code', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function createContributor($id)\n        {\n            $temp = $this->getUserData_by('idUser', $id);\n            $data['iduser'] = $temp[0]['idUser'];\n            $data['idCountry'] = $temp[0]['idCountry'];\n            $this->db->insert('Contributor', $data);\n        }\n\n        public function getContributor($id)\n        {\n            $data = array();\n            $this->db->where('idUser', $id);\n            $Q = $this->db->get('Contributor');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n    //A user might contribute to someone else's code to add his contribution\n    public function solveCode()\n    {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $this->input->post('id'));\n\n        $data['tempsolutioncodesource'] = $this->input->post('codesource');\n        $data['timeadded'] = date('Y-m-d H:i:s', now());\n        $data['tempsolutioncomment'] = $this->input->post('comment');\n\n        $data['idCode'] = $temp[0]['idCode'];\n        $data['idUser'] = $temp[0]['idUser'];\n        $data['idlanguage'] = $temp[0]['idlanguage'];\n        $data['idWinner'] = '0';\n\n      //$data['contributor'] = $this->input->post('currentuser'];\n       //Check if user exists as contributor or not (First Time contribution ?)\n      if ($this->getContributor($this->input->post('currentuser'))) {\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      } else {\n          $this->createContributor($this->input->post('currentuser'));\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      }\n\n       ////$this->db->cache_delete_all();\n\n      $this->db->insert('tempsolution', $data);\n        print_r($data);\n    }\n\n        public function postNotif($msg, $id, $userid)\n        {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $id);\n\n            $notif = array();\n\n            $namecode = $temp[0]['codename'];\n      // $notif['notif-idCode'] = $temp[0]['idCode'];\n       $cont = $this->getUserData_by('idUser', $userid);\n            $notif['sender'] = $cont[0]['fname'].' '.$cont[0]['lname'];\n            $notif['message'] = $msg.' '.$temp[0]['codename'];\n            $notif['seen'] = 0;\n            $notif['timeadded'] = date('Y-m-d H:i:s', now());\n            $notif['idCode'] = $id;\n            $notif['idUser'] = $temp[0]['idUser'];\n\n      //print_r($notif);\n      $this->db->insert('Notifications', $notif);\n      //print_r($data);\n        }\n\n        public function getCodeSolution($codeid)\n        {\n            $data = array();\n            $this->db->where('tempsolution.idCode', $codeid);\n\n            $this->db->select('*');\n            $this->db->from('tempsolution', 'Contributor', 'User');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n\n        //$Q = $this->db->get('tempsolution');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n            $Q->free_result();\n\n            return $data;\n        }\n\n     /**\n      }\n      **/\n     public function getContributorName($codeid)\n     {\n         $data = array();\n\n         $this->db->select('Contributor.*');\n         $this->db->from('Contributor');\n         $this->db->join('tempsolution', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n         $this->db->where('tempsolution.idCode', $codeid);\n         $this->db->distinct();\n         $Q = $this->db->get();\n\n         if ($Q->num_rows() > 0) {\n             foreach ($Q->result_array() as $row) {\n                 $data[] = array_merge($this->getUserData_by('idUser', $row['idUser']), $row);\n             }\n         }\n         $Q->free_result();\n\n         return $data;\n     }\n\n        public function CodersEngaged($id)\n        {\n            $this->db->distinct();\n            $this->db->where('idCode', $id);\n            $this->db->select('idContributor');\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countmembers()\n        {\n            $this->db->distinct();\n            $Q = $this->db->get('User');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function NumberOfSolutionPosted($id)\n        {\n            //$this->db->distinct();\n        $this->db->where('idCode', $id);\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countsolutions()\n        {\n            //$this->db->distinct();\n        $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n    //Stats - Graphs - Begin\n\n    public function CodesSinceLastVisit()\n    {\n        $data = array();\n        $lastlogin = $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        $date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n        $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n        $this->db->from('Category');\n        $cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis', $date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', $cond, 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n        $Q = $this->db->get();\n\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function alllang()\n        {\n            $data = array();\n\n            $this->db->select('language.language, count(language.idlanguage) AS NumberCodes');\n            $this->db->from('language');\n            $this->db->join('Code', 'Code.idlanguage=language.idlanguage', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('User.idUser',$userid);\n        $this->db->group_by('language.language');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //$data['label'] = $row['language'];\n                //$data['data']=$row['NumberCodes'];\n                $data[] = array(\n                              'label' => $row['language'],\n                              'data' => intval($row['NumberCodes']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function alltrend()\n        {\n            $data = array();\n\n            $this->db->select('Category.Category, count(Category.idCategory) AS NumberCat');\n            $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n       // $this->db->where('User.idUser',$userid);\n        $this->db->group_by('Category.Category');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                              'label' => $row['Category'],\n                              'data' => intval($row['NumberCat']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function codegraph()\n        {\n            $data = array();\n            $this->db->order_by('Code.timeadded', 'asc');\n\n            $this->db->select('Code.timeadded,count(Code.idCode) AS Codes ');\n            $this->db->from('Code');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(Code.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Codes']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n        public function CategoryStats()\n        {\n            $data = array();\n        //$lastlogin =  $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        //$date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n            $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n            $this->db->from('Category');\n        //$cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis',$date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n            $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n        //$this->db->cache_delete_all();\n        return $data;\n        }\n\n        public function solutiongraph()\n        {\n            $data = array();\n            $this->db->order_by('tempsolution.timeadded', 'asc');\n\n            $this->db->select('tempsolution.timeadded,count(tempsolution.idtempsolution) AS Solutions');\n            $this->db->from('tempsolution');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(tempsolution.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Solutions']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //stats - Graphs - End\n    }\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[778,0],[778,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[21,8],[21,8]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[21,8],[21,8]],"newRange":[[21,8],[21,12]],"oldText":"","newText":"    "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[21,12],[21,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[778,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[778,0]],"newRange":[[0,0],[780,0]],"oldText":"<?php if (!defined('BASEPATH')) {\n    exit('No direct script access allowed');\n}\n\n    class MCodes extends CI_Model\n    {\n        public function getCodeLanguage()\n        {\n            $this->db->select('idlanguage, language'); //change this to the two main values you want to use\n        $this->db->from('language');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idlanguage']] = $row['language'];\n            }\n\n            return $data;\n        }\n        public function getCodeLanguage_by($condition, $where)\n        {\n            $data = array();\n            $this->db->select('language'); //change this to the two main values you want to use\n            $this->db->from('language');\n            $this->db->join('Code', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->where($condition, $where);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeCategory()\n        {\n            $this->db->select('idCategory, Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idCategory']] = $row['Category'];\n            }\n\n            return $data;\n        }\n\n        public function getSpecificCodeCategory($id = 0)\n        {\n            $data = array();\n            $this->db->select('Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n            $this->db->where('Code.idCode', $id);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeState()\n        {\n            $this->db->select('idState, State'); //change this to the two main values you want to use\n        $this->db->from('State');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idState']] = $row['State'];\n            }\n\n            return $data;\n        }\n\n        public function getAllCodes()\n        {\n            $data = array();\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //BEGIN TEST\n    public function getAllCodes2()\n    {\n        $data = array();\n        $this->db->order_by('Code.timeadded', 'desc');\n\n        $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n        $this->db->from('Code');\n        $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n        $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n        $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getAllCodes_by2($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('*');\n            $this->db->from('Code', 'tempsolution', 'Contributor', 'User');\n            $this->db->join('tempsolution', 'tempsolution.idCode=Code.idCode', 'inner');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getAllCodes_by2withsolutioncount($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n            $this->db->from('Code');\n            $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n            $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    // END TEST\n\n    public function getAllCodes_by($condition, $where)\n    {\n        $data = array();\n        $this->db->where($condition, $where);\n        $this->db->order_by('timeadded', 'desc');\n        $Q = $this->db->get('Code');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getSimilarCodes($codename)\n        {\n            $data = array();\n            $this->db->like('codename', $codename);\n            $this->db->or_like('codedescription', $codename);\n            //$this->db->like('codedescription',$codename,'none');\n            //$this->db->where(\"codedescription LIKE '%{$codename}%'\");\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n\n    /*\n     *      $sql = \"SELECT codename\n                    FROM Code\n                    WHERE MATCH (codename,codedescription) AGAINST (?) > 0\";\n             $query = $this->db->query($sql, array($codename, $codename));\n            return $query->result();\n     *\n     */\n        }\n\n        public function updateCode()\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('codename' => $this->input->post('codename', true),\n                      'codedescription' => $this->input->post('codedescription', true),\n                      'codesource' => $this->input->post('codesource'),\n                      );\n\n            $this->db->where('idCode', $this->input->post('idCode', true));\n            $this->db->update('Code', $data);\n        }\n\n    //User can delete his code posted if needed\n    //If a User delete a code, all temporary solution related to it should be deleted as well\n\n    public function deleteCode($id)\n    {\n\n       //$this->db->cache_delete_all();\n\n        $this->db->where('idCode', $id);\n        $this->db->delete('Code');\n    }\n\n        public function deleteCodeSolutions($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('tempsolution');\n        }\n\n        public function deleteCodeFromKB($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('KB');\n        }\n\n        public function getsolution($id)\n        {\n            $this->db->where('idtempsolution', $id);\n            $Q = $this->db->get('tempsolution');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function addtoknowledgebase($id)\n        {\n            $data = array();\n            $this->db->where('idCode', $id);\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //print_r($row);\n                    $data = array(\n                                  'idCode' => $row['idCode'],\n                                  'codename' => $row['codename'],\n                                  'codedescription' => $row['codedescription'],\n                                  'codesource' => $row['codesource'],\n                                  'timeadded' => $row['timeadded'],\n                                  'idUser' => $row['idUser'],\n                                  'idlanguage' => $row['idlanguage'],\n                                  'idState' => 1,\n                                  'idCategory' => $row['idCategory'],\n                                 );\n                }\n            }\n            $Q->free_result();\n        //$data[0]['idState'] = 1;\n        $kb = array(\n          'idCode' => $data['idCode'],\n          'idUser' => $data['idUser'],\n          'idlanguage' => $data['idlanguage'],\n        );\n\n        //$this->db->update('Code',$data);\n        $this->db->insert('KB', $kb);\n        }\n\n        public function updateCodeState($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idState' => 1,\n                      );\n\n            $this->db->where('idCode', $id);\n            $this->db->update('Code', $data);\n        }\n\n        public function updateSolutionWinner($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idWinner' => 1,\n                      );\n\n            $this->db->where('idtempsolution', $id);\n            $this->db->update('tempsolution', $data);\n        }\n    //This function allow users to post his problem / snippet\n    public function addCode()\n    {\n        date_default_timezone_set('America/Los_Angeles');\n        $data = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    'codesource' => $this->input->post('codesource'),\n                    'timeadded' => date('Y-m-d H:i:s'),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idLanguage' => $this->input->post('idLanguage', true),\n                    'idCategory' => $this->input->post('idCategory', true),\n                    'idState' => $this->input->post('idState', true),\n                    'isPublic' => $this->input->post('isPublic', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Code', $data);\n    }\n\n        public function rateCode()\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array('documentation' => $this->input->post('e1', true),\n                    'reproducibility' => $this->input->post('e2', true),\n                    'readability' => $this->input->post('e3', true),\n                    'errordescription' => $this->input->post('e4', true),\n                    'codesize' => $this->input->post('e5', true),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idCode' => $this->input->post('idCode', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Rating', $data);\n        }\n\n        public function checkIfVoted($userid, $codeid)\n        {\n            $data = array();\n            $this->db->where('idCode', $codeid);\n            $this->db->where('idUser', $userid);\n            $this->db->from('Rating');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n\n        public function getCodeRate($id = 0)\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array();\n            $this->db->where('idCode', $id);\n            $this->db->select('AVG(documentation) AS documentation,AVG(reproducibility) AS reproducibility,AVG(readability) AS readability,AVG(errordescription) AS errordescription,AVG(codesize) AS codesize');\n            $this->db->from('Rating');\n            $this->db->group_by('idCode');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //Once a User is satisfied with a solution proposed by a member of the community he can push it to the knowledge base\n    public function pushToKB()\n    {\n    }\n\n    //This function allow the user to validate a solution as a one that solved his problem\n    public function validateSolution()\n    {\n    }\n\n        public function getUserData_by($condition, $value)\n        {\n            $data = array();\n            $this->db->where($condition, $value);\n            $Q = $this->db->get('User');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodePoster($codeid)\n        {\n            $data = array();\n            $this->db->where('Code.idCode', $codeid);\n            $this->db->select('*');\n            $this->db->from('User');\n            $this->db->join('Code', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function createContributor($id)\n        {\n            $temp = $this->getUserData_by('idUser', $id);\n            $data['iduser'] = $temp[0]['idUser'];\n            $data['idCountry'] = $temp[0]['idCountry'];\n            $this->db->insert('Contributor', $data);\n        }\n\n        public function getContributor($id)\n        {\n            $data = array();\n            $this->db->where('idUser', $id);\n            $Q = $this->db->get('Contributor');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n    //A user might contribute to someone else's code to add his contribution\n    public function solveCode()\n    {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $this->input->post('id'));\n\n        $data['tempsolutioncodesource'] = $this->input->post('codesource');\n        $data['timeadded'] = date('Y-m-d H:i:s', now());\n        $data['tempsolutioncomment'] = $this->input->post('comment');\n\n        $data['idCode'] = $temp[0]['idCode'];\n        $data['idUser'] = $temp[0]['idUser'];\n        $data['idlanguage'] = $temp[0]['idlanguage'];\n        $data['idWinner'] = '0';\n\n      //$data['contributor'] = $this->input->post('currentuser'];\n       //Check if user exists as contributor or not (First Time contribution ?)\n      if ($this->getContributor($this->input->post('currentuser'))) {\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      } else {\n          $this->createContributor($this->input->post('currentuser'));\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      }\n\n       ////$this->db->cache_delete_all();\n\n      $this->db->insert('tempsolution', $data);\n        print_r($data);\n    }\n\n        public function postNotif($msg, $id, $userid)\n        {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $id);\n\n            $notif = array();\n\n            $namecode = $temp[0]['codename'];\n      // $notif['notif-idCode'] = $temp[0]['idCode'];\n       $cont = $this->getUserData_by('idUser', $userid);\n            $notif['sender'] = $cont[0]['fname'].' '.$cont[0]['lname'];\n            $notif['message'] = $msg.' '.$temp[0]['codename'];\n            $notif['seen'] = 0;\n            $notif['timeadded'] = date('Y-m-d H:i:s', now());\n            $notif['idCode'] = $id;\n            $notif['idUser'] = $temp[0]['idUser'];\n\n      //print_r($notif);\n      $this->db->insert('Notifications', $notif);\n      //print_r($data);\n        }\n\n        public function getCodeSolution($codeid)\n        {\n            $data = array();\n            $this->db->where('tempsolution.idCode', $codeid);\n\n            $this->db->select('*');\n            $this->db->from('tempsolution', 'Contributor', 'User');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n\n        //$Q = $this->db->get('tempsolution');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n            $Q->free_result();\n\n            return $data;\n        }\n\n     /**\n      }\n      **/\n     public function getContributorName($codeid)\n     {\n         $data = array();\n\n         $this->db->select('Contributor.*');\n         $this->db->from('Contributor');\n         $this->db->join('tempsolution', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n         $this->db->where('tempsolution.idCode', $codeid);\n         $this->db->distinct();\n         $Q = $this->db->get();\n\n         if ($Q->num_rows() > 0) {\n             foreach ($Q->result_array() as $row) {\n                 $data[] = array_merge($this->getUserData_by('idUser', $row['idUser']), $row);\n             }\n         }\n         $Q->free_result();\n\n         return $data;\n     }\n\n        public function CodersEngaged($id)\n        {\n            $this->db->distinct();\n            $this->db->where('idCode', $id);\n            $this->db->select('idContributor');\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countmembers()\n        {\n            $this->db->distinct();\n            $Q = $this->db->get('User');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function NumberOfSolutionPosted($id)\n        {\n            //$this->db->distinct();\n        $this->db->where('idCode', $id);\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countsolutions()\n        {\n            //$this->db->distinct();\n        $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n    //Stats - Graphs - Begin\n\n    public function CodesSinceLastVisit()\n    {\n        $data = array();\n        $lastlogin = $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        $date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n        $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n        $this->db->from('Category');\n        $cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis', $date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', $cond, 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n        $Q = $this->db->get();\n\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function alllang()\n        {\n            $data = array();\n\n            $this->db->select('language.language, count(language.idlanguage) AS NumberCodes');\n            $this->db->from('language');\n            $this->db->join('Code', 'Code.idlanguage=language.idlanguage', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('User.idUser',$userid);\n        $this->db->group_by('language.language');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //$data['label'] = $row['language'];\n                //$data['data']=$row['NumberCodes'];\n                $data[] = array(\n                              'label' => $row['language'],\n                              'data' => intval($row['NumberCodes']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function alltrend()\n        {\n            $data = array();\n\n            $this->db->select('Category.Category, count(Category.idCategory) AS NumberCat');\n            $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n       // $this->db->where('User.idUser',$userid);\n        $this->db->group_by('Category.Category');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                              'label' => $row['Category'],\n                              'data' => intval($row['NumberCat']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function codegraph()\n        {\n            $data = array();\n            $this->db->order_by('Code.timeadded', 'asc');\n\n            $this->db->select('Code.timeadded,count(Code.idCode) AS Codes ');\n            $this->db->from('Code');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(Code.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Codes']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n        public function CategoryStats()\n        {\n            $data = array();\n        //$lastlogin =  $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        //$date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n            $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n            $this->db->from('Category');\n        //$cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis',$date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n            $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n        //$this->db->cache_delete_all();\n        return $data;\n        }\n\n        public function solutiongraph()\n        {\n            $data = array();\n            $this->db->order_by('tempsolution.timeadded', 'asc');\n\n            $this->db->select('tempsolution.timeadded,count(tempsolution.idtempsolution) AS Solutions');\n            $this->db->from('tempsolution');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(tempsolution.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Solutions']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //stats - Graphs - End\n    }\n","newText":"<?php\n\nif (!defined('BASEPATH')) {\n    exit('No direct script access allowed');\n}\n\n    class MCodes extends CI_Model\n    {\n        public function getCodeLanguage()\n        {\n            $this->db->select('idlanguage, language'); //change this to the two main values you want to use\n        $this->db->from('language');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idlanguage']] = $row['language'];\n            }\n\n            return $data;\n        }\n        public function getCodeLanguage_by($condition, $where)\n        {\n            $data = array();\n            $this->db->select('language'); //change this to the two main values you want to use\n            $this->db->from('language');\n            $this->db->join('Code', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->where($condition, $where);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeCategory()\n        {\n            $this->db->select('idCategory, Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idCategory']] = $row['Category'];\n            }\n\n            return $data;\n        }\n\n        public function getSpecificCodeCategory($id = 0)\n        {\n            $data = array();\n            $this->db->select('Category'); //change this to the two main values you want to use\n        $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n            $this->db->where('Code.idCode', $id);\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodeState()\n        {\n            $this->db->select('idState, State'); //change this to the two main values you want to use\n        $this->db->from('State');\n            $query = $this->db->get();\n            foreach ($query->result_array() as $row) {\n                $data[$row['idState']] = $row['State'];\n            }\n\n            return $data;\n        }\n\n        public function getAllCodes()\n        {\n            $data = array();\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //BEGIN TEST\n    public function getAllCodes2()\n    {\n        $data = array();\n        $this->db->order_by('Code.timeadded', 'desc');\n\n        $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n        $this->db->from('Code');\n        $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n        $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n        $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getAllCodes_by2($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('*');\n            $this->db->from('Code', 'tempsolution', 'Contributor', 'User');\n            $this->db->join('tempsolution', 'tempsolution.idCode=Code.idCode', 'inner');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getAllCodes_by2withsolutioncount($condition, $where)\n        {\n            $data = array();\n            $this->db->where($condition, $where);\n            $this->db->order_by('Code.timeadded', 'desc');\n\n            $this->db->select('Code.*, count(tempsolution.idtempsolution) AS SolutionsPerCode , User.*, language.*');\n            $this->db->from('Code');\n            $this->db->join('tempsolution', 'Code.idCode=tempsolution.idCode', 'left outer');\n            $this->db->join('language', 'language.idlanguage=Code.idlanguage', 'inner');\n            $this->db->join('User', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('Code.idCode');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    // END TEST\n\n    public function getAllCodes_by($condition, $where)\n    {\n        $data = array();\n        $this->db->where($condition, $where);\n        $this->db->order_by('timeadded', 'desc');\n        $Q = $this->db->get('Code');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function getSimilarCodes($codename)\n        {\n            $data = array();\n            $this->db->like('codename', $codename);\n            $this->db->or_like('codedescription', $codename);\n            //$this->db->like('codedescription',$codename,'none');\n            //$this->db->where(\"codedescription LIKE '%{$codename}%'\");\n            $this->db->order_by('timeadded', 'desc');\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n\n    /*\n     *      $sql = \"SELECT codename\n                    FROM Code\n                    WHERE MATCH (codename,codedescription) AGAINST (?) > 0\";\n             $query = $this->db->query($sql, array($codename, $codename));\n            return $query->result();\n     *\n     */\n        }\n\n        public function updateCode()\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('codename' => $this->input->post('codename', true),\n                      'codedescription' => $this->input->post('codedescription', true),\n                      'codesource' => $this->input->post('codesource'),\n                      );\n\n            $this->db->where('idCode', $this->input->post('idCode', true));\n            $this->db->update('Code', $data);\n        }\n\n    //User can delete his code posted if needed\n    //If a User delete a code, all temporary solution related to it should be deleted as well\n\n    public function deleteCode($id)\n    {\n\n       //$this->db->cache_delete_all();\n\n        $this->db->where('idCode', $id);\n        $this->db->delete('Code');\n    }\n\n        public function deleteCodeSolutions($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('tempsolution');\n        }\n\n        public function deleteCodeFromKB($id)\n        {\n            $this->db->where('idCode', $id);\n            $this->db->delete('KB');\n        }\n\n        public function getsolution($id)\n        {\n            $this->db->where('idtempsolution', $id);\n            $Q = $this->db->get('tempsolution');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function addtoknowledgebase($id)\n        {\n            $data = array();\n            $this->db->where('idCode', $id);\n            $Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //print_r($row);\n                    $data = array(\n                                  'idCode' => $row['idCode'],\n                                  'codename' => $row['codename'],\n                                  'codedescription' => $row['codedescription'],\n                                  'codesource' => $row['codesource'],\n                                  'timeadded' => $row['timeadded'],\n                                  'idUser' => $row['idUser'],\n                                  'idlanguage' => $row['idlanguage'],\n                                  'idState' => 1,\n                                  'idCategory' => $row['idCategory'],\n                                 );\n                }\n            }\n            $Q->free_result();\n        //$data[0]['idState'] = 1;\n        $kb = array(\n          'idCode' => $data['idCode'],\n          'idUser' => $data['idUser'],\n          'idlanguage' => $data['idlanguage'],\n        );\n\n        //$this->db->update('Code',$data);\n        $this->db->insert('KB', $kb);\n        }\n\n        public function updateCodeState($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idState' => 1,\n                      );\n\n            $this->db->where('idCode', $id);\n            $this->db->update('Code', $data);\n        }\n\n        public function updateSolutionWinner($id)\n        {\n            //$this->db->cache_delete_all();\n\n        $data = array('idWinner' => 1,\n                      );\n\n            $this->db->where('idtempsolution', $id);\n            $this->db->update('tempsolution', $data);\n        }\n    //This function allow users to post his problem / snippet\n    public function addCode()\n    {\n        date_default_timezone_set('America/Los_Angeles');\n        $data = array('codename' => $this->input->post('codename', true),\n                    'codedescription' => $this->input->post('codedescription', true),\n                    'codesource' => $this->input->post('codesource'),\n                    'timeadded' => date('Y-m-d H:i:s'),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idLanguage' => $this->input->post('idLanguage', true),\n                    'idCategory' => $this->input->post('idCategory', true),\n                    'idState' => $this->input->post('idState', true),\n                    'isPublic' => $this->input->post('isPublic', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Code', $data);\n    }\n\n        public function rateCode()\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array('documentation' => $this->input->post('e1', true),\n                    'reproducibility' => $this->input->post('e2', true),\n                    'readability' => $this->input->post('e3', true),\n                    'errordescription' => $this->input->post('e4', true),\n                    'codesize' => $this->input->post('e5', true),\n                    'idUser' => $this->input->post('idUser', true),\n                    'idCode' => $this->input->post('idCode', true),\n                    );\n\n       //$this->db->cache_delete_all();\n\n        $this->db->insert('Rating', $data);\n        }\n\n        public function checkIfVoted($userid, $codeid)\n        {\n            $data = array();\n            $this->db->where('idCode', $codeid);\n            $this->db->where('idUser', $userid);\n            $this->db->from('Rating');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n\n        public function getCodeRate($id = 0)\n        {\n            //date_default_timezone_set('America/New_York');\n      $data = array();\n            $this->db->where('idCode', $id);\n            $this->db->select('AVG(documentation) AS documentation,AVG(reproducibility) AS reproducibility,AVG(readability) AS readability,AVG(errordescription) AS errordescription,AVG(codesize) AS codesize');\n            $this->db->from('Rating');\n            $this->db->group_by('idCode');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //Once a User is satisfied with a solution proposed by a member of the community he can push it to the knowledge base\n    public function pushToKB()\n    {\n    }\n\n    //This function allow the user to validate a solution as a one that solved his problem\n    public function validateSolution()\n    {\n    }\n\n        public function getUserData_by($condition, $value)\n        {\n            $data = array();\n            $this->db->where($condition, $value);\n            $Q = $this->db->get('User');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function getCodePoster($codeid)\n        {\n            $data = array();\n            $this->db->where('Code.idCode', $codeid);\n            $this->db->select('*');\n            $this->db->from('User');\n            $this->db->join('Code', 'Code.idUser=User.idUser', 'inner');\n            //$this->db->join('User','Contributor.idUser=User.idUser','inner');\n            $Q = $this->db->get();\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function createContributor($id)\n        {\n            $temp = $this->getUserData_by('idUser', $id);\n            $data['iduser'] = $temp[0]['idUser'];\n            $data['idCountry'] = $temp[0]['idCountry'];\n            $this->db->insert('Contributor', $data);\n        }\n\n        public function getContributor($id)\n        {\n            $data = array();\n            $this->db->where('idUser', $id);\n            $Q = $this->db->get('Contributor');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n    //A user might contribute to someone else's code to add his contribution\n    public function solveCode()\n    {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $this->input->post('id'));\n\n        $data['tempsolutioncodesource'] = $this->input->post('codesource');\n        $data['timeadded'] = date('Y-m-d H:i:s', now());\n        $data['tempsolutioncomment'] = $this->input->post('comment');\n\n        $data['idCode'] = $temp[0]['idCode'];\n        $data['idUser'] = $temp[0]['idUser'];\n        $data['idlanguage'] = $temp[0]['idlanguage'];\n        $data['idWinner'] = '0';\n\n      //$data['contributor'] = $this->input->post('currentuser'];\n       //Check if user exists as contributor or not (First Time contribution ?)\n      if ($this->getContributor($this->input->post('currentuser'))) {\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      } else {\n          $this->createContributor($this->input->post('currentuser'));\n          $res = $this->getContributor($this->input->post('currentuser'));\n          $data['idContributor'] = $res[0]['idContributor'];\n      }\n\n       ////$this->db->cache_delete_all();\n\n      $this->db->insert('tempsolution', $data);\n        print_r($data);\n    }\n\n        public function postNotif($msg, $id, $userid)\n        {\n\n      //Check if user exists as contributor or not (First Time contribution ?)\n\n      $temp = $this->getAllCodes_by('idCode', $id);\n\n            $notif = array();\n\n            $namecode = $temp[0]['codename'];\n      // $notif['notif-idCode'] = $temp[0]['idCode'];\n       $cont = $this->getUserData_by('idUser', $userid);\n            $notif['sender'] = $cont[0]['fname'].' '.$cont[0]['lname'];\n            $notif['message'] = $msg.' '.$temp[0]['codename'];\n            $notif['seen'] = 0;\n            $notif['timeadded'] = date('Y-m-d H:i:s', now());\n            $notif['idCode'] = $id;\n            $notif['idUser'] = $temp[0]['idUser'];\n\n      //print_r($notif);\n      $this->db->insert('Notifications', $notif);\n      //print_r($data);\n        }\n\n        public function getCodeSolution($codeid)\n        {\n            $data = array();\n            $this->db->where('tempsolution.idCode', $codeid);\n\n            $this->db->select('*');\n            $this->db->from('tempsolution', 'Contributor', 'User');\n            $this->db->join('Contributor', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n            $this->db->join('User', 'Contributor.idUser=User.idUser', 'inner');\n            $Q = $this->db->get();\n\n        //$Q = $this->db->get('tempsolution');\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n            $Q->free_result();\n\n            return $data;\n        }\n\n     /**\n      }\n      **/\n     public function getContributorName($codeid)\n     {\n         $data = array();\n\n         $this->db->select('Contributor.*');\n         $this->db->from('Contributor');\n         $this->db->join('tempsolution', 'tempsolution.idContributor=Contributor.idContributor', 'inner');\n         $this->db->where('tempsolution.idCode', $codeid);\n         $this->db->distinct();\n         $Q = $this->db->get();\n\n         if ($Q->num_rows() > 0) {\n             foreach ($Q->result_array() as $row) {\n                 $data[] = array_merge($this->getUserData_by('idUser', $row['idUser']), $row);\n             }\n         }\n         $Q->free_result();\n\n         return $data;\n     }\n\n        public function CodersEngaged($id)\n        {\n            $this->db->distinct();\n            $this->db->where('idCode', $id);\n            $this->db->select('idContributor');\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countmembers()\n        {\n            $this->db->distinct();\n            $Q = $this->db->get('User');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function NumberOfSolutionPosted($id)\n        {\n            //$this->db->distinct();\n        $this->db->where('idCode', $id);\n            $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n        public function countsolutions()\n        {\n            //$this->db->distinct();\n        $Q = $this->db->get('tempsolution');\n            $count = $Q->num_rows();\n            $Q->free_result();\n\n            return $count;\n        }\n\n    //Stats - Graphs - Begin\n\n    public function CodesSinceLastVisit()\n    {\n        $data = array();\n        $lastlogin = $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        $date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n        $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n        $this->db->from('Category');\n        $cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis', $date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', $cond, 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n        $Q = $this->db->get();\n\n        if ($Q->num_rows() > 0) {\n            foreach ($Q->result_array() as $row) {\n                $data[] = $row;\n            }\n        }\n        $Q->free_result();\n\n        return $data;\n    }\n\n        public function alllang()\n        {\n            $data = array();\n\n            $this->db->select('language.language, count(language.idlanguage) AS NumberCodes');\n            $this->db->from('language');\n            $this->db->join('Code', 'Code.idlanguage=language.idlanguage', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('User.idUser',$userid);\n        $this->db->group_by('language.language');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    //$data['label'] = $row['language'];\n                //$data['data']=$row['NumberCodes'];\n                $data[] = array(\n                              'label' => $row['language'],\n                              'data' => intval($row['NumberCodes']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function alltrend()\n        {\n            $data = array();\n\n            $this->db->select('Category.Category, count(Category.idCategory) AS NumberCat');\n            $this->db->from('Category');\n            $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'inner');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n       // $this->db->where('User.idUser',$userid);\n        $this->db->group_by('Category.Category');\n        //$this->db->distinct();\n        $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                              'label' => $row['Category'],\n                              'data' => intval($row['NumberCat']),\n                              );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n        public function codegraph()\n        {\n            $data = array();\n            $this->db->order_by('Code.timeadded', 'asc');\n\n            $this->db->select('Code.timeadded,count(Code.idCode) AS Codes ');\n            $this->db->from('Code');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(Code.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Codes']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n        public function CategoryStats()\n        {\n            $data = array();\n        //$lastlogin =  $this->MUsers->getLastActivity($this->tank_auth->get_user_id());\n        //$date = date( 'Y-m-d H:i:s', strtotime($lastlogin[0]['last_login']) );\n        //$date = strtotime($lastlogin[0]['last_login']);\n        $this->db->distinct();\n            $this->db->select('Category.Category, count(Code.idCode) AS CodesInCat');\n            $this->db->from('Category');\n        //$cond = \"'Code.idCategory=Category.idCategory AND DATE_FORMAT(Code.timeadded, '%Y%m%d%h%i%s') >  '\".date('Ymdhis',$date).\"'\";\n       // $this->db->join('Code',$cond,'left outer');\n        $this->db->join('Code', 'Code.idCategory=Category.idCategory', 'left outer');\n        //$this->db->join('User','Code.idUser=User.idUser','inner');\n        //$this->db->where('B.timeadded >',$lastlogin[0]['last_login']);\n        $this->db->group_by('Category.Category');\n            $Q = $this->db->get();\n\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = $row;\n                }\n            }\n            $Q->free_result();\n        //$this->db->cache_delete_all();\n        return $data;\n        }\n\n        public function solutiongraph()\n        {\n            $data = array();\n            $this->db->order_by('tempsolution.timeadded', 'asc');\n\n            $this->db->select('tempsolution.timeadded,count(tempsolution.idtempsolution) AS Solutions');\n            $this->db->from('tempsolution');\n            //$this->db->join('tempsolution','Code.idCode=tempsolution.idCode','left outer');\n            //$this->db->join('language','language.idlanguage=Code.idlanguage','inner');\n            //$this->db->join('User','Code.idUser=User.idUser','inner');\n            //$this->db->where('Code.idCode',1);\n            //$this->db->or_where('tempsolution.idtempsolution',NULL);\n            $this->db->group_by('WEEK(tempsolution.timeadded)');\n           // $this->db->where('tempsolution.idCode','Code.idCode');\n            //$this->db->distinct();\n            $Q = $this->db->get();\n\n            //$Q = $this->db->get('Code');\n            if ($Q->num_rows() > 0) {\n                foreach ($Q->result_array() as $row) {\n                    $data[] = array(\n                                intval(strtotime($row['timeadded'])) * 1000,\n                                intval($row['Solutions']),\n                                   );\n                }\n            }\n            $Q->free_result();\n\n            return $data;\n        }\n\n    //stats - Graphs - End\n    }\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[780,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/Rad/Documents/Dev/CodersCrowd/application/models/mcodes.php","digestWhenLastPersisted":"5e3d0b67ea47d06c75f5c045eaa6ec97c2962c44","preferredLineEnding":null,"nextMarkerId":638,"deserializer":"TextBuffer","version":5},{"id":"fdea8ecf5f62a2d7cf2f3048d0cb0c71","text":"<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\n/*\n|--------------------------------------------------------------------------\n| Base Site URL\n|--------------------------------------------------------------------------\n|\n| URL to your CodeIgniter root. Typically this will be your base URL,\n| WITH a trailing slash:\n|\n|\thttp://example.com/\n|\n| If this is not set then CodeIgniter will guess the protocol, domain and\n| path to your installation.\n|\n*/\n$config['base_url']\t= 'http://coderscrowd.com/app/';\n\n/*\n|--------------------------------------------------------------------------\n| Index File\n|--------------------------------------------------------------------------\n|\n| Typically this will be your index.php file, unless you've renamed it to\n| something else. If you are using mod_rewrite to remove the page set this\n| variable so that it is blank.\n|\n*/\n$config['index_page'] = '';\n\n/*\n|--------------------------------------------------------------------------\n| URI PROTOCOL\n|--------------------------------------------------------------------------\n|\n| This item determines which server global should be used to retrieve the\n| URI string.  The default setting of 'AUTO' works for most servers.\n| If your links do not seem to work, try one of the other delicious flavors:\n|\n| 'AUTO'\t\t\tDefault - auto detects\n| 'PATH_INFO'\t\tUses the PATH_INFO\n| 'QUERY_STRING'\tUses the QUERY_STRING\n| 'REQUEST_URI'\t\tUses the REQUEST_URI\n| 'ORIG_PATH_INFO'\tUses the ORIG_PATH_INFO\n|\n*/\n$config['uri_protocol']\t= 'AUTO';\n\n/*\n|--------------------------------------------------------------------------\n| URL suffix\n|--------------------------------------------------------------------------\n|\n| This option allows you to add a suffix to all URLs generated by CodeIgniter.\n| For more information please see the user guide:\n|\n| http://codeigniter.com/user_guide/general/urls.html\n*/\n\n$config['url_suffix'] = '';\n\n/*\n|--------------------------------------------------------------------------\n| Default Language\n|--------------------------------------------------------------------------\n|\n| This determines which set of language files should be used. Make sure\n| there is an available translation if you intend to use something other\n| than english.\n|\n*/\n$config['language']\t= 'english';\n\n/*\n|--------------------------------------------------------------------------\n| Default Character Set\n|--------------------------------------------------------------------------\n|\n| This determines which character set is used by default in various methods\n| that require a character set to be provided.\n|\n*/\n$config['charset'] = 'UTF-8';\n\n/*\n|--------------------------------------------------------------------------\n| Enable/Disable System Hooks\n|--------------------------------------------------------------------------\n|\n| If you would like to use the 'hooks' feature you must enable it by\n| setting this variable to TRUE (boolean).  See the user guide for details.\n|\n*/\n$config['enable_hooks'] = FALSE;\n\n\n/*\n|--------------------------------------------------------------------------\n| Class Extension Prefix\n|--------------------------------------------------------------------------\n|\n| This item allows you to set the filename/classname prefix when extending\n| native libraries.  For more information please see the user guide:\n|\n| http://codeigniter.com/user_guide/general/core_classes.html\n| http://codeigniter.com/user_guide/general/creating_libraries.html\n|\n*/\n$config['subclass_prefix'] = 'MY_';\n\n\n/*\n|--------------------------------------------------------------------------\n| Allowed URL Characters\n|--------------------------------------------------------------------------\n|\n| This lets you specify with a regular expression which characters are permitted\n| within your URLs.  When someone tries to submit a URL with disallowed\n| characters they will get a warning message.\n|\n| As a security measure you are STRONGLY encouraged to restrict URLs to\n| as few characters as possible.  By default only these are allowed: a-z 0-9~%.:_-\n|\n| Leave blank to allow all characters -- but only if you are insane.\n|\n| DO NOT CHANGE THIS UNLESS YOU FULLY UNDERSTAND THE REPERCUSSIONS!!\n|\n*/\n$config['permitted_uri_chars'] = 'a-z 0-9~%.:_\\-';\n\n\n/*\n|--------------------------------------------------------------------------\n| Enable Query Strings\n|--------------------------------------------------------------------------\n|\n| By default CodeIgniter uses search-engine friendly segment based URLs:\n| example.com/who/what/where/\n|\n| By default CodeIgniter enables access to the $_GET array.  If for some\n| reason you would like to disable it, set 'allow_get_array' to FALSE.\n|\n| You can optionally enable standard query string based URLs:\n| example.com?who=me&what=something&where=here\n|\n| Options are: TRUE or FALSE (boolean)\n|\n| The other items let you set the query string 'words' that will\n| invoke your controllers and its functions:\n| example.com/index.php?c=controller&m=function\n|\n| Please note that some of the helpers won't work as expected when\n| this feature is enabled, since CodeIgniter is designed primarily to\n| use segment based URLs.\n|\n*/\n$config['allow_get_array']\t\t= TRUE;\n$config['enable_query_strings'] = FALSE;\n$config['controller_trigger']\t= 'c';\n$config['function_trigger']\t\t= 'm';\n$config['directory_trigger']\t= 'd'; // experimental not currently in use\n\n/*\n|--------------------------------------------------------------------------\n| Error Logging Threshold\n|--------------------------------------------------------------------------\n|\n| If you have enabled error logging, you can set an error threshold to\n| determine what gets logged. Threshold options are:\n| You can enable error logging by setting a threshold over zero. The\n| threshold determines what gets logged. Threshold options are:\n|\n|\t0 = Disables logging, Error logging TURNED OFF\n|\t1 = Error Messages (including PHP errors)\n|\t2 = Debug Messages\n|\t3 = Informational Messages\n|\t4 = All Messages\n|\n| For a live site you'll usually only enable Errors (1) to be logged otherwise\n| your log files will fill up very fast.\n|\n*/\n$config['log_threshold'] = 4;\n\n/*\n|--------------------------------------------------------------------------\n| Error Logging Directory Path\n|--------------------------------------------------------------------------\n|\n| Leave this BLANK unless you would like to set something other than the default\n| application/logs/ folder. Use a full server path with trailing slash.\n|\n*/\n$config['log_path'] = '/home/rad/public/coderscrowd.com/public/app/ci_err.log';\n\n/*\n|--------------------------------------------------------------------------\n| Date Format for Logs\n|--------------------------------------------------------------------------\n|\n| Each item that is logged has an associated date. You can use PHP date\n| codes to set your own date formatting\n|\n*/\n$config['log_date_format'] = 'Y-m-d H:i:s';\n\n/*\n|--------------------------------------------------------------------------\n| Cache Directory Path\n|--------------------------------------------------------------------------\n|\n| Leave this BLANK unless you would like to set something other than the default\n| system/cache/ folder.  Use a full server path with trailing slash.\n|\n*/\n$config['cache_path'] = '';\n\n/*\n|--------------------------------------------------------------------------\n| Encryption Key\n|--------------------------------------------------------------------------\n|\n| If you use the Encryption class or the Session class you\n| MUST set an encryption key.  See the user guide for info.\n|\n*/\n$config['encryption_key'] = 'AljkjhaakjhkjahakjhWkjhkjhskjhskjhvnbv128jhkjh22hkjh22kjhkshkjh';\n\n/*\n|--------------------------------------------------------------------------\n| Session Variables\n|--------------------------------------------------------------------------\n|\n| 'sess_cookie_name'\t\t= the name you want for the cookie\n| 'sess_expiration'\t\t\t= the number of SECONDS you want the session to last.\n|   by default sessions last 7200 seconds (two hours).  Set to zero for no expiration.\n| 'sess_expire_on_close'\t= Whether to cause the session to expire automatically\n|   when the browser window is closed\n| 'sess_encrypt_cookie'\t\t= Whether to encrypt the cookie\n| 'sess_use_database'\t\t= Whether to save the session data to a database\n| 'sess_table_name'\t\t\t= The name of the session database table\n| 'sess_match_ip'\t\t\t= Whether to match the user's IP address when reading the session data\n| 'sess_match_useragent'\t= Whether to match the User Agent when reading the session data\n| 'sess_time_to_update'\t\t= how many seconds between CI refreshing Session Information\n|\n*/\n$config['sess_cookie_name']\t\t= 'ci_session';\n$config['sess_expiration']\t\t= 604800;\n$config['sess_expire_on_close']\t= TRUE;\n$config['sess_encrypt_cookie']\t= FALSE;\n$config['sess_use_database']\t= FALSE;\n$config['sess_table_name']\t\t= 'ci_sessions';\n$config['sess_match_ip']\t\t= TRUE;\n$config['sess_match_useragent']\t= FALSE;\n$config['sess_time_to_update']\t= 300;\n\n/*\n|--------------------------------------------------------------------------\n| Cookie Related Variables\n|--------------------------------------------------------------------------\n|\n| 'cookie_prefix' = Set a prefix if you need to avoid collisions\n| 'cookie_domain' = Set to .your-domain.com for site-wide cookies\n| 'cookie_path'   =  Typically will be a forward slash\n| 'cookie_secure' =  Cookies will only be set if a secure HTTPS connection exists.\n|\n*/\n$config['cookie_prefix']\t= \"\";\n$config['cookie_domain']\t= \"\";\n$config['cookie_path']\t\t= \"/\";\n$config['cookie_secure']\t= FALSE;\n\n/*\n|--------------------------------------------------------------------------\n| Global XSS Filtering\n|--------------------------------------------------------------------------\n|\n| Determines whether the XSS filter is always active when GET, POST or\n| COOKIE data is encountered\n|\n*/\n$config['global_xss_filtering'] = FALSE;\n\n/*\n|--------------------------------------------------------------------------\n| Cross Site Request Forgery\n|--------------------------------------------------------------------------\n| Enables a CSRF cookie token to be set. When set to TRUE, token will be\n| checked on a submitted form. If you are accepting user data, it is strongly\n| recommended CSRF protection be enabled.\n|\n| 'csrf_token_name' = The token name\n| 'csrf_cookie_name' = The cookie name\n| 'csrf_expire' = The number in seconds the token should expire.\n*/\n$config['csrf_protection'] = FALSE;\n$config['csrf_token_name'] = 'csrf_test_name';\n$config['csrf_cookie_name'] = 'csrf_cookie_name';\n$config['csrf_expire'] = 7200;\n\n/*\n|--------------------------------------------------------------------------\n| Output Compression\n|--------------------------------------------------------------------------\n|\n| Enables Gzip output compression for faster page loads.  When enabled,\n| the output class will test whether your server supports Gzip.\n| Even if it does, however, not all browsers support compression\n| so enable only if you are reasonably sure your visitors can handle it.\n|\n| VERY IMPORTANT:  If you are getting a blank page when compression is enabled it\n| means you are prematurely outputting something to your browser. It could\n| even be a line of whitespace at the end of one of your scripts.  For\n| compression to work, nothing can be sent before the output buffer is called\n| by the output class.  Do not 'echo' any values with compression enabled.\n|\n*/\n$config['compress_output'] = FALSE;\n\n/*\n|--------------------------------------------------------------------------\n| Master Time Reference\n|--------------------------------------------------------------------------\n|\n| Options are 'local' or 'gmt'.  This pref tells the system whether to use\n| your server's local time as the master 'now' reference, or convert it to\n| GMT.  See the 'date helper' page of the user guide for information\n| regarding date handling.\n|\n*/\n$config['time_reference'] = 'local';\n\n\n/*\n|--------------------------------------------------------------------------\n| Rewrite PHP Short Tags\n|--------------------------------------------------------------------------\n|\n| If your PHP installation does not have short tag support enabled CI\n| can rewrite the tags on-the-fly, enabling you to utilize that syntax\n| in your view files.  Options are TRUE or FALSE (boolean)\n|\n*/\n$config['rewrite_short_tags'] = FALSE;\n\n\n/*\n|--------------------------------------------------------------------------\n| Reverse Proxy IPs\n|--------------------------------------------------------------------------\n|\n| If your server is behind a reverse proxy, you must whitelist the proxy IP\n| addresses from which CodeIgniter should trust the HTTP_X_FORWARDED_FOR\n| header in order to properly identify the visitor's IP address.\n| Comma-delimited, e.g. '10.0.1.200,10.0.1.201'\n|\n*/\n$config['proxy_ips'] = '';\n\n\n/* End of file config.php */\n/* Location: ./application/config/config.php */\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/config.php","digestWhenLastPersisted":"95fa8ca917c91e8dcbd313faeeb14908b0104348","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"b8097a5ed2dcf6d74123e4241dac2ca5","text":"<?php if (!defined('BASEPATH')) exit('No direct script access allowed');\n\n/*\n| -------------------------------------------------------------------------\n| Email\n| -------------------------------------------------------------------------\n| This file lets you define parameters for sending emails.\n| Please see the user guide for info:\n|\n|\thttp://codeigniter.com/user_guide/libraries/email.html\n|\n*/\n/*$config['mailtype'] = 'html';\n$config['charset'] = 'utf-8';\n$config['newline'] = \"\\r\\n\";\n$config['protocol'] = 'smtp';\n$config['smtp_host'] = 'smtp.mandrillapp.com';\n$config['smtp_port'] = 587;\n$config['smtp_user'] = 'rad@coderscrowd.com'; // your email\n$config['smtp_pass'] = '3UYGnfJktO06ZCeeOF5a6Q';  // your password\n$config['mailtype'] = 'html';\n$config['charset'] = 'iso-8859-1';\n*/\n\n$config['mailtype'] = 'html';\n$config['charset'] = 'utf-8';\n\n$config['protocol'] = 'smtp';\n$config['smtp_host'] = 'ssl://smtp.mailgun.org';\n$config['smtp_port'] = 465;\n$config['smtp_user'] = 'postmaster@sandboxc43f5196413b4938ae9346ba99cb801f.mailgun.org';\n$config['smtp_pass'] = 'c78b5263994a1fc68796e3b7012244f6';\n$config['smtp_timeout'] = '4';\n$config['crlf'] = '\\n';\n$config['newline'] = '\\r\\n';\n\n\n/* End of file email.php */\n/* Location: ./application/config/email.php */\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"77":{"range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"78":{"range":{"start":{"row":14,"column":0},"end":{"row":14,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"79":{"range":{"start":{"row":22,"column":0},"end":{"row":23,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"80":{"range":{"start":{"row":24,"column":0},"end":{"row":35,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"81":{"range":{"start":{"row":38,"column":0},"end":{"row":39,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"87":{"range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"88":{"range":{"start":{"row":14,"column":0},"end":{"row":14,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"89":{"range":{"start":{"row":22,"column":0},"end":{"row":23,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"90":{"range":{"start":{"row":24,"column":0},"end":{"row":35,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"91":{"range":{"start":{"row":38,"column":0},"end":{"row":39,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"4":{"range":{"start":{"row":0,"column":0},"end":{"row":39,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":32,"undoStack":[{"type":"group-start","snapshot":{"2":{"4":{"range":[[15,0],[15,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,28],[15,0]],"newRange":[[14,28],[14,28]],"oldText":"\n","newText":""}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[14,28],[14,28]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[12,0],[12,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[12,1]],"oldText":"","newText":"/"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[12,1],[12,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[12,1],[12,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[12,1],[12,1]],"newRange":[[12,1],[12,2]],"oldText":"","newText":"*"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[12,2],[12,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[22,0],[22,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[22,0],[22,0]],"newRange":[[22,0],[22,1]],"oldText":"","newText":"*"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[22,1],[22,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[22,1],[22,1]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[22,1],[22,1]],"newRange":[[22,1],[22,2]],"oldText":"","newText":"/"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[22,2],[22,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[22,2],[22,2]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[22,2],[22,2]],"newRange":[[22,2],[23,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[24,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[24,0]],"oldText":"","newText":""}},{"type":"change","content":{"oldRange":[[23,0],[23,0]],"newRange":[[23,0],[23,0]],"oldText":"","newText":""}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[24,0],[24,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[24,0],[24,0]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[34,28]],"oldText":"","newText":"  $config['mailtype'] = 'html';\n$config['charset'] = 'utf-8';\n\n$config['protocol'] = 'smtp';\n$config['smtp_host'] = 'ssl://smtp.mailgun.org';\n$config['smtp_port'] = 465;\n$config['smtp_user'] = '[your Mailgun SMTP username]';\n$config['smtp_pass'] = '[your Mailgun SMTP password]';\n$config['smtp_timeout'] = '4';\n$config['crlf'] = '\\n';\n$config['newline'] = '\\r\\n';"}},{"type":"change","content":{"oldRange":[[24,0],[24,2]],"newRange":[[24,0],[24,0]],"oldText":"  ","newText":""}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[34,28],[34,28]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[30,25],[30,52]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[30,25],[30,52]],"newRange":[[30,25],[30,25]],"oldText":"your Mailgun SMTP username]","newText":""}},{"type":"change","content":{"oldRange":[[30,24],[30,25]],"newRange":[[30,24],[30,24]],"oldText":"[","newText":""}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[30,24],[30,24]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[30,24],[30,24]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[30,24],[30,24]],"newRange":[[30,24],[30,25]],"oldText":"","newText":"r"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[30,25],[30,25]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[30,25],[30,25]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[30,25],[30,25]],"newRange":[[30,25],[30,26]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[30,26],[30,26]],"newRange":[[30,26],[30,27]],"oldText":"","newText":"d"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[30,27],[30,27]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[30,24],[30,27]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[30,24],[30,27]],"newRange":[[30,24],[30,86]],"oldText":"rad","newText":"postmaster@sandboxc43f5196413b4938ae9346ba99cb801f.mailgun.org"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[30,86],[30,86]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[31,25],[31,52]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[31,25],[31,52]],"newRange":[[31,25],[31,25]],"oldText":"your Mailgun SMTP password]","newText":""}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[31,25],[31,25]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[31,25],[31,25]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[31,24],[31,25]],"newRange":[[31,24],[31,24]],"oldText":"[","newText":""}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[31,24],[31,24]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[31,24],[31,24]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[31,24],[31,24]],"newRange":[[31,24],[31,56]],"oldText":"","newText":"c78b5263994a1fc68796e3b7012244f6"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[31,56],[31,56]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"4":{"range":[[31,56],[31,56]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[38,46],[38,46]],"newRange":[[38,46],[39,0]],"oldText":"","newText":"\n"}},{"type":"group-end","snapshot":{"2":{"4":{"range":[[31,56],[31,56]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/email.php","digestWhenLastPersisted":"40ed5f36df0e932465fc14322c258a987fa11e01","preferredLineEnding":null,"nextMarkerId":92,"deserializer":"TextBuffer","version":5},{"id":"bf6cce4719fccbef8f0516acbb73f8c4","text":"\n     <div class=\"row-fluid\">\n               <div class=\"span12\">\n                    <div class=\"widget\">\n                        <div class=\"widget-title\">\n                        <h4><i class=\"icon-reorder\"></i> Add your code - Describe your problem</h4>\n                        <span class=\"tools\">\n                        <a href=\"javascript:;\" class=\"icon-chevron-down\"></a>\n                        \n                        </span>\n                     </div>\n                        \n                    <div class=\"widget-body\">  \n        \n           <div class=\"alert alert-info\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n           <strong>Quick Tips</strong><br>\n           <strong>Code Title : </strong> Your Code will be probably solved and will serve as a reference in the knowledge base, think about the title as you would write a tutorial (avoid asking questions)<br>\n           <strong>Code Description :</strong> Try to explain as clear as possible your problem. If you have an error message try to write the most important part, avoid copying pasting 5 long error page messages :) . Use an image to illustrate if possible<br>\n           <strong>Source Code :</strong> Your code will probably be rated by the community, think about including some comments, and make it easy for people to work on top of it.<br>\n           <strong>Good Luck !</strong>\n           </div>\n\t   \n\t        <button id='closeDFM' type='button' class='btn btn-danger btn-mini' style=\"display: none; position: fixed; top: 20px; right: 10px; z-index: 1000000;\"><i class='icon-power-off'></i> Turn Off DFM</button> \n\n        <?php\n\n\n            echo form_open('', array('id' => 'createform'));\n\n            echo '<h4>Title</h4>';\n            $data = array('name' => 'codename', 'id' => 'codename', 'class' => 'input span12'); echo form_input($data);\n\n            echo '<h4>Description</h4>';\n            $data = array('name' => 'codedescription', 'id' => 'codedescription', 'class' => 'span12 wysihtml5'); echo form_textarea($data);\n\n            echo \"<h4>What's your mood for today ?</h4>\";\n            $attr = 'id=\"select\"';\n\n            echo form_dropdown('idLanguage', $idLanguage, ' ', 'id=\"select\"');\n\n            echo '</br><h4>Category</h4>';\n            echo form_dropdown('idCategory', $idCategory, ' ', 'id=\"select2\" ');\n\n            echo '<h4>Source Code</h4>';\n\n        echo \"<div style='float:right; padding-bottom:2px;'><button id='fullscreen' type='button'  class='btn btn-inverse btn-mini'>[ <i class='icon-desktop'></i> DFM ]  Distraction Free Mode</button></div>\";\n\n        //echo \"<div class='alert alert-info'><strong>DISTRACTION FREE MODE : </strong>Press <strong>F9</strong> when cursor is in the editor to toggle full screen editing. <strong>Esc</strong> can also be used to exit full screen editing</div>\";\n\n            $data = array('name' => 'codesource', 'id' => 'codesource', 'rows' => 5, 'cols' => 40); echo form_textarea($data);\n\n            //$timeadded = date('Y-m-d H:i:s');\n            //echo form_hidden('timeadded',$timeadded);\n            echo form_hidden('idUser', $idUser);\n\n            echo '<h4>Status</h4>';\n            echo form_dropdown('idState', $idState);\n            echo '<br>';\n            echo '<h4>Privacy</h4>';\n            $options_privacy = array(\n                  '1' => 'Public Access (Everyone will see the Code)',\n                  '0' => 'Limited Access (Only those with a link you share will see the Code)',\n                );\n\n            echo form_dropdown('isPublic', $options_privacy, '1');\n            echo '<br>';\n            echo form_submit('submit', 'Add Code', 'class=\"btn btn-success\"'); echo form_close();\n\n        ?>\n\t  \n       <script>\n\t   $(function(){\n\t  function isFullScreen(cm) {\n\t     return /\\bCodeMirror-fullscreen\\b/.test(cm.getWrapperElement().className);\n\t   }\n\t   function winHeight() {\n\t     return window.innerHeight || (document.documentElement || document.body).clientHeight;\n\t   }\n\t   function setFullScreen(cm, full) {\n\t     var wrap = cm.getWrapperElement();\n\t     if (full) {\n\t       wrap.className += \" CodeMirror-fullscreen\";\n\t       wrap.style.height = winHeight() + \"px\";\n\t       document.documentElement.style.overflow = \"hidden\";\n\t     } else {\n\t       wrap.className = wrap.className.replace(\" CodeMirror-fullscreen\", \"\");\n\t       wrap.style.height = \"\";\n\t       document.documentElement.style.overflow = \"\";\n\t     }\n\t     cm.refresh();\n\t   }\n\t   CodeMirror.on(window, \"resize\", function() {\n\t     var showing = document.body.getElementsByClassName(\"CodeMirror-fullscreen\")[0];\n\t     if (!showing) return;\n\t     showing.CodeMirror.getWrapperElement().style.height = winHeight() + \"px\";\n\t   });\n\t \n         //CodeMirror.modeURL = \"<?php echo base_url(); ?>assets/js/%N/%N.js\";\n         var editor = CodeMirror.fromTextArea(document.getElementById(\"codesource\"), {\n        styleActiveLine: true,\n        lineNumbers: true,\n        lineWrapping: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n\n\t\textraKeys: {\n                        //key binding for toggle full screen on/off\n\t\t    \"F9\": function(cm) {\n\t\t    setFullScreen(cm, !isFullScreen(cm));\n\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"1500px\"});\n\t\t    },\n\t\t    \"Esc\": function(cm) {\n\t\t      if (isFullScreen(cm)) setFullScreen(cm, false);\n\t\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"600px\"});\n                        }\n                    },\n\t  mode :\"python\",\n\n        theme: \"ambiance\"\n            });\n    \n   \n\t  $(\"#fullscreen\").click( function()\n\t    {\n \n\t      setFullScreen(editor, !isFullScreen(editor));\n\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"1500px\"});\n\n\t     $(window).scrollTop(0);\n\t\t     \n\t      $(\"#closeDFM\").css({\"display\": \"block\"});\n\t      $(\"#closeDFM\").click( function()\n\t\t     {\n\t\t\t if (isFullScreen(editor)) setFullScreen(editor, false);\n\t\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"600px\"});\n\t\t\t \n\t\t\t $(\"#closeDFM\").css({\"display\": \"none\"});\n \n\t\t     })\n\t      \n\t    }\n\t   );\n\t  \n\t  $('select').on('change', function() {\n\t    var conceptName = $('#select').find(\":selected\").text().toLowerCase();\n\t    //alert(conceptName);\n  \n\t  if(conceptName ==\"java\"){\n\t\t  conceptName = \"text/x-java\";    \n\t    }else if(conceptName ==\"c\"){\n\t\t      conceptName = \"text/x-csrc\";\n\t    }else if(conceptName ==\"c++\"){\n\t\t      conceptName = \"text/x-c++src\";\n\t    }else if(conceptName ==\"c#\"){\n\t\t  conceptName = \"text/x-csharp\";    \n\t    }else if(conceptName ==\"html\"){\n\t\t      conceptName = \"text/html\";\n\t    }else if(conceptName ==\"php\"){\n\t\t      conceptName = \"text/x-php\";\n\t    }\n\t    \n\t    editor.setOption(\"mode\",conceptName);\n\t    });\n\t  \n\t  \n\t  });        \n    </script>\n       \n       <script>\n            $(function(){\n                $(\"#createform\").submit(function(){\n                dataString = $(\"#createform\").serialize();\n \n                $.ajax({\n                      type: \"POST\",\n                      url: \"<?php echo base_url(); ?>codes/create\",\n                      data: dataString,\n                     success: function(data){\n                     $.gritter.add({\n                    // (string | mandatory) the heading of the notification\n                    title: '<div align=\"center\"><h2>Booya !</h2></div>',\n                    time: 2000,\n                    // (string | mandatory) the text inside the notification\n                    text: '<div align=\"center\">Your code is in good hands now ! <h4> +4 points ! </h4></div>',\n                    after_close: function(){\n                        window.location =\"<?php echo base_url(); ?>dashboard\"\n                        }\n                    });\n                     \n                     \n                     \n                     \n                     }\n \n                });\n \n            return false;  //stop the actual form post !important!\n \n            });\n            });\n        </script>\n          </div>\n        </div>\n        </div>\n     </div>\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":26,"column":0},"end":{"row":36,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"3":{"range":{"start":{"row":37,"column":0},"end":{"row":37,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"4":{"range":{"start":{"row":39,"column":0},"end":{"row":52,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"5":{"range":{"start":{"row":54,"column":0},"end":{"row":57,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"6":{"range":{"start":{"row":58,"column":0},"end":{"row":60,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"7":{"range":{"start":{"row":61,"column":0},"end":{"row":63,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"8":{"range":{"start":{"row":64,"column":0},"end":{"row":65,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"9":{"range":{"start":{"row":66,"column":0},"end":{"row":69,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"18":{"range":{"start":{"row":26,"column":0},"end":{"row":36,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"19":{"range":{"start":{"row":37,"column":0},"end":{"row":37,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"20":{"range":{"start":{"row":39,"column":0},"end":{"row":52,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"21":{"range":{"start":{"row":54,"column":0},"end":{"row":57,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"22":{"range":{"start":{"row":58,"column":0},"end":{"row":60,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"23":{"range":{"start":{"row":61,"column":0},"end":{"row":63,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"24":{"range":{"start":{"row":64,"column":0},"end":{"row":65,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"},"25":{"range":{"start":{"row":66,"column":0},"end":{"row":69,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2},"5":{"id":"5","maintainHistory":false,"markersById":{},"version":2},"7":{"id":"7","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":8,"history":{"version":3,"nextCheckpointId":2,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[0,0],[206,0]],"newRange":[[0,0],[206,0]],"oldText":"\n     <div class=\"row-fluid\">\n               <div class=\"span12\">\n                    <div class=\"widget\">\n                        <div class=\"widget-title\">\n                        <h4><i class=\"icon-reorder\"></i> Add your code - Describe your problem</h4>\n                        <span class=\"tools\">\n                        <a href=\"javascript:;\" class=\"icon-chevron-down\"></a>\n                        \n                        </span>\n                     </div>\n                        \n                    <div class=\"widget-body\">  \n        \n           <div class=\"alert alert-info\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n           <strong>Quick Tips</strong><br>\n           <strong>Code Title : </strong> Your Code will be probably solved and will serve as a reference in the knowledge base, think about the title as you would write a tutorial (avoid asking questions)<br>\n           <strong>Code Description :</strong> Try to explain as clear as possible your problem. If you have an error message try to write the most important part, avoid copying pasting 5 long error page messages :) . Use an image to illustrate if possible<br>\n           <strong>Source Code :</strong> Your code will probably be rated by the community, think about including some comments, and make it easy for people to work on top of it.<br>\n           <strong>Good Luck !</strong>\n           </div>\n\t   \n\t        <button id='closeDFM' type='button' class='btn btn-danger btn-mini' style=\"display: none; position: fixed; top: 20px; right: 10px; z-index: 1000000;\"><i class='icon-power-off'></i> Turn Off DFM</button> \n\n        <?php\n        \n        \n            echo form_open('',array('id'=>'createform'));\n            \n            echo \"<h4>Title</h4>\";\n            $data = array('name'=>'codename','id'=>'codename','class'=>'input span12'); echo form_input($data) ;\n            \n            echo \"<h4>Description</h4>\";\n            $data = array('name'=>'codedescription','id'=>'codedescription','class'=>'span12 wysihtml5'); echo form_textarea($data);\n            \n            echo \"<h4>What's your mood for today ?</h4>\";\n            $attr = 'id=\"select\"';\n            \n            echo form_dropdown('idLanguage', $idLanguage,' ','id=\"select\"');\n            \n            echo \"</br><h4>Category</h4>\";\n            echo form_dropdown('idCategory', $idCategory,' ','id=\"select2\" ');\n            \n            echo \"<h4>Source Code</h4>\";\n\t    \n\t\techo \"<div style='float:right; padding-bottom:2px;'><button id='fullscreen' type='button'  class='btn btn-inverse btn-mini'>[ <i class='icon-desktop'></i> DFM ]  Distraction Free Mode</button></div>\";\n\t    \n\t    //echo \"<div class='alert alert-info'><strong>DISTRACTION FREE MODE : </strong>Press <strong>F9</strong> when cursor is in the editor to toggle full screen editing. <strong>Esc</strong> can also be used to exit full screen editing</div>\";\n\n            $data = array('name'=>'codesource','id'=>'codesource','rows'=>5, 'cols'=>40); echo form_textarea($data);\n            \n            //$timeadded = date('Y-m-d H:i:s');\n            //echo form_hidden('timeadded',$timeadded);\n            echo form_hidden('idUser',$idUser);\n            \n            echo \"<h4>Status</h4>\";\n            echo form_dropdown('idState', $idState);\n            echo \"<br>\";\n\t\t\techo \"<h4>Privacy</h4>\";\n            $options_privacy = array(\n                  '1'  => 'Public Access (Everyone will see the Code)',\n                  '0'    => 'Limited Access (Only those with a link you share will see the Code)',\n                );\n            \n            echo form_dropdown('isPublic', $options_privacy, '1');\n            echo \"<br>\";\n            echo form_submit('submit','Add Code','class=\"btn btn-success\"'); echo form_close();\n        \n        ?>\n\t  \n       <script>\n\t   $(function(){\n\t  function isFullScreen(cm) {\n\t     return /\\bCodeMirror-fullscreen\\b/.test(cm.getWrapperElement().className);\n\t   }\n\t   function winHeight() {\n\t     return window.innerHeight || (document.documentElement || document.body).clientHeight;\n\t   }\n\t   function setFullScreen(cm, full) {\n\t     var wrap = cm.getWrapperElement();\n\t     if (full) {\n\t       wrap.className += \" CodeMirror-fullscreen\";\n\t       wrap.style.height = winHeight() + \"px\";\n\t       document.documentElement.style.overflow = \"hidden\";\n\t     } else {\n\t       wrap.className = wrap.className.replace(\" CodeMirror-fullscreen\", \"\");\n\t       wrap.style.height = \"\";\n\t       document.documentElement.style.overflow = \"\";\n\t     }\n\t     cm.refresh();\n\t   }\n\t   CodeMirror.on(window, \"resize\", function() {\n\t     var showing = document.body.getElementsByClassName(\"CodeMirror-fullscreen\")[0];\n\t     if (!showing) return;\n\t     showing.CodeMirror.getWrapperElement().style.height = winHeight() + \"px\";\n\t   });\n\t \n         //CodeMirror.modeURL = \"<?php echo base_url(); ?>assets/js/%N/%N.js\";\n         var editor = CodeMirror.fromTextArea(document.getElementById(\"codesource\"), {\n        styleActiveLine: true,\n        lineNumbers: true,\n        lineWrapping: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n\n\t\textraKeys: {\n                        //key binding for toggle full screen on/off\n\t\t    \"F9\": function(cm) {\n\t\t    setFullScreen(cm, !isFullScreen(cm));\n\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"1500px\"});\n\t\t    },\n\t\t    \"Esc\": function(cm) {\n\t\t      if (isFullScreen(cm)) setFullScreen(cm, false);\n\t\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"600px\"});\n                        }\n                    },\n\t  mode :\"python\",\n\n        theme: \"ambiance\"\n            });\n    \n   \n\t  $(\"#fullscreen\").click( function()\n\t    {\n \n\t      setFullScreen(editor, !isFullScreen(editor));\n\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"1500px\"});\n\n\t     $(window).scrollTop(0);\n\t\t     \n\t      $(\"#closeDFM\").css({\"display\": \"block\"});\n\t      $(\"#closeDFM\").click( function()\n\t\t     {\n\t\t\t if (isFullScreen(editor)) setFullScreen(editor, false);\n\t\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"600px\"});\n\t\t\t \n\t\t\t $(\"#closeDFM\").css({\"display\": \"none\"});\n \n\t\t     })\n\t      \n\t    }\n\t   );\n\t  \n\t  $('select').on('change', function() {\n\t    var conceptName = $('#select').find(\":selected\").text().toLowerCase();\n\t    //alert(conceptName);\n  \n\t  if(conceptName ==\"java\"){\n\t\t  conceptName = \"text/x-java\";    \n\t    }else if(conceptName ==\"c\"){\n\t\t      conceptName = \"text/x-csrc\";\n\t    }else if(conceptName ==\"c++\"){\n\t\t      conceptName = \"text/x-c++src\";\n\t    }else if(conceptName ==\"c#\"){\n\t\t  conceptName = \"text/x-csharp\";    \n\t    }else if(conceptName ==\"html\"){\n\t\t      conceptName = \"text/html\";\n\t    }else if(conceptName ==\"php\"){\n\t\t      conceptName = \"text/x-php\";\n\t    }\n\t    \n\t    editor.setOption(\"mode\",conceptName);\n\t    });\n\t  \n\t  \n\t  });        \n    </script>\n       \n       <script>\n            $(function(){\n                $(\"#createform\").submit(function(){\n                dataString = $(\"#createform\").serialize();\n \n                $.ajax({\n                      type: \"POST\",\n                      url: \"<?php echo base_url(); ?>codes/create\",\n                      data: dataString,\n                     success: function(data){\n                     $.gritter.add({\n                    // (string | mandatory) the heading of the notification\n                    title: '<div align=\"center\"><h2>Booya !</h2></div>',\n                    time: 2000,\n                    // (string | mandatory) the text inside the notification\n                    text: '<div align=\"center\">Your code is in good hands now ! <h4> +4 points ! </h4></div>',\n                    after_close: function(){\n                        window.location =\"<?php echo base_url(); ?>dashboard\"\n                        }\n                    });\n                     \n                     \n                     \n                     \n                     }\n \n                });\n \n            return false;  //stop the actual form post !important!\n \n            });\n            });\n        </script>\n          </div>\n        </div>\n        </div>\n     </div>\n","newText":"\n     <div class=\"row-fluid\">\n               <div class=\"span12\">\n                    <div class=\"widget\">\n                        <div class=\"widget-title\">\n                        <h4><i class=\"icon-reorder\"></i> Add your code - Describe your problem</h4>\n                        <span class=\"tools\">\n                        <a href=\"javascript:;\" class=\"icon-chevron-down\"></a>\n                        \n                        </span>\n                     </div>\n                        \n                    <div class=\"widget-body\">  \n        \n           <div class=\"alert alert-info\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\n           <strong>Quick Tips</strong><br>\n           <strong>Code Title : </strong> Your Code will be probably solved and will serve as a reference in the knowledge base, think about the title as you would write a tutorial (avoid asking questions)<br>\n           <strong>Code Description :</strong> Try to explain as clear as possible your problem. If you have an error message try to write the most important part, avoid copying pasting 5 long error page messages :) . Use an image to illustrate if possible<br>\n           <strong>Source Code :</strong> Your code will probably be rated by the community, think about including some comments, and make it easy for people to work on top of it.<br>\n           <strong>Good Luck !</strong>\n           </div>\n\t   \n\t        <button id='closeDFM' type='button' class='btn btn-danger btn-mini' style=\"display: none; position: fixed; top: 20px; right: 10px; z-index: 1000000;\"><i class='icon-power-off'></i> Turn Off DFM</button> \n\n        <?php\n\n\n            echo form_open('', array('id' => 'createform'));\n\n            echo '<h4>Title</h4>';\n            $data = array('name' => 'codename', 'id' => 'codename', 'class' => 'input span12'); echo form_input($data);\n\n            echo '<h4>Description</h4>';\n            $data = array('name' => 'codedescription', 'id' => 'codedescription', 'class' => 'span12 wysihtml5'); echo form_textarea($data);\n\n            echo \"<h4>What's your mood for today ?</h4>\";\n            $attr = 'id=\"select\"';\n\n            echo form_dropdown('idLanguage', $idLanguage, ' ', 'id=\"select\"');\n\n            echo '</br><h4>Category</h4>';\n            echo form_dropdown('idCategory', $idCategory, ' ', 'id=\"select2\" ');\n\n            echo '<h4>Source Code</h4>';\n\n        echo \"<div style='float:right; padding-bottom:2px;'><button id='fullscreen' type='button'  class='btn btn-inverse btn-mini'>[ <i class='icon-desktop'></i> DFM ]  Distraction Free Mode</button></div>\";\n\n        //echo \"<div class='alert alert-info'><strong>DISTRACTION FREE MODE : </strong>Press <strong>F9</strong> when cursor is in the editor to toggle full screen editing. <strong>Esc</strong> can also be used to exit full screen editing</div>\";\n\n            $data = array('name' => 'codesource', 'id' => 'codesource', 'rows' => 5, 'cols' => 40); echo form_textarea($data);\n\n            //$timeadded = date('Y-m-d H:i:s');\n            //echo form_hidden('timeadded',$timeadded);\n            echo form_hidden('idUser', $idUser);\n\n            echo '<h4>Status</h4>';\n            echo form_dropdown('idState', $idState);\n            echo '<br>';\n            echo '<h4>Privacy</h4>';\n            $options_privacy = array(\n                  '1' => 'Public Access (Everyone will see the Code)',\n                  '0' => 'Limited Access (Only those with a link you share will see the Code)',\n                );\n\n            echo form_dropdown('isPublic', $options_privacy, '1');\n            echo '<br>';\n            echo form_submit('submit', 'Add Code', 'class=\"btn btn-success\"'); echo form_close();\n\n        ?>\n\t  \n       <script>\n\t   $(function(){\n\t  function isFullScreen(cm) {\n\t     return /\\bCodeMirror-fullscreen\\b/.test(cm.getWrapperElement().className);\n\t   }\n\t   function winHeight() {\n\t     return window.innerHeight || (document.documentElement || document.body).clientHeight;\n\t   }\n\t   function setFullScreen(cm, full) {\n\t     var wrap = cm.getWrapperElement();\n\t     if (full) {\n\t       wrap.className += \" CodeMirror-fullscreen\";\n\t       wrap.style.height = winHeight() + \"px\";\n\t       document.documentElement.style.overflow = \"hidden\";\n\t     } else {\n\t       wrap.className = wrap.className.replace(\" CodeMirror-fullscreen\", \"\");\n\t       wrap.style.height = \"\";\n\t       document.documentElement.style.overflow = \"\";\n\t     }\n\t     cm.refresh();\n\t   }\n\t   CodeMirror.on(window, \"resize\", function() {\n\t     var showing = document.body.getElementsByClassName(\"CodeMirror-fullscreen\")[0];\n\t     if (!showing) return;\n\t     showing.CodeMirror.getWrapperElement().style.height = winHeight() + \"px\";\n\t   });\n\t \n         //CodeMirror.modeURL = \"<?php echo base_url(); ?>assets/js/%N/%N.js\";\n         var editor = CodeMirror.fromTextArea(document.getElementById(\"codesource\"), {\n        styleActiveLine: true,\n        lineNumbers: true,\n        lineWrapping: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n\n\t\textraKeys: {\n                        //key binding for toggle full screen on/off\n\t\t    \"F9\": function(cm) {\n\t\t    setFullScreen(cm, !isFullScreen(cm));\n\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"1500px\"});\n\t\t    },\n\t\t    \"Esc\": function(cm) {\n\t\t      if (isFullScreen(cm)) setFullScreen(cm, false);\n\t\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"600px\"});\n                        }\n                    },\n\t  mode :\"python\",\n\n        theme: \"ambiance\"\n            });\n    \n   \n\t  $(\"#fullscreen\").click( function()\n\t    {\n \n\t      setFullScreen(editor, !isFullScreen(editor));\n\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"1500px\"});\n\n\t     $(window).scrollTop(0);\n\t\t     \n\t      $(\"#closeDFM\").css({\"display\": \"block\"});\n\t      $(\"#closeDFM\").click( function()\n\t\t     {\n\t\t\t if (isFullScreen(editor)) setFullScreen(editor, false);\n\t\t\t\t$(\".CodeMirror-scroll\").css({\"max-height\":\"600px\"});\n\t\t\t \n\t\t\t $(\"#closeDFM\").css({\"display\": \"none\"});\n \n\t\t     })\n\t      \n\t    }\n\t   );\n\t  \n\t  $('select').on('change', function() {\n\t    var conceptName = $('#select').find(\":selected\").text().toLowerCase();\n\t    //alert(conceptName);\n  \n\t  if(conceptName ==\"java\"){\n\t\t  conceptName = \"text/x-java\";    \n\t    }else if(conceptName ==\"c\"){\n\t\t      conceptName = \"text/x-csrc\";\n\t    }else if(conceptName ==\"c++\"){\n\t\t      conceptName = \"text/x-c++src\";\n\t    }else if(conceptName ==\"c#\"){\n\t\t  conceptName = \"text/x-csharp\";    \n\t    }else if(conceptName ==\"html\"){\n\t\t      conceptName = \"text/html\";\n\t    }else if(conceptName ==\"php\"){\n\t\t      conceptName = \"text/x-php\";\n\t    }\n\t    \n\t    editor.setOption(\"mode\",conceptName);\n\t    });\n\t  \n\t  \n\t  });        \n    </script>\n       \n       <script>\n            $(function(){\n                $(\"#createform\").submit(function(){\n                dataString = $(\"#createform\").serialize();\n \n                $.ajax({\n                      type: \"POST\",\n                      url: \"<?php echo base_url(); ?>codes/create\",\n                      data: dataString,\n                     success: function(data){\n                     $.gritter.add({\n                    // (string | mandatory) the heading of the notification\n                    title: '<div align=\"center\"><h2>Booya !</h2></div>',\n                    time: 2000,\n                    // (string | mandatory) the text inside the notification\n                    text: '<div align=\"center\">Your code is in good hands now ! <h4> +4 points ! </h4></div>',\n                    after_close: function(){\n                        window.location =\"<?php echo base_url(); ?>dashboard\"\n                        }\n                    });\n                     \n                     \n                     \n                     \n                     }\n \n                });\n \n            return false;  //stop the actual form post !important!\n \n            });\n            });\n        </script>\n          </div>\n        </div>\n        </div>\n     </div>\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[0,0],[0,0]],"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/add-code.php","digestWhenLastPersisted":"ac1ec29431c5cf1b548c4d88cd5114f6b4036520","preferredLineEnding":null,"nextMarkerId":26,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/controllers/codes.php","bufferId":"fb438828aad3d0792640662a94769a8b","tabLength":4,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":16,"softTabs":false,"firstVisibleScreenRow":48,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":17,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/libraries/Tank_auth.php","bufferId":"87ed9c7fab40380da307269de69bd8ac","tabLength":null,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":20,"softTabs":true,"firstVisibleScreenRow":21,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/models/mcodes.php","bufferId":"5b7a3413a6b3d427204003b11f44d26d","tabLength":4,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":24,"softTabs":true,"firstVisibleScreenRow":70,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":25,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/config.php","bufferId":"fdea8ecf5f62a2d7cf2f3048d0cb0c71","tabLength":null,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":28,"softTabs":true,"firstVisibleScreenRow":5,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":29,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/email.php","bufferId":"b8097a5ed2dcf6d74123e4241dac2ca5","tabLength":null,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":54,"softTabs":true,"firstVisibleScreenRow":30,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":55,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/add-code.php","bufferId":"bf6cce4719fccbef8f0516acbb73f8c4","tabLength":5,"largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"SettingsView","version":2,"activePanelName":"Settings","uri":"atom://config/updates"}],"activeItemURI":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/email.php","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-php","language-html","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"linter":{"scope":"File"},"fuzzy-finder":{"/Users/Rad/Documents/Dev/CodersCrowd/application/controllers/codes.php":1461815663825,"/Users/Rad/Documents/Dev/CodersCrowd/application/libraries/Tank_auth.php":1456410237458,"/Users/Rad/Documents/Dev/CodersCrowd/application/models/mcodes.php":1456410308493,"/Users/Rad/Documents/Dev/CodersCrowd/application/config/config.php":1456410387004,"/Users/Rad/Documents/Dev/CodersCrowd/application/config/email.php":1461815696304,"/Users/Rad/Documents/Dev/CodersCrowd/application/views/add-code.php":1456411280720},"metrics":{"sessionLength":647704},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/Rad/Documents/Dev/CodersCrowd":{"isExpanded":true,"entries":{"application":{"isExpanded":true,"entries":{"cache":{"isExpanded":false,"entries":{}},"cachedb":{"isExpanded":false,"entries":{}},"config":{"isExpanded":true,"entries":{}},"controllers":{"isExpanded":false,"entries":{}},"core":{"isExpanded":false,"entries":{}},"errors":{"isExpanded":false,"entries":{}},"helpers":{"isExpanded":false,"entries":{}},"hooks":{"isExpanded":false,"entries":{}},"language":{"isExpanded":false,"entries":{}},"libraries":{"isExpanded":false,"entries":{}},"logs":{"isExpanded":false,"entries":{}},"models":{"isExpanded":false,"entries":{}},"third_party":{"isExpanded":false,"entries":{}},"views":{"isExpanded":false,"entries":{}}}},"assets":{"isExpanded":false,"entries":{}},"captcha":{"isExpanded":false,"entries":{}},"raw_code":{"isExpanded":false,"entries":{}},"system":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/email.php","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":289},"pigments":{"project":{"deserializer":"ColorProject","timestamp":"2016-04-28T04:05:11.546Z","version":"1.0.1","markersVersion":"1.0.6","globalSourceNames":["**/*.styl","**/*.stylus","**/*.less","**/*.sass","**/*.scss"],"globalIgnoredNames":["vendor/*","node_modules/*","spec/*","test/*"],"buffers":{"4":{"id":4,"path":"/Users/Rad/Documents/Dev/CodersCrowd/application/controllers/codes.php","colorMarkers":[]},"16":{"id":16,"path":"/Users/Rad/Documents/Dev/CodersCrowd/application/libraries/Tank_auth.php","colorMarkers":[]},"20":{"id":20,"path":"/Users/Rad/Documents/Dev/CodersCrowd/application/models/mcodes.php","colorMarkers":[]},"24":{"id":24,"path":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/config.php","colorMarkers":[]},"28":{"id":28,"path":"/Users/Rad/Documents/Dev/CodersCrowd/application/config/email.php","colorMarkers":[]},"54":{"id":54,"path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/add-code.php","colorMarkers":[]}},"paths":["/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/theme.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/alerts.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/badges.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/bootstrap.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/breadcrumbs.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/button-groups.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/buttons.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/carousel.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/close.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/code.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/component-animations.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/dropdowns.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/forms.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/glyphicons.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/grid.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/input-groups.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/jumbotron.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/labels.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/list-group.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/media.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/mixins.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/modals.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/navbar.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/navs.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/normalize.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/pager.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/pagination.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/panels.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/popovers.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/print.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/progress-bars.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/responsive-utilities.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/scaffolding.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/tables.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/thumbnails.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/tooltip.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/type.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/utilities.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/wells.less"],"variables":{"deserializer":"VariablesCollection","content":[{"name":"@opacity-ie","value":"(@opacity * 100)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/mixins.less","range":[6936,6965],"line":260},{"name":"@item","value":"~\".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}\"","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/mixins.less","range":[20729,20809],"line":716},{"name":"@item","value":"~\".col-@{class}-@{index}\"","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/mixins.less","range":[21429,21461],"line":738},{"name":"@shadow","value":"inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-color, 20%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/mixins.less","range":[23073,23151],"line":803},{"name":"@color-rgba","value":"rgba(red(@color), green(@color), blue(@color), .6)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/mixins.less","range":[24029,24092],"line":829,"isColor":true,"color":[0,0,0,1],"variables":[]},{"name":"@shadow","value":"inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.1)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/navbar.less","range":[6444,6517],"line":282},{"name":"@theme-primary","value":"#2c2c2c","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[191,216],"line":12,"isColor":true,"color":[44,44,44,1],"variables":[]},{"name":"@theme-secondary","value":"#3FB1E7","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[218,244],"line":13,"isColor":true,"color":[63,177,231,1],"variables":[]},{"name":"@theme-cta","value":"#88b7b3","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[246,269],"line":14,"isColor":true,"color":[136,183,179,1],"variables":[]},{"name":"@gray-darker","value":"lighten(#000, 13.5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[312,357],"line":20,"isColor":true,"color":[34.425000000000004,34.425000000000004,34.425000000000004,1],"variables":[]},{"name":"@gray-dark","value":"lighten(#000, 20%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[367,410],"line":21,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@gray","value":"lighten(#000, 33.5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[422,467],"line":22,"isColor":true,"color":[85.42500000000001,85.42500000000001,85.42500000000001,1],"variables":[]},{"name":"@gray-light","value":"lighten(#000, 60%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[477,520],"line":23,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@gray-lighter","value":"lighten(#000, 93.5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[532,577],"line":24,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@brand-primary","value":"@theme-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[634,672],"line":29,"isColor":true,"color":[44,44,44,1],"variables":["@theme-primary"]},{"name":"@brand-success","value":"#88B54E","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[674,705],"line":30,"isColor":true,"color":[136,181,78,1],"variables":[]},{"name":"@brand-warning","value":"#f0ad4e","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[707,738],"line":31,"isColor":true,"color":[240,173,78,1],"variables":[]},{"name":"@brand-danger","value":"#E96B56","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[740,771],"line":32,"isColor":true,"color":[233,107,86,1],"variables":[]},{"name":"@brand-info","value":"#3EA5BE","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[773,804],"line":33,"isColor":true,"color":[62,165,190,1],"variables":[]},{"name":"@blue","value":"#4AA1DB","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[854,885],"line":38,"isColor":true,"color":[74,161,219,1],"variables":[]},{"name":"@blueDark","value":"#0064cd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[887,918],"line":39,"isColor":true,"color":[0,100,205,1],"variables":[]},{"name":"@green","value":"#46a546","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[920,951],"line":40,"isColor":true,"color":[70,165,70,1],"variables":[]},{"name":"@turqoise","value":"#88B7B3","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[953,978],"line":41,"isColor":true,"color":[136,183,179,1],"variables":[]},{"name":"@red","value":"#9d261d","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[980,1011],"line":42,"isColor":true,"color":[157,38,29,1],"variables":[]},{"name":"@yellow","value":"#ffc40d","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1013,1044],"line":43,"isColor":true,"color":[255,196,13,1],"variables":[]},{"name":"@orange","value":"#FFBA43","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1046,1077],"line":44,"isColor":true,"color":[255,186,67,1],"variables":[]},{"name":"@pink","value":"#E3695C","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1079,1110],"line":45,"isColor":true,"color":[227,105,92,1],"variables":[]},{"name":"@purple","value":"#856CBD","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1112,1143],"line":46,"isColor":true,"color":[133,108,189,1],"variables":[]},{"name":"@behance","value":"#053eff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1200,1224],"line":51,"isColor":true,"color":[5,62,255,1],"variables":[]},{"name":"@dribbble","value":"#ea4c89","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1226,1250],"line":52,"isColor":true,"color":[234,76,137,1],"variables":[]},{"name":"@facebook","value":"#3b5998","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1252,1276],"line":53,"isColor":true,"color":[59,89,152,1],"variables":[]},{"name":"@foursquare","value":"#25a0ca","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1278,1303],"line":54,"isColor":true,"color":[37,160,202,1],"variables":[]},{"name":"@google","value":"#db4a39","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1305,1328],"line":55,"isColor":true,"color":[219,74,57,1],"variables":[]},{"name":"@instagram","value":"#634d40","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1330,1355],"line":56,"isColor":true,"color":[99,77,64,1],"variables":[]},{"name":"@linkedin","value":"#0e76a8","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1357,1381],"line":57,"isColor":true,"color":[14,118,168,1],"variables":[]},{"name":"@pinterest","value":"#c8232c","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1383,1408],"line":58,"isColor":true,"color":[200,35,44,1],"variables":[]},{"name":"@skype","value":"#00aff0","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1410,1433],"line":59,"isColor":true,"color":[0,175,240,1],"variables":[]},{"name":"@tumblr","value":"#34526f","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1435,1458],"line":60,"isColor":true,"color":[52,82,111,1],"variables":[]},{"name":"@twitter","value":"#00acee","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1460,1484],"line":61,"isColor":true,"color":[0,172,238,1],"variables":[]},{"name":"@vimeo","value":"#86c9ef","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1486,1509],"line":62,"isColor":true,"color":[134,201,239,1],"variables":[]},{"name":"@youtube","value":"#c4302b","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1511,1535],"line":63,"isColor":true,"color":[196,48,43,1],"variables":[]},{"name":"@body-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1584,1612],"line":69,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@text-color","value":"@gray-dark","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1614,1648],"line":70,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@link-color","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1690,1728],"line":75},{"name":"@link-hover-color","value":"darken(@link-color, 15%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1730,1778],"line":76,"isColor":true,"color":[0,0,0,1],"variables":["@link-color"]},{"name":"@font-family-sans-serif","value":"\"proxima-nova\", \"Helvetica Neue\", Helvetica, Arial, sans-serif","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1825,1913],"line":81},{"name":"@font-family-serif","value":"Georgia, \"Times New Roman\", Times, serif","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1915,1981],"line":82},{"name":"@font-family-monospace","value":"Menlo, Monaco, Consolas, \"Courier New\", monospace","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[1983,2058],"line":83},{"name":"@font-family-base","value":"@font-family-sans-serif","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2060,2109],"line":84},{"name":"@font-size-base","value":"14px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2112,2142],"line":86},{"name":"@font-size-large","value":"ceil(@font-size-base * 1.25)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2144,2198],"line":87},{"name":"@font-size-small","value":"ceil(@font-size-base * 0.85)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2209,2263],"line":88},{"name":"@font-size-h1","value":"floor(@font-size-base * 2.6)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2275,2329],"line":90},{"name":"@font-size-h2","value":"floor(@font-size-base * 2.15)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2340,2395],"line":91},{"name":"@font-size-h3","value":"ceil(@font-size-base * 1.7)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2406,2459],"line":92},{"name":"@font-size-h4","value":"ceil(@font-size-base * 1.25)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2470,2524],"line":93},{"name":"@font-size-h5","value":"@font-size-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2535,2576],"line":94},{"name":"@font-size-h6","value":"ceil(@font-size-base * 0.85)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2578,2632],"line":95},{"name":"@line-height-base","value":"1.428571429","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2644,2681],"line":97},{"name":"@line-height-computed","value":"floor(@font-size-base * @line-height-base)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2692,2760],"line":98},{"name":"@headings-font-family","value":"@font-family-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2772,2815],"line":100},{"name":"@headings-font-weight","value":"500","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2817,2846],"line":101},{"name":"@headings-line-height","value":"1.1","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2848,2877],"line":102},{"name":"@headings-color","value":"inherit","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2879,2912],"line":103},{"name":"@icon-font-path","value":"\"../fonts/\"","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[2961,2998],"line":109},{"name":"@icon-font-name","value":"\"glyphicons-halflings-regular\"","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3000,3056],"line":110},{"name":"@padding-base-vertical","value":"6px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3170,3206],"line":117},{"name":"@padding-base-horizontal","value":"12px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3208,3245],"line":118},{"name":"@padding-large-vertical","value":"10px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3248,3285],"line":120},{"name":"@padding-large-horizontal","value":"16px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3287,3324],"line":121},{"name":"@padding-small-vertical","value":"5px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3327,3363],"line":123},{"name":"@padding-small-horizontal","value":"10px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3365,3402],"line":124},{"name":"@padding-xs-vertical","value":"1px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3405,3441],"line":126},{"name":"@padding-xs-horizontal","value":"5px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3443,3479],"line":127},{"name":"@line-height-large","value":"1.33","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3482,3519],"line":129},{"name":"@line-height-small","value":"1.5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3521,3557],"line":130},{"name":"@border-radius-base","value":"4px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3560,3596],"line":132},{"name":"@border-radius-large","value":"6px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3598,3634],"line":133},{"name":"@border-radius-small","value":"3px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3636,3672],"line":134},{"name":"@component-active-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3675,3712],"line":136,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@component-active-bg","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3714,3761],"line":137},{"name":"@caret-width-base","value":"4px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3764,3800],"line":139},{"name":"@caret-width-large","value":"5px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3802,3838],"line":140},{"name":"@table-cell-padding","value":"8px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3881,3921],"line":145},{"name":"@table-condensed-cell-padding","value":"5px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3923,3963],"line":146},{"name":"@table-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[3966,4014],"line":148},{"name":"@table-bg-accent","value":"#f9f9f9","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4044,4088],"line":149,"isColor":true,"color":[249,249,249,1],"variables":[]},{"name":"@table-bg-hover","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4106,4150],"line":150,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@table-bg-active","value":"@table-bg-hover","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4152,4204],"line":151,"isColor":true,"color":[245,245,245,1],"variables":["@table-bg-hover"]},{"name":"@table-border-color","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4207,4248],"line":153,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@btn-font-weight","value":"normal","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4318,4357],"line":159},{"name":"@btn-default-color","value":"#333","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4360,4397],"line":161,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@btn-default-bg","value":"#eaeaea","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4399,4439],"line":162,"isColor":true,"color":[234,234,234,1],"variables":[]},{"name":"@btn-default-border","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4441,4478],"line":163,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@btn-primary-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4481,4518],"line":165,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@btn-primary-bg","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4520,4567],"line":166},{"name":"@btn-primary-border","value":"darken(@btn-primary-bg, 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4569,4629],"line":167,"isColor":true,"color":[0,0,0,1],"variables":["@btn-primary-bg"]},{"name":"@btn-success-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4632,4669],"line":169,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@btn-success-bg","value":"@brand-success","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4671,4718],"line":170,"isColor":true,"color":[136,181,78,1],"variables":["@brand-success"]},{"name":"@btn-success-border","value":"darken(@btn-success-bg, 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4720,4780],"line":171,"isColor":true,"color":[0,0,0,1],"variables":["@btn-success-bg"]},{"name":"@btn-warning-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4783,4820],"line":173,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@btn-warning-bg","value":"@brand-warning","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4822,4869],"line":174,"isColor":true,"color":[240,173,78,1],"variables":["@brand-warning"]},{"name":"@btn-warning-border","value":"darken(@btn-warning-bg, 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4871,4931],"line":175,"isColor":true,"color":[0,0,0,1],"variables":["@btn-warning-bg"]},{"name":"@btn-danger-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4934,4971],"line":177,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@btn-danger-bg","value":"@brand-danger","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[4973,5019],"line":178,"isColor":true,"color":[233,107,86,1],"variables":["@brand-danger"]},{"name":"@btn-danger-border","value":"darken(@btn-danger-bg, 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5021,5080],"line":179,"isColor":true,"color":[0,0,0,1],"variables":["@btn-danger-bg"]},{"name":"@btn-info-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5083,5120],"line":181,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@btn-info-bg","value":"@brand-info","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5122,5166],"line":182,"isColor":true,"color":[62,165,190,1],"variables":["@brand-info"]},{"name":"@btn-info-border","value":"darken(@btn-info-bg, 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5168,5225],"line":183,"isColor":true,"color":[0,0,0,1],"variables":["@btn-info-bg"]},{"name":"@btn-link-disabled-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5228,5272],"line":185,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@input-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5315,5352],"line":191,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@input-bg-disabled","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5354,5400],"line":192,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@input-color","value":"@gray","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5403,5441],"line":194,"isColor":true,"color":[85.42500000000001,85.42500000000001,85.42500000000001,1],"variables":[]},{"name":"@input-border","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5443,5480],"line":195,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@input-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5482,5534],"line":196},{"name":"@input-border-focus","value":"#66afe9","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5536,5576],"line":197,"isColor":true,"color":[102,175,233,1],"variables":[]},{"name":"@input-color-placeholder","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5579,5623],"line":199,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@input-height-base","value":"(@line-height-computed + (@padding-base-vertical * 2) + 2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5626,5717],"line":201},{"name":"@input-height-large","value":"(ceil(@font-size-large * @line-height-large) + (@padding-large-vertical * 2) + 2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5719,5833],"line":202},{"name":"@input-height-small","value":"(floor(@font-size-small * @line-height-small) + (@padding-small-vertical * 2) + 2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5835,5950],"line":203},{"name":"@legend-color","value":"@gray-dark","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5953,5996],"line":205,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@legend-border-color","value":"#e5e5e5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[5998,6038],"line":206,"isColor":true,"color":[229,229,229,1],"variables":[]},{"name":"@input-group-addon-bg","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6041,6087],"line":208,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@input-group-addon-border-color","value":"@input-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6089,6135],"line":209,"isColor":true,"color":[204,204,204,1],"variables":["@input-border"]},{"name":"@dropdown-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6182,6219],"line":215,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@dropdown-border","value":"rgba(0,0,0,.15)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6221,6269],"line":216,"isColor":true,"color":[0,0,0,0.15],"variables":[]},{"name":"@dropdown-fallback-border","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6271,6308],"line":217,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@dropdown-divider-bg","value":"#e5e5e5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6310,6350],"line":218,"isColor":true,"color":[229,229,229,1],"variables":[]},{"name":"@dropdown-link-color","value":"@gray-dark","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6353,6396],"line":220,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@dropdown-link-hover-color","value":"darken(@gray-dark, 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6398,6453],"line":221,"isColor":true,"color":[38.25,38.25,38.25,1],"variables":[]},{"name":"@dropdown-link-hover-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6455,6495],"line":222,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@dropdown-link-active-color","value":"@component-active-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6498,6554],"line":224,"isColor":true,"color":[255,255,255,1],"variables":["@component-active-color"]},{"name":"@dropdown-link-active-bg","value":"@component-active-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6556,6609],"line":225},{"name":"@dropdown-link-disabled-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6612,6656],"line":227,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@dropdown-header-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6659,6703],"line":229,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@zindex-navbar","value":"1000","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6944,6975],"line":241},{"name":"@zindex-dropdown","value":"1000","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[6977,7008],"line":242},{"name":"@zindex-popover","value":"1010","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7010,7041],"line":243},{"name":"@zindex-tooltip","value":"1030","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7043,7074],"line":244},{"name":"@zindex-navbar-fixed","value":"1030","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7076,7107],"line":245},{"name":"@zindex-modal-background","value":"1040","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7109,7140],"line":246},{"name":"@zindex-modal","value":"1050","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7142,7173],"line":247},{"name":"@screen-xs","value":"480px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7352,7386],"line":254},{"name":"@screen-xs-min","value":"@screen-xs","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7388,7398],"line":255},{"name":"@screen-phone","value":"@screen-xs-min","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7429,7472],"line":256},{"name":"@screen-sm","value":"768px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7563,7597],"line":260},{"name":"@screen-sm-min","value":"@screen-sm","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7599,7609],"line":261},{"name":"@screen-tablet","value":"@screen-sm-min","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7640,7683],"line":262},{"name":"@screen-md","value":"992px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7777,7811],"line":266},{"name":"@screen-md-min","value":"@screen-md","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7813,7823],"line":267},{"name":"@screen-desktop","value":"@screen-md-min","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7854,7897],"line":268},{"name":"@screen-lg","value":"1200px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[7998,8033],"line":272},{"name":"@screen-lg-min","value":"@screen-lg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8035,8045],"line":273},{"name":"@screen-lg-desktop","value":"@screen-lg-min","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8076,8119],"line":274},{"name":"@screen-xs-max","value":"(@screen-sm-min - 1)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8189,8238],"line":277},{"name":"@screen-sm-max","value":"(@screen-md-min - 1)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8240,8289],"line":278},{"name":"@screen-md-max","value":"(@screen-lg-min - 1)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8291,8340],"line":279},{"name":"@grid-columns","value":"12","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8454,8484],"line":286},{"name":"@grid-gutter-width","value":"30px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8568,8600],"line":288},{"name":"@grid-float-breakpoint","value":"@screen-sm-min","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8672,8714],"line":293},{"name":"@grid-float-breakpoint-max","value":"(@grid-float-breakpoint - 1)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8763,8819],"line":295},{"name":"@navbar-height","value":"50px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8885,8924],"line":302},{"name":"@navbar-margin-bottom","value":"@line-height-computed","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8926,8982],"line":303},{"name":"@navbar-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[8984,9038],"line":304},{"name":"@navbar-padding-horizontal","value":"floor(@grid-gutter-width / 2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9040,9104],"line":305},{"name":"@navbar-padding-vertical","value":"((@navbar-height - @line-height-computed) / 2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9106,9187],"line":306},{"name":"@navbar-default-color","value":"#777","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9190,9229],"line":308,"isColor":true,"color":[119,119,119,1],"variables":[]},{"name":"@navbar-default-bg","value":"@theme-secondary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9231,9282],"line":309,"isColor":true,"color":[63,177,231,1],"variables":["@theme-secondary"]},{"name":"@navbar-default-border","value":"darken(@navbar-default-bg, 6.5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9284,9351],"line":310,"isColor":true,"color":[0,0,0,1],"variables":["@navbar-default-bg"]},{"name":"@navbar-default-link-color","value":"#777","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9370,9417],"line":313,"isColor":true,"color":[119,119,119,1],"variables":[]},{"name":"@navbar-default-link-hover-color","value":"#333","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9419,9466],"line":314,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@navbar-default-link-hover-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9468,9522],"line":315},{"name":"@navbar-default-link-active-color","value":"#555","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9524,9571],"line":316,"isColor":true,"color":[85,85,85,1],"variables":[]},{"name":"@navbar-default-link-active-bg","value":"darken(@navbar-default-bg, 6.5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9573,9648],"line":317,"isColor":true,"color":[0,0,0,1],"variables":["@navbar-default-bg"]},{"name":"@navbar-default-link-disabled-color","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9650,9697],"line":318,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@navbar-default-link-disabled-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9699,9753],"line":319},{"name":"@navbar-default-brand-color","value":"@navbar-default-link-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9778,9847],"line":322,"isColor":true,"color":[119,119,119,1],"variables":["@navbar-default-link-color"]},{"name":"@navbar-default-brand-hover-color","value":"darken(@navbar-default-brand-color, 10%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9849,9932],"line":323,"isColor":true,"color":[0,0,0,1],"variables":["@navbar-default-brand-color"]},{"name":"@navbar-default-brand-hover-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[9934,9988],"line":324},{"name":"@navbar-default-toggle-hover-bg","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10008,10055],"line":327,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@navbar-default-toggle-icon-bar-bg","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10057,10104],"line":328,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@navbar-default-toggle-border-color","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10106,10153],"line":329,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@navbar-inverse-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10211,10266],"line":335,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@navbar-inverse-bg","value":"#222","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10268,10316],"line":336,"isColor":true,"color":[34,34,34,1],"variables":[]},{"name":"@navbar-inverse-border","value":"darken(@navbar-inverse-bg, 10%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10318,10393],"line":337,"isColor":true,"color":[8.500000000000002,8.500000000000002,8.500000000000002,1],"variables":["@navbar-inverse-bg"]},{"name":"@navbar-inverse-link-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10421,10476],"line":340,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@navbar-inverse-link-hover-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10478,10526],"line":341,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@navbar-inverse-link-hover-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10528,10583],"line":342},{"name":"@navbar-inverse-link-active-color","value":"@navbar-inverse-link-hover-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10585,10661],"line":343,"isColor":true,"color":[255,255,255,1],"variables":["@navbar-inverse-link-hover-color"]},{"name":"@navbar-inverse-link-active-bg","value":"darken(@navbar-inverse-bg, 10%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10663,10738],"line":344,"isColor":true,"color":[8.500000000000002,8.500000000000002,8.500000000000002,1],"variables":["@navbar-inverse-bg"]},{"name":"@navbar-inverse-link-disabled-color","value":"#444","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10740,10788],"line":345,"isColor":true,"color":[68,68,68,1],"variables":[]},{"name":"@navbar-inverse-link-disabled-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10790,10845],"line":346},{"name":"@navbar-inverse-brand-color","value":"@navbar-inverse-link-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10879,10949],"line":349},{"name":"@navbar-inverse-brand-hover-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[10951,10999],"line":350,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@navbar-inverse-brand-hover-bg","value":"transparent","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11001,11056],"line":351},{"name":"@navbar-inverse-toggle-hover-bg","value":"#333","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11085,11133],"line":354,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@navbar-inverse-toggle-icon-bar-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11135,11183],"line":355,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@navbar-inverse-toggle-border-color","value":"#333","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11185,11233],"line":356,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@nav-link-padding","value":"10px 15px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11275,11328],"line":362},{"name":"@nav-link-hover-bg","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11330,11387],"line":363,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@nav-disabled-link-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11390,11445],"line":365,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@nav-disabled-link-hover-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11447,11502],"line":366,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@nav-open-link-hover-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11505,11553],"line":368,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@nav-tabs-border-color","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11564,11612],"line":371,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@nav-tabs-link-hover-border-color","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11615,11672],"line":373,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@nav-tabs-active-link-hover-bg","value":"@body-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11675,11727],"line":375,"isColor":true,"color":[255,255,255,1],"variables":["@body-bg"]},{"name":"@nav-tabs-active-link-hover-color","value":"@gray","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11729,11778],"line":376,"isColor":true,"color":[85.42500000000001,85.42500000000001,85.42500000000001,1],"variables":[]},{"name":"@nav-tabs-active-link-hover-border-color","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11780,11828],"line":377,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@nav-tabs-justified-link-border-color","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11831,11885],"line":379,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@nav-tabs-justified-active-link-border-color","value":"@body-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11887,11945],"line":380,"isColor":true,"color":[255,255,255,1],"variables":["@body-bg"]},{"name":"@nav-pills-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[11957,12020],"line":383},{"name":"@nav-pills-active-link-hover-bg","value":"@component-active-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12022,12086],"line":384},{"name":"@nav-pills-active-link-hover-color","value":"@component-active-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12088,12155],"line":385,"isColor":true,"color":[255,255,255,1],"variables":["@component-active-color"]},{"name":"@pagination-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12203,12246],"line":391,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@pagination-border","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12248,12291],"line":392,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@pagination-hover-bg","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12294,12346],"line":394,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@pagination-active-bg","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12349,12402],"line":396},{"name":"@pagination-active-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12404,12447],"line":397,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@pagination-disabled-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12450,12500],"line":399,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@pager-border-radius","value":"15px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12543,12586],"line":405},{"name":"@pager-disabled-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12588,12638],"line":406,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@jumbotron-padding","value":"30px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12685,12722],"line":412},{"name":"@jumbotron-color","value":"inherit","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12724,12764],"line":413},{"name":"@jumbotron-bg","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12766,12812],"line":414,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@jumbotron-heading-color","value":"inherit","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12814,12854],"line":415},{"name":"@jumbotron-font-size","value":"ceil(@font-size-base * 1.5)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12856,12916],"line":416},{"name":"@state-success-text","value":"#3c763d","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[12976,13016],"line":422,"isColor":true,"color":[60,118,61,1],"variables":[]},{"name":"@state-success-bg","value":"#dff0d8","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13018,13058],"line":423,"isColor":true,"color":[223,240,216,1],"variables":[]},{"name":"@state-success-border","value":"darken(spin(@state-success-bg, -10), 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13060,13133],"line":424,"isColor":true,"color":[213.77777777777777,232.91666666666669,197.58333333333331,1],"variables":[]},{"name":"@state-info-text","value":"#31708f","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13136,13176],"line":426,"isColor":true,"color":[49,112,143,1],"variables":[]},{"name":"@state-info-bg","value":"#d9edf7","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13178,13218],"line":427,"isColor":true,"color":[217,237,247,1],"variables":[]},{"name":"@state-info-border","value":"darken(spin(@state-info-bg, -10), 7%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13220,13290],"line":428,"isColor":true,"color":[187.50869565217388,231.91086956521744,240.79130434782616,1],"variables":[]},{"name":"@state-warning-text","value":"#8a6d3b","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13293,13333],"line":430,"isColor":true,"color":[138,109,59,1],"variables":[]},{"name":"@state-warning-bg","value":"#fcf8e3","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13335,13375],"line":431,"isColor":true,"color":[252,248,227,1],"variables":[]},{"name":"@state-warning-border","value":"darken(spin(@state-warning-bg, -10), 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13377,13450],"line":432,"isColor":true,"color":[249.53225806451616,234.64784946236554,203.96774193548382,1],"variables":[]},{"name":"@state-danger-text","value":"#a94442","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13453,13493],"line":434,"isColor":true,"color":[169,68,66,1],"variables":[]},{"name":"@state-danger-bg","value":"#f2dede","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13495,13535],"line":435,"isColor":true,"color":[242,222,222,1],"variables":[]},{"name":"@state-danger-border","value":"darken(spin(@state-danger-bg, -10), 5%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13537,13609],"line":436,"isColor":true,"color":[234.79347826086956,203.70652173913047,208.88768115942028,1],"variables":[]},{"name":"@tooltip-max-width","value":"200px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13654,13689],"line":441},{"name":"@tooltip-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13691,13725],"line":442,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@tooltip-bg","value":"#000","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13727,13761],"line":443,"isColor":true,"color":[0,0,0,1],"variables":[]},{"name":"@tooltip-arrow-width","value":"5px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13764,13797],"line":445},{"name":"@tooltip-arrow-color","value":"@tooltip-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13799,13840],"line":446,"isColor":true,"color":[0,0,0,1],"variables":["@tooltip-bg"]},{"name":"@popover-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13885,13927],"line":451,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@popover-max-width","value":"276px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13929,13972],"line":452},{"name":"@popover-border-color","value":"rgba(0,0,0,.2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[13974,14026],"line":453,"isColor":true,"color":[0,0,0,0.2],"variables":[]},{"name":"@popover-fallback-border-color","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14028,14070],"line":454,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@popover-title-bg","value":"darken(@popover-bg, 3%)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14073,14134],"line":456,"isColor":true,"color":[247.35,247.35,247.35,1],"variables":["@popover-bg"]},{"name":"@popover-arrow-width","value":"10px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14137,14179],"line":458},{"name":"@popover-arrow-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14181,14223],"line":459,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@popover-arrow-outer-width","value":"(@popover-arrow-width + 1)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14226,14290],"line":461},{"name":"@popover-arrow-outer-color","value":"rgba(0,0,0,.25)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14292,14345],"line":462,"isColor":true,"color":[0,0,0,0.25],"variables":[]},{"name":"@popover-arrow-outer-fallback-color","value":"#999","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14347,14389],"line":463,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@label-default-bg","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14433,14474],"line":469,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@label-primary-bg","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14476,14520],"line":470},{"name":"@label-success-bg","value":"@brand-success","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14522,14566],"line":471,"isColor":true,"color":[136,181,78,1],"variables":["@brand-success"]},{"name":"@label-info-bg","value":"@brand-info","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14568,14609],"line":472,"isColor":true,"color":[62,165,190,1],"variables":["@brand-info"]},{"name":"@label-warning-bg","value":"@brand-warning","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14611,14655],"line":473,"isColor":true,"color":[240,173,78,1],"variables":["@brand-warning"]},{"name":"@label-danger-bg","value":"@brand-danger","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14657,14700],"line":474,"isColor":true,"color":[233,107,86,1],"variables":["@brand-danger"]},{"name":"@label-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14703,14737],"line":476,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@label-link-hover-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14739,14773],"line":477,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@modal-inner-padding","value":"20px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14816,14850],"line":482},{"name":"@modal-title-padding","value":"15px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14853,14887],"line":484},{"name":"@modal-title-line-height","value":"@line-height-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14889,14936],"line":485},{"name":"@modal-content-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14939,14990],"line":487,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@modal-content-border-color","value":"rgba(0,0,0,.2)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[14992,15053],"line":488,"isColor":true,"color":[0,0,0,0.2],"variables":[]},{"name":"@modal-content-fallback-border-color","value":"#999","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15055,15106],"line":489,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@modal-backdrop-bg","value":"#000","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15109,15143],"line":491,"isColor":true,"color":[0,0,0,1],"variables":[]},{"name":"@modal-header-border-color","value":"#e5e5e5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15145,15182],"line":492,"isColor":true,"color":[229,229,229,1],"variables":[]},{"name":"@modal-footer-border-color","value":"@modal-header-border-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15184,15240],"line":493,"isColor":true,"color":[229,229,229,1],"variables":["@modal-header-border-color"]},{"name":"@alert-padding","value":"15px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15283,15317],"line":498},{"name":"@alert-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15319,15368],"line":499},{"name":"@alert-link-font-weight","value":"bold","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15370,15404],"line":500},{"name":"@alert-success-bg","value":"@state-success-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15407,15454],"line":502,"isColor":true,"color":[223,240,216,1],"variables":["@state-success-bg"]},{"name":"@alert-success-text","value":"@state-success-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15456,15505],"line":503,"isColor":true,"color":[60,118,61,1],"variables":["@state-success-text"]},{"name":"@alert-success-border","value":"@state-success-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15507,15558],"line":504,"isColor":true,"color":[213.77777777777777,232.91666666666669,197.58333333333331,1],"variables":[]},{"name":"@alert-info-bg","value":"@state-info-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15561,15605],"line":506,"isColor":true,"color":[217,237,247,1],"variables":["@state-info-bg"]},{"name":"@alert-info-text","value":"@state-info-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15607,15653],"line":507,"isColor":true,"color":[49,112,143,1],"variables":["@state-info-text"]},{"name":"@alert-info-border","value":"@state-info-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15655,15703],"line":508,"isColor":true,"color":[187.50869565217388,231.91086956521744,240.79130434782616,1],"variables":[]},{"name":"@alert-warning-bg","value":"@state-warning-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15706,15753],"line":510,"isColor":true,"color":[252,248,227,1],"variables":["@state-warning-bg"]},{"name":"@alert-warning-text","value":"@state-warning-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15755,15804],"line":511,"isColor":true,"color":[138,109,59,1],"variables":["@state-warning-text"]},{"name":"@alert-warning-border","value":"@state-warning-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15806,15857],"line":512,"isColor":true,"color":[249.53225806451616,234.64784946236554,203.96774193548382,1],"variables":[]},{"name":"@alert-danger-bg","value":"@state-danger-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15860,15906],"line":514,"isColor":true,"color":[242,222,222,1],"variables":["@state-danger-bg"]},{"name":"@alert-danger-text","value":"@state-danger-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15908,15956],"line":515,"isColor":true,"color":[169,68,66,1],"variables":["@state-danger-text"]},{"name":"@alert-danger-border","value":"@state-danger-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[15958,16008],"line":516,"isColor":true,"color":[234.79347826086956,203.70652173913047,208.88768115942028,1],"variables":[]},{"name":"@progress-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16058,16095],"line":521,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@progress-bar-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16097,16131],"line":522,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@progress-bar-bg","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16134,16178],"line":524},{"name":"@progress-bar-success-bg","value":"@brand-success","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16180,16224],"line":525,"isColor":true,"color":[136,181,78,1],"variables":["@brand-success"]},{"name":"@progress-bar-warning-bg","value":"@brand-warning","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16226,16270],"line":526,"isColor":true,"color":[240,173,78,1],"variables":["@brand-warning"]},{"name":"@progress-bar-danger-bg","value":"@brand-danger","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16272,16315],"line":527,"isColor":true,"color":[233,107,86,1],"variables":["@brand-danger"]},{"name":"@progress-bar-info-bg","value":"@brand-info","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16317,16358],"line":528,"isColor":true,"color":[62,165,190,1],"variables":["@brand-info"]},{"name":"@list-group-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16405,16439],"line":533,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@list-group-border","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16441,16475],"line":534,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@list-group-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16477,16526],"line":535},{"name":"@list-group-hover-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16529,16566],"line":537,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@list-group-active-color","value":"@component-active-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16568,16621],"line":538,"isColor":true,"color":[255,255,255,1],"variables":["@component-active-color"]},{"name":"@list-group-active-bg","value":"@component-active-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16623,16673],"line":539},{"name":"@list-group-active-border","value":"@list-group-active-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16675,16726],"line":540},{"name":"@list-group-link-color","value":"#555","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16729,16766],"line":542,"isColor":true,"color":[85,85,85,1],"variables":[]},{"name":"@list-group-link-heading-color","value":"#333","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16768,16805],"line":543,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@panel-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16848,16882],"line":548,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@panel-inner-border","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16884,16918],"line":549,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@panel-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16920,16969],"line":550},{"name":"@panel-footer-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[16971,17008],"line":551,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@panel-default-text","value":"@gray-dark","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17011,17051],"line":553,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@panel-default-border","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17053,17087],"line":554,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@panel-default-heading-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17089,17126],"line":555,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@panel-primary-text","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17129,17163],"line":557,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@panel-primary-border","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17165,17209],"line":558},{"name":"@panel-primary-heading-bg","value":"@brand-primary","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17211,17255],"line":559},{"name":"@panel-success-text","value":"@state-success-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17258,17307],"line":561,"isColor":true,"color":[60,118,61,1],"variables":["@state-success-text"]},{"name":"@panel-success-border","value":"@state-success-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17309,17360],"line":562,"isColor":true,"color":[213.77777777777777,232.91666666666669,197.58333333333331,1],"variables":[]},{"name":"@panel-success-heading-bg","value":"@state-success-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17362,17409],"line":563,"isColor":true,"color":[223,240,216,1],"variables":["@state-success-bg"]},{"name":"@panel-warning-text","value":"@state-warning-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17412,17461],"line":565,"isColor":true,"color":[138,109,59,1],"variables":["@state-warning-text"]},{"name":"@panel-warning-border","value":"@state-warning-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17463,17514],"line":566,"isColor":true,"color":[249.53225806451616,234.64784946236554,203.96774193548382,1],"variables":[]},{"name":"@panel-warning-heading-bg","value":"@state-warning-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17516,17563],"line":567,"isColor":true,"color":[252,248,227,1],"variables":["@state-warning-bg"]},{"name":"@panel-danger-text","value":"@state-danger-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17566,17614],"line":569,"isColor":true,"color":[169,68,66,1],"variables":["@state-danger-text"]},{"name":"@panel-danger-border","value":"@state-danger-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17616,17666],"line":570,"isColor":true,"color":[234.79347826086956,203.70652173913047,208.88768115942028,1],"variables":[]},{"name":"@panel-danger-heading-bg","value":"@state-danger-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17668,17714],"line":571,"isColor":true,"color":[242,222,222,1],"variables":["@state-danger-bg"]},{"name":"@panel-info-text","value":"@state-info-text","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17717,17763],"line":573,"isColor":true,"color":[49,112,143,1],"variables":["@state-info-text"]},{"name":"@panel-info-border","value":"@state-info-border","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17765,17813],"line":574,"isColor":true,"color":[187.50869565217388,231.91086956521744,240.79130434782616,1],"variables":[]},{"name":"@panel-info-heading-bg","value":"@state-info-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17815,17859],"line":575,"isColor":true,"color":[217,237,247,1],"variables":["@state-info-bg"]},{"name":"@thumbnail-padding","value":"4px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17906,17939],"line":580},{"name":"@thumbnail-bg","value":"@body-bg","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17941,17979],"line":581,"isColor":true,"color":[255,255,255,1],"variables":["@body-bg"]},{"name":"@thumbnail-border","value":"#ddd","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[17981,18015],"line":582,"isColor":true,"color":[221,221,221,1],"variables":[]},{"name":"@thumbnail-border-radius","value":"@border-radius-base","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18017,18066],"line":583},{"name":"@thumbnail-caption-color","value":"@text-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18069,18110],"line":585},{"name":"@thumbnail-caption-padding","value":"9px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18112,18145],"line":586},{"name":"@well-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18187,18224],"line":591,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@badge-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18267,18301],"line":596,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@badge-link-hover-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18303,18337],"line":597,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@badge-bg","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18339,18380],"line":598,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@badge-active-color","value":"@link-color","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18383,18424],"line":600},{"name":"@badge-active-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18426,18460],"line":601,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@badge-font-weight","value":"bold","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18463,18497],"line":603},{"name":"@badge-line-height","value":"1","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18499,18530],"line":604},{"name":"@badge-border-radius","value":"10px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18532,18566],"line":605},{"name":"@breadcrumb-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18614,18651],"line":610,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@breadcrumb-color","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18653,18687],"line":611,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@breadcrumb-active-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18689,18730],"line":612,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@breadcrumb-separator","value":"\"/\"","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18732,18765],"line":613},{"name":"@carousel-text-shadow","value":"0 1px 2px rgba(0,0,0,.6)","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18810,18880],"line":619},{"name":"@carousel-control-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18883,18933],"line":621,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@carousel-control-width","value":"15%","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18935,18984],"line":622},{"name":"@carousel-control-opacity","value":".5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[18986,19034],"line":623},{"name":"@carousel-control-font-size","value":"20px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19036,19086],"line":624},{"name":"@carousel-indicator-active-bg","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19089,19139],"line":626,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@carousel-indicator-border-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19141,19191],"line":627,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@carousel-caption-color","value":"#fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19194,19244],"line":629,"isColor":true,"color":[255,255,255,1],"variables":[]},{"name":"@close-font-weight","value":"bold","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19285,19319],"line":634},{"name":"@close-color","value":"#000","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19321,19355],"line":635,"isColor":true,"color":[0,0,0,1],"variables":[]},{"name":"@close-text-shadow","value":"0 1px 0 #fff","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19357,19399],"line":636},{"name":"@code-color","value":"#c7254e","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19439,19476],"line":641,"isColor":true,"color":[199,37,78,1],"variables":[]},{"name":"@code-bg","value":"#f9f2f4","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19478,19515],"line":642,"isColor":true,"color":[249,242,244,1],"variables":[]},{"name":"@pre-bg","value":"#f5f5f5","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19518,19555],"line":644,"isColor":true,"color":[245,245,245,1],"variables":[]},{"name":"@pre-color","value":"@gray-dark","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19557,19597],"line":645,"isColor":true,"color":[51,51,51,1],"variables":[]},{"name":"@pre-border-color","value":"#ccc","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19599,19633],"line":646,"isColor":true,"color":[204,204,204,1],"variables":[]},{"name":"@pre-scrollable-max-height","value":"340px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19635,19670],"line":647},{"name":"@text-muted","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19709,19750],"line":651,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@abbr-border-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19752,19793],"line":652,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@headings-small-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19795,19836],"line":653,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@blockquote-small-color","value":"@gray-light","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19838,19879],"line":654,"isColor":true,"color":[153,153,153,1],"variables":[]},{"name":"@blockquote-border-color","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19881,19924],"line":655,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@page-header-border-color","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[19926,19969],"line":656,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@hr-border","value":"@gray-lighter","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20038,20081],"line":662,"isColor":true,"color":[238.425,238.425,238.425,1],"variables":[]},{"name":"@component-offset-horizontal","value":"180px","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20112,20147],"line":665},{"name":"@container-tablet","value":"((720px + @grid-gutter-width))","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20250,20311],"line":672},{"name":"@container-sm","value":"@container-tablet","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20313,20361],"line":673},{"name":"@container-desktop","value":"((940px + @grid-gutter-width))","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20391,20452],"line":676},{"name":"@container-md","value":"@container-desktop","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20454,20503],"line":677},{"name":"@container-large-desktop","value":"((1140px + @grid-gutter-width))","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20537,20599],"line":680},{"name":"@container-lg","value":"@container-large-desktop","path":"/Users/Rad/Documents/Dev/CodersCrowd/application/views/public/css/less/variables.less","range":[20601,20656],"line":681}]}}}},"fullScreen":false}