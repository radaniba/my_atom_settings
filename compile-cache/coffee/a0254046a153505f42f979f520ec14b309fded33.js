(function() {
  var CompositeDisposable, ResultView, SVGTransform, transform, transformime, transformimeJupyter, _;

  CompositeDisposable = require('atom').CompositeDisposable;

  _ = require('lodash');

  module.exports = ResultView = (function() {
    function ResultView(marker) {
      var padding;
      this.marker = marker;
      this.element = document.createElement('div');
      this.element.classList.add('hydrogen', 'output-bubble', 'empty');
      this.outputContainer = document.createElement('div');
      this.outputContainer.classList.add('bubble-output-container');
      this.outputContainer.onmousewheel = function(e) {
        return e.stopPropagation();
      };
      this.element.appendChild(this.outputContainer);
      this.resultContainer = document.createElement('div');
      this.resultContainer.classList.add('bubble-result-container');
      this.outputContainer.appendChild(this.resultContainer);
      this.errorContainer = document.createElement('div');
      this.errorContainer.classList.add('bubble-error-container');
      this.outputContainer.appendChild(this.errorContainer);
      this.statusContainer = document.createElement('div');
      this.statusContainer.classList.add('bubble-status-container');
      this.spinner = this.buildSpinner();
      this.statusContainer.appendChild(this.spinner);
      this.outputContainer.appendChild(this.statusContainer);
      this.richCloseButton = document.createElement('div');
      this.richCloseButton.classList.add('rich-close-button', 'icon', 'icon-x');
      this.richCloseButton.onclick = (function(_this) {
        return function() {
          return _this.destroy();
        };
      })(this);
      this.element.appendChild(this.richCloseButton);
      this.actionPanel = document.createElement('div');
      this.actionPanel.classList.add('bubble-action-panel');
      this.element.appendChild(this.actionPanel);
      this.closeButton = document.createElement('div');
      this.closeButton.classList.add('action-button', 'close-button', 'icon', 'icon-x');
      this.closeButton.onclick = (function(_this) {
        return function() {
          return _this.destroy();
        };
      })(this);
      this.actionPanel.appendChild(this.closeButton);
      padding = document.createElement('div');
      padding.classList.add('padding');
      this.actionPanel.appendChild(padding);
      this.copyButton = document.createElement('div');
      this.copyButton.classList.add('action-button', 'copy-button', 'icon', 'icon-clippy');
      this.copyButton.onclick = (function(_this) {
        return function() {
          atom.clipboard.write(_this.getAllText());
          return atom.notifications.addSuccess("Copied to clipboard");
        };
      })(this);
      this.actionPanel.appendChild(this.copyButton);
      this.openButton = document.createElement('div');
      this.openButton.classList.add('action-button', 'open-button', 'icon', 'icon-file-symlink-file');
      this.openButton.onclick = (function(_this) {
        return function() {
          var bubbleText;
          bubbleText = _this.getAllText();
          return atom.workspace.open().then(function(editor) {
            return editor.insertText(bubbleText);
          });
        };
      })(this);
      this.actionPanel.appendChild(this.openButton);
      this.setMultiline(false);
      this.tooltips = new CompositeDisposable();
      this.tooltips.add(atom.tooltips.add(this.copyButton, {
        title: "Copy to clipboard"
      }));
      this.tooltips.add(atom.tooltips.add(this.openButton, {
        title: "Open in new editor"
      }));
      this._hasResult = false;
      return this;
    }

    ResultView.prototype.addResult = function(result) {
      var container, onError, onSuccess;
      console.log("ResultView: Add result", result);
      this.element.classList.remove('empty');
      if (result.stream === 'status') {
        if (!this._hasResult && result.data === 'ok') {
          console.log("ResultView: Show status container");
          this.statusContainer.classList.add('icon', 'icon-check');
          this.statusContainer.style.display = 'inline-block';
        }
        return;
      }
      if (result.stream === 'stderr') {
        container = this.errorContainer;
      } else if (result.stream === 'stdout') {
        container = this.resultContainer;
      } else if (result.stream === 'error') {
        container = this.errorContainer;
      } else {
        container = this.resultContainer;
      }
      onSuccess = (function(_this) {
        return function(_arg) {
          var el, htmlElement, mimeType, mimetype, previousText, text;
          mimetype = _arg.mimetype, el = _arg.el;
          console.log("ResultView: Hide status container");
          _this._hasResult = true;
          _this.statusContainer.style.display = 'none';
          mimeType = mimetype;
          htmlElement = el;
          console.log("ResultView: Rendering as MIME", mimeType);
          console.log("ResultView: Rendering as ", htmlElement);
          if (mimeType === 'text/plain') {
            _this.element.classList.remove('rich');
            previousText = _this.getAllText();
            text = result.data['text/plain'];
            if (previousText === '' && text.length < 50 && text.indexOf('\n') === -1) {
              _this.setMultiline(false);
              _this.tooltips.add(atom.tooltips.add(container, {
                title: "Copy to clipboard"
              }));
              container.onclick = function() {
                atom.clipboard.write(_this.getAllText());
                return atom.notifications.addSuccess("Copied to clipboard");
              };
            } else {
              _this.setMultiline(true);
            }
          } else {
            _this.element.classList.add('rich');
            _this.setMultiline(true);
          }
          container.appendChild(htmlElement);
          if (mimeType === 'text/html') {
            if (_this.getAllText() !== '') {
              _this.element.classList.remove('rich');
            }
          }
          if (mimeType === 'image/svg+xml') {
            container.classList.add('svg');
          }
          if (_this.errorContainer.getElementsByTagName('span').length === 0) {
            return _this.errorContainer.classList.add('plain-error');
          } else {
            return _this.errorContainer.classList.remove('plain-error');
          }
        };
      })(this);
      onError = function(error) {
        return console.error("ResultView: Rendering error:", error);
      };
      return transform(result.data).then(onSuccess, onError);
    };

    ResultView.prototype.getAllText = function() {
      var errorText, resultText, text;
      text = '';
      resultText = this.resultContainer.innerText.trim();
      if (resultText.length > 0) {
        text += resultText;
      }
      errorText = this.errorContainer.innerText.trim();
      if (errorText.length > 0) {
        text += '\n' + errorText;
      }
      return text;
    };

    ResultView.prototype.setMultiline = function(multiline) {
      if (multiline) {
        return this.element.classList.add('multiline');
      } else {
        return this.element.classList.remove('multiline');
      }
    };

    ResultView.prototype.buildSpinner = function() {
      var container, rect1, rect2, rect3, rect4, rect5;
      container = document.createElement('div');
      container.classList.add('spinner');
      rect1 = document.createElement('div');
      rect1.classList.add('rect1');
      rect2 = document.createElement('div');
      rect2.classList.add('rect2');
      rect3 = document.createElement('div');
      rect3.classList.add('rect3');
      rect4 = document.createElement('div');
      rect4.classList.add('rect4');
      rect5 = document.createElement('div');
      rect5.classList.add('rect5');
      container.appendChild(rect1);
      container.appendChild(rect2);
      container.appendChild(rect3);
      container.appendChild(rect4);
      container.appendChild(rect5);
      return container;
    };

    ResultView.prototype.spin = function(shouldSpin) {
      if (shouldSpin) {
        this.element.classList.remove('empty');
        return this.spinner.style.display = 'block';
      } else {
        return this.spinner.style.display = 'none';
      }
    };

    ResultView.prototype.destroy = function() {
      this.tooltips.dispose();
      if (this.marker != null) {
        this.marker.destroy();
      }
      this.element.innerHTML = '';
      return this.element.remove();
    };

    ResultView.prototype.getElement = function() {
      return this.element;
    };

    return ResultView;

  })();

  transformime = require('transformime');

  transformimeJupyter = require('transformime-jupyter-transformers');

  SVGTransform = function(mimetype, value, document) {
    var container, svgElement;
    container = document.createElement('div');
    container.innerHTML = value;
    svgElement = (container.getElementsByTagName('svg'))[0];
    if (svgElement == null) {
      throw new Error('SVGTransform: Error: Failed to create an <svg> element');
    }
    return svgElement;
  };

  SVGTransform.mimetype = 'image/svg+xml';

  transformimeJupyter.consoleTextTransform.mimetype = ['jupyter/console-text', 'text/plain'];

  transform = transformime.createTransform([transformimeJupyter.PDFTransform, transformime.ImageTransformer, SVGTransform, transformimeJupyter.consoleTextTransform, transformimeJupyter.LaTeXTransform, transformimeJupyter.markdownTransform, transformime.HTMLTransformer, transformimeJupyter.ScriptTransform]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/Users/Rad/.atom/packages/hydrogen/lib/result-view.coffee
