(function() {
  var Config, _;

  _ = require('lodash');

  module.exports = Config = {
    getJson: function(key, _default) {
      var error, message, value;
      if (_default == null) {
        _default = {};
      }
      if (!(value = atom.config.get("Hydrogen." + key))) {
        return _default;
      }
      try {
        return JSON.parse(value);
      } catch (_error) {
        error = _error;
        message = "Your Hydrogen config is broken: " + key;
        atom.notifications.addError(message, {
          detail: error
        });
      }
      return _default;
    },
    setJson: function(key, value, merge) {
      if (merge == null) {
        merge = false;
      }
      if (merge) {
        value = _.merge(Config.getJson(key), value);
      }
      return atom.config.set("Hydrogen." + key, JSON.stringify(value));
    },
    schema: {
      autocomplete: {
        title: "Enable Autocomplete",
        type: 'boolean',
        "default": true
      },
      grammarToKernel: {
        description: 'JSON mappings from grammar to kernel language names. This value is updated automatically by the `Switch kernel` command. Example: If the setting `Kernel Spec` lists a kernel with `language` set `python` and `display_name` set to `Python 3`, you can set `grammarToKernel` to `{"python":"Python 3"}` to tell Hydrogen you want to use the `Python 3` kernel the next time you open a Python file.',
        type: 'string',
        "default": '{}'
      },
      kernelspec: {
        title: "Kernel Spec",
        description: 'This field is autogenerated on every launch in up-to-date environments, also you can regenerate this with `hydrogen:update-kernels` command. Kernel specs as reported by `jupyter kernelspecs list --json` or `ipython kernelspecs list --json`. If these commands fail in your environment, you can use this field to specify your kernels, like: ``` { "kernelspecs": { "ijavascript": { "spec": { "display_name": "IJavascript", "env": {}, "argv": [ "node", "/home/user/node_modules/ijavascript/lib/kernel.js", "--protocol=5.0", "{connection_file}" ], "language": "javascript" }, "resources_dir": "/home/user/node_modules/ijavascript/images" } } } ```',
        type: 'string',
        "default": '{}'
      },
      languageMappings: {
        title: "Language Mappings",
        description: 'Some packages may change the name of the grammar for a language (e.g. "Python" -> "Python Django"). That leaves Hydrogen unable to figure out what kernel to use for your code. This field should be valid JSON mapping from a non-standard language name to a standard one, e.g. ``` { "Python Django": "python", "Ruby (Rails)": "ruby" }```',
        type: 'string',
        "default": '{}'
      },
      startupCode: {
        title: "Startup Code",
        description: 'This code will be executed on kernel startup. Format: `{"kernel": "your code \\nmore code"}`. Example: `{"Python 2": "%matplotlib inline"}`',
        type: 'string',
        "default": '{}'
      },
      kernelNotifications: {
        title: "Enable kernel notifications",
        description: 'By default, kernel notifications are only displayed in the developer console. This setting defines a RegExp to filter what kernel notifications will also be shown as Atom notification bubbles. Example: `error|warning`',
        type: 'string',
        "default": '(?!)'
      }
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL1JhZC8uYXRvbS9wYWNrYWdlcy9oeWRyb2dlbi9saWIvY29uZmlnLmNvZmZlZSIKICBdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICJBQUFBO0FBQUEsTUFBQSxTQUFBOztBQUFBLEVBQUEsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxRQUFSLENBQUosQ0FBQTs7QUFBQSxFQUVBLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLE1BQUEsR0FDYjtBQUFBLElBQUEsT0FBQSxFQUFTLFNBQUMsR0FBRCxFQUFNLFFBQU4sR0FBQTtBQUNMLFVBQUEscUJBQUE7O1FBRFcsV0FBVztPQUN0QjtBQUFBLE1BQUEsSUFBQSxDQUFBLENBQXVCLEtBQUEsR0FBUSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQVosQ0FBaUIsV0FBQSxHQUFXLEdBQTVCLENBQVIsQ0FBdkI7QUFBQSxlQUFPLFFBQVAsQ0FBQTtPQUFBO0FBQ0E7QUFDSSxlQUFPLElBQUksQ0FBQyxLQUFMLENBQVcsS0FBWCxDQUFQLENBREo7T0FBQSxjQUFBO0FBR0ksUUFERSxjQUNGLENBQUE7QUFBQSxRQUFBLE9BQUEsR0FBVyxrQ0FBQSxHQUFrQyxHQUE3QyxDQUFBO0FBQUEsUUFDQSxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQW5CLENBQTRCLE9BQTVCLEVBQXFDO0FBQUEsVUFBQSxNQUFBLEVBQVEsS0FBUjtTQUFyQyxDQURBLENBSEo7T0FEQTtBQU1BLGFBQU8sUUFBUCxDQVBLO0lBQUEsQ0FBVDtBQUFBLElBU0EsT0FBQSxFQUFTLFNBQUMsR0FBRCxFQUFNLEtBQU4sRUFBYSxLQUFiLEdBQUE7O1FBQWEsUUFBTTtPQUN4QjtBQUFBLE1BQUEsSUFBOEMsS0FBOUM7QUFBQSxRQUFBLEtBQUEsR0FBUSxDQUFDLENBQUMsS0FBRixDQUFRLE1BQU0sQ0FBQyxPQUFQLENBQWUsR0FBZixDQUFSLEVBQTZCLEtBQTdCLENBQVIsQ0FBQTtPQUFBO2FBQ0EsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFaLENBQWlCLFdBQUEsR0FBVyxHQUE1QixFQUFtQyxJQUFJLENBQUMsU0FBTCxDQUFlLEtBQWYsQ0FBbkMsRUFGSztJQUFBLENBVFQ7QUFBQSxJQWFBLE1BQUEsRUFDSTtBQUFBLE1BQUEsWUFBQSxFQUNJO0FBQUEsUUFBQSxLQUFBLEVBQU8scUJBQVA7QUFBQSxRQUNBLElBQUEsRUFBTSxTQUROO0FBQUEsUUFFQSxTQUFBLEVBQVMsSUFGVDtPQURKO0FBQUEsTUFJQSxlQUFBLEVBQ0k7QUFBQSxRQUFBLFdBQUEsRUFBYSx3WUFBYjtBQUFBLFFBT0EsSUFBQSxFQUFNLFFBUE47QUFBQSxRQVFBLFNBQUEsRUFBUyxJQVJUO09BTEo7QUFBQSxNQWNBLFVBQUEsRUFDSTtBQUFBLFFBQUEsS0FBQSxFQUFPLGFBQVA7QUFBQSxRQUNBLFdBQUEsRUFBYSxvb0JBRGI7QUFBQSxRQTJCQSxJQUFBLEVBQU0sUUEzQk47QUFBQSxRQTRCQSxTQUFBLEVBQVMsSUE1QlQ7T0FmSjtBQUFBLE1BNENBLGdCQUFBLEVBQ0k7QUFBQSxRQUFBLEtBQUEsRUFBTyxtQkFBUDtBQUFBLFFBQ0EsV0FBQSxFQUFhLGdWQURiO0FBQUEsUUFXQSxJQUFBLEVBQU0sUUFYTjtBQUFBLFFBWUEsU0FBQSxFQUFTLElBWlQ7T0E3Q0o7QUFBQSxNQTBEQSxXQUFBLEVBQ0k7QUFBQSxRQUFBLEtBQUEsRUFBTyxjQUFQO0FBQUEsUUFDQSxXQUFBLEVBQWEsNklBRGI7QUFBQSxRQUlBLElBQUEsRUFBTSxRQUpOO0FBQUEsUUFLQSxTQUFBLEVBQVMsSUFMVDtPQTNESjtBQUFBLE1BaUVBLG1CQUFBLEVBQ0k7QUFBQSxRQUFBLEtBQUEsRUFBTyw2QkFBUDtBQUFBLFFBQ0EsV0FBQSxFQUFhLDJOQURiO0FBQUEsUUFLQSxJQUFBLEVBQU0sUUFMTjtBQUFBLFFBTUEsU0FBQSxFQUFTLE1BTlQ7T0FsRUo7S0FkSjtHQUhKLENBQUE7QUFBQSIKfQ==

//# sourceURL=/Users/Rad/.atom/packages/hydrogen/lib/config.coffee
