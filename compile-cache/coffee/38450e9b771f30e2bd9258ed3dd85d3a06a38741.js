(function() {
  var CompositeDisposable, ResultView, stripAnsi, _;

  CompositeDisposable = require('atom').CompositeDisposable;

  _ = require('lodash');

  stripAnsi = require('strip-ansi');

  module.exports = ResultView = (function() {
    function ResultView(marker) {
      var padding;
      this.marker = marker;
      this.element = document.createElement('div');
      this.element.classList.add('hydrogen', 'output-bubble', 'empty');
      this.outputContainer = document.createElement('div');
      this.outputContainer.classList.add('bubble-output-container');
      this.outputContainer.onmousewheel = function(e) {
        return e.stopPropagation();
      };
      this.element.appendChild(this.outputContainer);
      this.resultContainer = document.createElement('div');
      this.resultContainer.classList.add('bubble-result-container');
      this.outputContainer.appendChild(this.resultContainer);
      this.errorContainer = document.createElement('div');
      this.errorContainer.classList.add('bubble-error-container');
      this.outputContainer.appendChild(this.errorContainer);
      this.statusContainer = document.createElement('div');
      this.statusContainer.classList.add('bubble-status-container');
      this.spinner = this.buildSpinner();
      this.statusContainer.appendChild(this.spinner);
      this.outputContainer.appendChild(this.statusContainer);
      this.richCloseButton = document.createElement('div');
      this.richCloseButton.classList.add('rich-close-button', 'icon', 'icon-x');
      this.richCloseButton.onclick = (function(_this) {
        return function() {
          return _this.destroy();
        };
      })(this);
      this.element.appendChild(this.richCloseButton);
      this.actionPanel = document.createElement('div');
      this.actionPanel.classList.add('bubble-action-panel');
      this.element.appendChild(this.actionPanel);
      this.closeButton = document.createElement('div');
      this.closeButton.classList.add('action-button', 'close-button', 'icon', 'icon-x');
      this.closeButton.onclick = (function(_this) {
        return function() {
          return _this.destroy();
        };
      })(this);
      this.actionPanel.appendChild(this.closeButton);
      padding = document.createElement('div');
      padding.classList.add('padding');
      this.actionPanel.appendChild(padding);
      this.copyButton = document.createElement('div');
      this.copyButton.classList.add('action-button', 'copy-button', 'icon', 'icon-clippy');
      this.copyButton.onclick = (function(_this) {
        return function() {
          atom.clipboard.write(_this.getAllText());
          return atom.notifications.addSuccess("Copied to clipboard");
        };
      })(this);
      this.actionPanel.appendChild(this.copyButton);
      this.openButton = document.createElement('div');
      this.openButton.classList.add('action-button', 'open-button', 'icon', 'icon-file-symlink-file');
      this.openButton.onclick = (function(_this) {
        return function() {
          var bubbleText;
          bubbleText = _this.getAllText();
          return atom.workspace.open().then(function(editor) {
            return editor.insertText(bubbleText);
          });
        };
      })(this);
      this.actionPanel.appendChild(this.openButton);
      this.resultType = null;
      this.setMultiline(false);
      this.tooltips = new CompositeDisposable();
      this.tooltips.add(atom.tooltips.add(this.copyButton, {
        title: "Copy to clipboard"
      }));
      this.tooltips.add(atom.tooltips.add(this.openButton, {
        title: "Open in new editor"
      }));
      return this;
    }

    ResultView.prototype.addResult = function(result) {
      var buffer, container, image;
      this.element.classList.remove('empty');
      if (result.stream === 'status') {
        if (result.data === 'ok') {
          this.statusContainer.classList.add('icon', 'icon-check');
        }
      } else {
        if (result.stream === 'stderr' || result.stream === 'error') {
          container = this.errorContainer;
        } else {
          container = this.resultContainer;
        }
        if (result.type === 'text/html') {
          console.log("rendering as HTML");
          this.resultType = 'html';
          this.element.classList.add('rich');
          container.classList.add('html');
          container.innerHTML = result.data;
          this.setMultiline(true);
        } else if (result.type === 'image/svg+xml') {
          console.log("rendering as SVG");
          container.innerHTML = container.innerHTML.trim().replace('<br>', '');
          this.resultType = 'image';
          this.element.classList.add('rich');
          this.element.classList.add('svg');
          buffer = new Buffer(result.data);
          image = document.createElement('img');
          image.setAttribute('src', "data:image/svg+xml;base64," + buffer.toString('base64'));
          container.appendChild(image);
          this.setMultiline(true);
        } else if (result.type.startsWith('image')) {
          console.log("rendering as image");
          container.innerHTML = container.innerHTML.trim().replace('<br>', '');
          this.resultType = 'image';
          this.element.classList.add('rich');
          image = document.createElement('img');
          image.setAttribute('src', ("data:" + result.type + ";base64,") + result.data);
          container.appendChild(image);
          this.setMultiline(true);
        } else if (!this.resultType || this.resultType === 'text') {
          console.log("rendering as text");
          this.resultType = 'text';
          container.innerText = container.innerText + stripAnsi(result.data);
          if (/(\\n|\r|\n)/.exec(container.innerText.trim()) || container.offsetWidth > 500 || container.offsetHeight > 500) {
            container.innerText = container.innerText.replace(/\\n/g, "\n");
            this.setMultiline(true);
          } else {
            this.tooltips.add(atom.tooltips.add(container, {
              title: "Copy to clipboard"
            }));
            container.onclick = (function(_this) {
              return function() {
                atom.clipboard.write(_this.getAllText());
                return atom.notifications.addSuccess("Copied to clipboard");
              };
            })(this);
          }
        } else {
          console.error("Unrecognized result:", result);
        }
      }
      console.log("resultType after update:", this.resultType);
      return this.updateStatusVisibility();
    };

    ResultView.prototype.getAllText = function() {
      var errorText, resultText;
      resultText = this.resultContainer.innerText;
      errorText = this.errorContainer.innerText;
      return resultText + "\n" + errorText;
    };

    ResultView.prototype.setMultiline = function(multiline) {
      this.multiline = multiline;
      if (this.multiline) {
        return this.element.classList.add('multiline');
      } else {
        return this.element.classList.remove('multiline');
      }
    };

    ResultView.prototype.updateStatusVisibility = function() {
      if (this.resultType == null) {
        return this.statusContainer.style.display = 'inline-block';
      } else {
        return this.statusContainer.style.display = 'none';
      }
    };

    ResultView.prototype.buildSpinner = function() {
      var container, rect1, rect2, rect3, rect4, rect5;
      container = document.createElement('div');
      container.classList.add('spinner');
      rect1 = document.createElement('div');
      rect1.classList.add('rect1');
      rect2 = document.createElement('div');
      rect2.classList.add('rect2');
      rect3 = document.createElement('div');
      rect3.classList.add('rect3');
      rect4 = document.createElement('div');
      rect4.classList.add('rect4');
      rect5 = document.createElement('div');
      rect5.classList.add('rect5');
      container.appendChild(rect1);
      container.appendChild(rect2);
      container.appendChild(rect3);
      container.appendChild(rect4);
      container.appendChild(rect5);
      return container;
    };

    ResultView.prototype.spin = function(shouldSpin) {
      if (shouldSpin) {
        this.element.classList.remove('empty');
        return this.spinner.style.display = 'block';
      } else {
        return this.spinner.style.display = 'none';
      }
    };

    ResultView.prototype.destroy = function() {
      this.tooltips.dispose();
      if (this.marker != null) {
        this.marker.destroy();
      }
      this.element.innerHTML = '';
      return this.element.remove();
    };

    ResultView.prototype.getElement = function() {
      return this.element;
    };

    return ResultView;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,

//# sourceURL=/Users/Rad/.atom/packages/hydrogen/lib/result-view.coffee
