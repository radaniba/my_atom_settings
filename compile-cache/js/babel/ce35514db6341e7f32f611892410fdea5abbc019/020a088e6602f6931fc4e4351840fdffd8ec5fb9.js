function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

var _path = require('path');

var path = _interopRequireWildcard(_path);

'use babel';

var badPath = path.join(__dirname, 'files', 'bad.php');
var goodPath = path.join(__dirname, 'files', 'good.php');
var emptyPath = path.join(__dirname, 'files', 'empty.php');
var fatalPath = path.join(__dirname, 'files', 'fatal.php');

var lint = require('../lib/main.js').provideLinter().lint;

describe('The php -l provider for Linter', function () {
  beforeEach(function () {
    atom.workspace.destroyActivePaneItem();
    waitsForPromise(function () {
      return Promise.all([atom.packages.activatePackage('linter-php'), atom.packages.activatePackage('language-php')]).then(function () {
        return atom.workspace.open(badPath);
      });
    });
  });

  it('should be in the packages list', function () {
    return expect(atom.packages.isPackageLoaded('linter-php')).toBe(true);
  });

  it('should be an active package', function () {
    return expect(atom.packages.isPackageActive('linter-php')).toBe(true);
  });

  describe('checks bad.php and', function () {
    var editor = null;
    beforeEach(function () {
      waitsForPromise(function () {
        return atom.workspace.open(badPath).then(function (openEditor) {
          editor = openEditor;
        });
      });
    });

    it('finds at least one message', function () {
      waitsForPromise(function () {
        return lint(editor).then(function (messages) {
          return expect(messages.length).toBe(1);
        });
      });
    });

    it('verifies that message', function () {
      waitsForPromise(function () {
        return lint(editor).then(function (messages) {
          expect(messages[0].type).toBe('Error');
          expect(messages[0].html).not.toBeDefined();
          expect(messages[0].text).toBe('syntax error, unexpected \'{\'');
          expect(messages[0].filePath).toBe(badPath);
          expect(messages[0].range).toEqual([[1, 0], [1, 6]]);
        });
      });
    });
  });

  it('finds nothing wrong with an empty file', function () {
    waitsForPromise(function () {
      return atom.workspace.open(emptyPath).then(function (editor) {
        return lint(editor).then(function (messages) {
          return expect(messages.length).toBe(0);
        });
      });
    });
  });

  it('finds nothing wrong with a valid file', function () {
    waitsForPromise(function () {
      return atom.workspace.open(goodPath).then(function (editor) {
        return lint(editor).then(function (messages) {
          return expect(messages.length).toBe(0);
        });
      });
    });
  });

  it('handles fatal errors', function () {
    waitsForPromise(function () {
      return atom.workspace.open(fatalPath).then(function (editor) {
        return lint(editor).then(function (messages) {
          expect(messages[0].type).toBe('Error');
          expect(messages[0].text).toBe('Cannot redeclare Test\\A::foo()');
          expect(messages[0].filePath).toBe(fatalPath);
          expect(messages[0].range).toEqual([[10, 4], [10, 25]]);
        });
      });
    });
  });
});
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/Rad/.atom/packages/linter-php/spec/linter-php-spec.js
